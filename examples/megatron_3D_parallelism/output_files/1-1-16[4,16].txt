name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(3200, 1024);tensor([[ 1.9943e-03, -3.4834e-02,  2.9607e-02,  ..., -2.4178e-02,
          1.9153e-03,  8.4802e-03],
        [ 4.3804e-02,  2.3381e-02,  2.7762e-02,  ...,  9.8248e-03,
          3.4068e-03, -2.4057e-02],
        [ 3.7765e-05,  4.4255e-03,  8.3894e-03,  ..., -1.3967e-02,
          2.7844e-02, -2.1487e-02],
        ...,
        [-2.4665e-02, -9.8583e-03, -3.6590e-05,  ...,  4.8923e-02,
         -2.1875e-02,  1.3399e-02],
        [ 1.4579e-02,  8.5912e-03, -1.5406e-02,  ..., -8.7801e-03,
         -2.8739e-03, -1.2551e-03],
        [ 3.4701e-02, -9.0084e-03, -6.8480e-03,  ...,  1.2294e-02,
          1.1863e-03, -5.5401e-03]], device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-6.8370e-06, -6.2967e-07, -2.2953e-06,  ...,  4.7200e-06,
        -2.2815e-06, -2.7902e-06], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192, 1024);tensor([[ 0.0014, -0.0085, -0.0044,  ...,  0.0044,  0.0280, -0.0171],
        [ 0.0108, -0.0045,  0.0120,  ...,  0.0035,  0.0481,  0.0004],
        [-0.0329,  0.0112,  0.0207,  ...,  0.0253, -0.0037,  0.0073],
        ...,
        [-0.0118,  0.0294, -0.0146,  ...,  0.0040,  0.0231,  0.0075],
        [ 0.0320,  0.0138, -0.0147,  ..., -0.0110,  0.0244, -0.0025],
        [ 0.0333,  0.0274, -0.0039,  ..., -0.0143,  0.0060, -0.0260]],
       device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192,);tensor([ 2.6340e-08, -1.3101e-07,  7.2781e-08,  7.1296e-09, -3.8033e-08,
        -1.1384e-08,  7.1126e-08,  1.2403e-07, -1.0979e-07, -2.7642e-08,
         3.1012e-07,  1.5171e-08, -1.4585e-07, -2.5183e-07, -1.0986e-08,
        -9.9561e-08, -9.6312e-08, -1.3284e-08,  7.8300e-08,  1.6317e-07,
         3.0335e-08,  1.2960e-07, -1.0500e-07, -5.4242e-08,  7.6999e-08,
         5.2780e-08,  5.2139e-08, -1.0981e-07,  5.5130e-08, -1.5428e-07,
        -5.5078e-09,  1.1093e-07, -7.9386e-08,  6.0208e-08, -1.0089e-07,
        -1.6759e-07,  4.0992e-08, -1.2367e-07, -2.6131e-08,  1.9737e-07,
         2.9276e-08,  1.0842e-07,  8.4441e-08,  1.0958e-07,  1.2082e-09,
         4.7978e-09,  2.0726e-08,  8.7082e-08, -7.4482e-08, -3.8914e-08,
        -7.4986e-08, -2.2337e-08,  7.3844e-08,  1.0544e-07, -7.3194e-08,
         1.3796e-07,  6.4990e-08, -2.1887e-07,  6.0255e-08,  1.2569e-07,
        -1.2534e-08,  8.7275e-08,  2.0320e-08,  3.7067e-08,  7.4887e-16,
         3.7778e-15, -1.3339e-15, -6.4373e-15, -1.8220e-15,  5.1913e-15,
         8.1188e-16, -7.0690e-16,  4.7911e-15,  4.3666e-15, -9.7208e-15,
        -5.9307e-15, -1.2268e-15, -2.1167e-15, -1.2606e-15,  2.9270e-15,
        -1.6462e-15, -3.7932e-15, -9.8268e-16, -5.7836e-15, -1.4133e-15,
         9.6350e-16,  8.3403e-15, -5.7709e-15, -2.2822e-15,  1.0639e-15,
         1.2077e-15, -5.9686e-16, -1.3829e-15,  5.3696e-15, -3.5753e-15,
        -4.2180e-16,  1.2633e-15, -2.5257e-15,  1.5661e-15,  8.6904e-16,
         5.4356e-17,  8.5169e-15, -1.7780e-15, -6.2164e-16,  2.2475e-15,
        -2.7088e-15,  2.1378e-15, -1.7128e-15,  5.3389e-15,  5.5079e-15,
         1.8854e-15, -1.6299e-15, -2.5366e-16, -6.1924e-15,  2.8868e-15,
         3.1924e-15,  1.5012e-15, -9.4724e-16,  2.1759e-15, -5.4610e-16,
        -7.3784e-15, -2.1076e-16, -3.8340e-15, -4.1852e-15,  5.3749e-15,
         8.4362e-15,  1.5294e-15,  1.5438e-15, -4.0331e-06,  6.2260e-06,
         3.9801e-06, -1.8876e-05,  1.2121e-05,  4.0730e-06, -1.3680e-05,
        -2.6275e-06, -8.4329e-06,  1.6759e-07, -1.8428e-06,  8.8366e-06,
         7.2856e-06,  3.1474e-06, -6.9366e-07,  2.2357e-07,  1.4356e-05,
         6.7649e-06,  3.6658e-06,  1.8438e-06, -2.1088e-06,  5.5732e-06,
         3.9639e-06,  7.4906e-06,  7.0516e-07, -1.1572e-06, -1.2145e-06,
        -4.5840e-06, -1.1575e-06, -1.0162e-05,  1.1250e-05, -2.1357e-06,
        -7.0991e-06, -6.7256e-06, -1.2566e-05,  3.7604e-06,  4.0009e-06,
         3.2448e-06,  7.5809e-07, -5.4532e-06,  5.8837e-07, -8.4555e-06,
         3.0795e-06,  9.9051e-06, -9.6895e-07,  3.1679e-06, -1.6178e-06,
        -2.8039e-06, -7.5220e-06, -2.4283e-06,  3.2191e-06,  1.2411e-06,
         6.8001e-06,  8.2315e-06, -7.9570e-06,  1.5075e-06,  8.8636e-06,
        -4.1420e-06,  2.2742e-06, -5.4039e-06,  4.1372e-06,  5.5981e-06,
        -3.2907e-06, -2.9719e-06], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024, 64);tensor([[ 0.0057, -0.0021, -0.0003,  ..., -0.0134,  0.0207,  0.0001],
        [-0.0047,  0.0166, -0.0010,  ...,  0.0018,  0.0141,  0.0325],
        [-0.0054, -0.0127, -0.0073,  ...,  0.0051, -0.0131, -0.0185],
        ...,
        [-0.0024,  0.0032,  0.0223,  ..., -0.0095,  0.0208,  0.0067],
        [ 0.0296,  0.0064, -0.0014,  ...,  0.0112,  0.0028, -0.0110],
        [ 0.0019, -0.0027,  0.0033,  ..., -0.0077,  0.0235, -0.0114]],
       device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024,);tensor([-2.8643e-05,  1.4121e-05,  2.6624e-05,  ..., -1.0501e-05,
        -7.4630e-06,  7.3358e-06], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-1.0457e-06,  5.2020e-07,  9.7062e-07,  ..., -2.7887e-07,
        -2.7312e-07,  2.6215e-07], device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256, 1024);tensor([[ 0.0017, -0.0229, -0.0081,  ..., -0.0266,  0.0277, -0.0062],
        [ 0.0034,  0.0059, -0.0161,  ...,  0.0019, -0.0117, -0.0162],
        [-0.0114, -0.0003, -0.0088,  ..., -0.0117, -0.0039,  0.0101],
        ...,
        [ 0.0039,  0.0036,  0.0131,  ...,  0.0071,  0.0264, -0.0051],
        [ 0.0618,  0.0035,  0.0007,  ..., -0.0068,  0.0155,  0.0088],
        [ 0.0056, -0.0304, -0.0611,  ...,  0.0019,  0.0430,  0.0127]],
       device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256,);tensor([ 3.9315e-07, -4.1108e-07, -3.1604e-08,  1.9031e-07, -6.1979e-08,
        -2.3121e-07, -4.7573e-07,  6.8097e-07,  3.0980e-07,  1.2871e-07,
         4.1686e-07,  3.1051e-07,  2.3045e-07,  3.1221e-07, -1.6978e-08,
         1.4873e-07, -4.0881e-07,  2.5231e-07,  4.9083e-07,  1.1101e-09,
        -3.7961e-07,  8.2820e-07, -3.5503e-07,  4.2316e-07,  6.4227e-07,
         2.0398e-07, -1.4044e-07, -1.8752e-07, -2.0459e-07,  3.7778e-07,
         3.5483e-07,  3.8408e-08,  1.7450e-07,  7.7313e-08,  4.5201e-08,
         6.0887e-08,  2.3170e-07,  2.9907e-07, -1.7609e-07, -4.3975e-07,
        -1.2254e-07, -2.0745e-07, -8.9436e-08, -2.6352e-07,  6.4332e-07,
         5.2700e-07, -6.4325e-08, -5.4696e-08,  3.1856e-07,  1.2097e-07,
         3.5229e-07,  3.3703e-07, -2.1252e-07,  3.5278e-07,  3.8188e-07,
        -4.6240e-07, -4.3812e-07, -2.0119e-07, -7.3772e-07, -2.0576e-07,
         1.8669e-07, -1.2750e-07, -5.0203e-07, -1.3777e-07, -2.6651e-07,
        -3.7181e-07, -6.8994e-07, -2.0139e-08, -3.6184e-07,  3.8960e-08,
         3.3714e-07, -2.9814e-08,  1.4254e-07, -1.2957e-08, -1.5842e-07,
        -2.9513e-07,  7.8654e-08,  2.1816e-08, -7.7936e-09, -5.3338e-07,
        -1.2088e-07, -5.6959e-07, -6.3775e-08, -4.4549e-07,  1.0008e-07,
        -4.4912e-08, -1.4183e-07, -2.9318e-07, -4.0996e-07,  2.0630e-07,
        -1.1025e-07,  5.5468e-07, -1.3167e-07,  6.1532e-07,  1.5925e-07,
        -6.8660e-08, -2.7739e-07,  4.2308e-07,  5.0933e-07,  2.9437e-07,
        -1.1729e-07, -3.1217e-07,  2.5697e-07,  1.1116e-08, -2.5803e-07,
        -3.9630e-07,  5.1451e-07, -2.4633e-07,  4.9297e-07,  2.0786e-08,
        -5.0139e-08,  1.7985e-07, -2.5847e-07, -1.7441e-07, -2.8947e-07,
        -8.2828e-08, -3.6668e-07, -1.4395e-07, -1.8721e-07,  5.7186e-07,
         1.3374e-07, -2.3094e-07,  3.8318e-07,  4.1236e-07,  3.1154e-08,
        -4.3391e-07, -2.4865e-09, -3.1080e-07,  5.2155e-07, -1.2300e-08,
        -6.6517e-07, -1.5981e-07, -1.0369e-07, -7.5259e-08,  1.6222e-08,
         1.8888e-07, -1.5590e-08, -1.3085e-07,  4.9474e-08,  3.5583e-07,
        -8.3791e-08,  3.0812e-07, -5.3794e-07, -8.2941e-08, -1.7273e-07,
         9.7967e-08,  1.8877e-07, -2.4079e-08,  4.4634e-07, -3.1354e-07,
        -7.9892e-07, -3.3329e-07, -4.5219e-07,  3.9923e-07,  3.5169e-07,
        -3.6152e-08,  5.1021e-07, -3.2998e-07,  1.8964e-07, -3.3230e-07,
         8.7279e-08,  3.2776e-07,  3.7049e-07,  4.2477e-07,  1.9743e-07,
         5.4099e-07,  3.6175e-07, -5.1904e-08, -1.3755e-07,  8.6537e-08,
         6.1139e-07,  2.5528e-07,  1.0445e-07, -2.0603e-07,  1.6813e-07,
         4.7334e-07,  1.9885e-07, -4.7129e-07, -2.4623e-07, -1.7399e-07,
         1.0348e-09,  2.7312e-07, -2.7900e-07, -2.7310e-07, -3.1403e-07,
        -3.0177e-08, -5.4501e-07, -6.2742e-07,  2.2479e-08, -7.3364e-07,
        -1.6311e-07, -1.0319e-07, -1.0615e-07,  4.3925e-07, -6.8942e-09,
         2.5771e-08, -1.1922e-07, -1.0445e-07,  1.5243e-07, -2.4945e-07,
         5.0567e-07, -1.5541e-07,  3.7343e-08, -2.2972e-07,  5.9019e-07,
         2.4584e-07, -1.7014e-07, -9.4747e-08, -7.8590e-08,  5.5871e-07,
         2.5031e-07, -4.3127e-07,  2.4688e-07, -1.7897e-07, -2.9901e-07,
        -6.2432e-07,  9.6410e-07,  5.6571e-08, -7.0753e-08, -4.1532e-07,
        -4.1146e-07,  1.4319e-07,  4.3667e-07, -5.4159e-08,  1.9916e-07,
        -2.3467e-07,  1.4976e-07,  5.1366e-08, -1.1883e-07,  1.4091e-08,
        -2.6277e-07, -1.3434e-08,  2.0476e-07, -6.2810e-07,  8.6628e-08,
         3.8783e-07,  1.1407e-06, -1.3544e-08, -1.5746e-07, -1.7542e-07,
         5.0402e-07, -5.5000e-07, -1.1472e-07,  2.7102e-07, -1.8096e-07,
         5.8489e-07, -3.3044e-08,  5.7071e-07,  2.2084e-07, -3.5138e-07,
        -4.6381e-07,  1.6070e-07, -2.9835e-08, -5.7293e-07, -1.6407e-07,
        -1.4149e-07], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024, 256);tensor([[-0.0063, -0.0150, -0.0027,  ...,  0.0155,  0.0089,  0.0106],
        [ 0.0057, -0.0001, -0.0142,  ...,  0.0186, -0.0056,  0.0052],
        [-0.0180, -0.0025,  0.0140,  ...,  0.0024, -0.0086, -0.0164],
        ...,
        [ 0.0110, -0.0181, -0.0123,  ..., -0.0014,  0.0134, -0.0084],
        [-0.0193, -0.0166, -0.0103,  ..., -0.0115,  0.0033, -0.0151],
        [-0.0126,  0.0238, -0.0097,  ...,  0.0245, -0.0164,  0.0074]],
       device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([ 3.5072e-07, -6.1701e-07, -5.7381e-07,  ..., -3.1622e-06,
        -7.0885e-09,  3.4073e-07], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 2.9947e-07, -1.6608e-07, -6.6290e-07,  ..., -8.2493e-07,
        -1.9948e-07, -2.9883e-07], device='cuda:0');
