name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(3200, 1024);tensor([[-0.0365, -0.0332,  0.0404,  ..., -0.0014, -0.0038,  0.0174],
        [-0.0118,  0.0006, -0.0167,  ..., -0.0100,  0.0096, -0.0143],
        [-0.0298,  0.0279, -0.0450,  ...,  0.0288,  0.0273,  0.0004],
        ...,
        [-0.0413, -0.0129,  0.0127,  ...,  0.0039,  0.0137, -0.0296],
        [ 0.0150, -0.0262,  0.0084,  ...,  0.0382,  0.0033, -0.0145],
        [-0.0018,  0.0190, -0.0211,  ..., -0.0081, -0.0068,  0.0123]],
       device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-6.8370e-06, -6.2967e-07, -2.2953e-06,  ...,  4.7200e-06,
        -2.2815e-06, -2.7902e-06], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192, 1024);tensor([[ 0.0130, -0.0038,  0.0245,  ..., -0.0175,  0.0092, -0.0395],
        [-0.0124, -0.0191,  0.0171,  ...,  0.0144, -0.0093, -0.0319],
        [-0.0218, -0.0207,  0.0200,  ..., -0.0027, -0.0205,  0.0092],
        ...,
        [ 0.0188,  0.0036, -0.0255,  ...,  0.0427,  0.0361,  0.0087],
        [-0.0101,  0.0072, -0.0332,  ...,  0.0067, -0.0017,  0.0144],
        [ 0.0057,  0.0231,  0.0003,  ..., -0.0074,  0.0036,  0.0031]],
       device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192,);tensor([ 8.5892e-08,  4.3373e-08, -5.7214e-08, -1.0771e-07,  9.2632e-09,
         1.8595e-07,  1.6887e-07,  1.2837e-07,  1.0999e-07, -6.9792e-08,
        -1.5546e-08,  3.5877e-08,  1.2140e-07, -9.1105e-09,  8.2665e-08,
        -1.5057e-08,  3.5259e-08, -6.4419e-08,  9.3101e-08, -1.0154e-07,
         5.3566e-08, -1.0757e-07, -4.3828e-08,  1.1286e-07,  9.0514e-08,
        -6.3884e-08, -4.2822e-08,  1.4162e-07,  1.4598e-07, -4.9050e-08,
         5.6725e-08,  6.2912e-08,  9.9903e-09,  2.4468e-07,  6.9322e-08,
         3.2801e-07,  7.9101e-08,  8.7186e-08, -1.4849e-08, -7.2558e-08,
         1.0996e-07,  1.3812e-07, -1.1130e-07, -2.5030e-08,  1.0284e-07,
         6.1710e-08,  1.4688e-07,  3.4445e-08,  1.5860e-07, -3.7244e-08,
         9.1184e-08, -7.5630e-08, -2.1672e-07, -5.6966e-08,  4.8880e-08,
         1.1429e-07, -1.2648e-07,  4.3677e-08,  8.8345e-08,  1.3088e-07,
        -3.8689e-07,  1.1975e-07, -1.8491e-07, -3.5084e-08, -7.7804e-16,
         1.7674e-15,  2.0538e-15, -6.3872e-15, -3.8252e-15,  1.2499e-15,
        -1.1191e-16,  4.2366e-17, -6.2491e-15, -7.7485e-16,  1.1186e-15,
        -3.0163e-15,  7.9030e-16,  1.6376e-15, -2.1633e-15,  5.4650e-16,
         1.7351e-15, -4.0687e-15, -6.8425e-16,  6.2110e-16,  1.6824e-15,
         2.8111e-16,  3.1807e-15,  3.7165e-15,  2.4594e-16, -3.2529e-15,
         8.0893e-15,  1.2124e-17,  2.3570e-15,  3.1151e-15, -2.1005e-15,
        -2.4634e-15,  6.2300e-15,  1.5926e-15, -4.5849e-15,  3.3509e-15,
        -6.8340e-15, -4.5409e-15,  1.8119e-17,  5.0469e-15,  1.5881e-16,
         4.3957e-15, -2.1663e-16, -4.2150e-15,  3.4996e-15,  1.9163e-15,
         1.5265e-15,  2.1489e-15,  9.4964e-16, -7.4802e-15, -2.8351e-16,
        -3.1287e-15,  3.2347e-16, -4.7349e-16,  6.4375e-15,  1.6384e-15,
        -2.9784e-15, -1.1431e-15,  3.0109e-15,  4.6123e-15,  4.3059e-15,
         4.6080e-15,  6.5627e-16,  3.7437e-16, -3.7452e-06,  4.5806e-07,
         2.6600e-06, -3.6468e-06, -3.4269e-06, -1.6770e-05,  8.4202e-06,
        -5.8995e-06, -1.6215e-06, -3.3949e-06,  8.7583e-07, -3.1629e-06,
         1.6187e-06,  3.8987e-06, -5.3807e-07, -8.8874e-07, -1.1981e-06,
         1.5951e-05, -6.9759e-06,  8.1012e-06, -1.0133e-06,  4.1567e-06,
        -1.7277e-06,  3.1087e-07, -2.2103e-07,  5.1008e-06, -3.8986e-06,
        -4.0538e-06, -3.2039e-07,  9.6337e-07,  3.7002e-06,  1.2976e-06,
        -3.5966e-06, -5.1534e-06,  2.4580e-06,  4.8946e-06, -9.3324e-06,
        -9.9595e-07, -6.1057e-06,  5.5357e-06, -5.6394e-06,  8.7571e-06,
        -4.9322e-06,  2.5565e-06,  5.6076e-06,  1.2322e-06,  1.1123e-05,
         1.0691e-05,  5.8644e-06, -2.0179e-06,  6.2106e-06,  2.7436e-06,
        -5.2378e-07,  4.2936e-06, -8.5993e-07, -1.3153e-07, -8.6205e-06,
        -1.4365e-06,  1.0023e-05, -8.4216e-06, -2.4339e-06,  1.4674e-07,
        -1.3747e-05,  3.3141e-07], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024, 64);tensor([[-0.0170, -0.0092,  0.0234,  ...,  0.0112,  0.0016,  0.0176],
        [-0.0098, -0.0236,  0.0035,  ..., -0.0114,  0.0224, -0.0097],
        [-0.0320, -0.0033, -0.0119,  ..., -0.0061,  0.0162,  0.0182],
        ...,
        [-0.0067,  0.0044, -0.0148,  ..., -0.0074, -0.0099, -0.0034],
        [-0.0276, -0.0098, -0.0137,  ..., -0.0224,  0.0047,  0.0046],
        [-0.0183,  0.0339, -0.0036,  ...,  0.0257,  0.0021, -0.0231]],
       device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024,);tensor([-2.8643e-05,  1.4121e-05,  2.6624e-05,  ..., -1.0501e-05,
        -7.4630e-06,  7.3358e-06], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-1.0457e-06,  5.2020e-07,  9.7062e-07,  ..., -2.7887e-07,
        -2.7312e-07,  2.6215e-07], device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256, 1024);tensor([[ 0.0059,  0.0149,  0.0156,  ..., -0.0219, -0.0196, -0.0098],
        [ 0.0155,  0.0143,  0.0329,  ...,  0.0149, -0.0305,  0.0306],
        [-0.0070,  0.0024,  0.0124,  ...,  0.0120, -0.0405, -0.0312],
        ...,
        [ 0.0178, -0.0303,  0.0037,  ...,  0.0286, -0.0060, -0.0168],
        [ 0.0099, -0.0100,  0.0219,  ...,  0.0183,  0.0123, -0.0351],
        [-0.0133,  0.0075,  0.0278,  ..., -0.0086,  0.0103,  0.0003]],
       device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256,);tensor([-1.2674e-07,  4.9397e-07,  1.7026e-07,  4.9187e-07, -2.2362e-09,
        -9.6695e-08, -4.0409e-07, -1.6838e-08,  2.2787e-07, -1.0099e-06,
        -6.9500e-08, -2.4764e-07, -6.6226e-09,  2.6853e-07,  3.9546e-07,
        -5.1442e-08,  1.0678e-07,  5.2153e-08,  6.6998e-07, -3.4397e-07,
         1.7390e-07, -3.4211e-07,  7.1388e-07, -1.8356e-07,  5.4649e-07,
         3.1979e-07,  1.5995e-07, -2.8662e-07, -7.7823e-08,  4.0562e-07,
         3.9664e-07,  1.9286e-07, -4.5939e-08,  4.4541e-07,  3.5466e-07,
        -2.0245e-07,  3.8113e-07,  6.8837e-07,  7.9880e-08, -2.5193e-07,
        -2.2073e-07, -2.2970e-07,  2.3918e-07,  3.1581e-07, -1.5332e-07,
        -3.9850e-07, -3.6088e-07,  1.1013e-06,  6.3046e-08, -8.7648e-09,
         3.1459e-07,  2.3561e-07,  3.5041e-07, -1.8905e-07, -3.8227e-08,
         9.8788e-08, -4.5898e-07, -5.1285e-08,  8.5418e-09, -4.3395e-09,
         6.0740e-07,  2.4402e-07, -6.6703e-07, -3.7902e-07, -9.3350e-07,
         3.6380e-07,  3.2324e-07, -7.7366e-08, -3.0419e-07, -4.5409e-07,
        -5.4431e-07, -4.7453e-07, -1.0462e-07,  1.2627e-07, -2.3412e-07,
        -6.5531e-07,  4.2857e-07, -9.3969e-08,  4.9183e-07, -5.0857e-07,
         1.6475e-08,  4.8922e-07, -8.7440e-07,  1.0921e-07,  1.1618e-07,
        -6.3037e-07,  3.4226e-07, -2.1292e-07,  4.2849e-07,  8.8620e-09,
        -2.3816e-07, -2.0832e-07, -2.9120e-07, -3.4867e-07, -2.4727e-07,
        -7.3211e-07,  3.2316e-08, -7.5089e-08, -2.7344e-07,  3.8509e-07,
        -3.2970e-07, -5.6497e-07,  6.9131e-07, -2.0626e-07, -1.8092e-07,
        -1.7021e-07,  2.0848e-07,  5.8015e-07,  5.2480e-08, -1.8031e-07,
        -6.1873e-08, -2.9549e-07,  1.4107e-07,  1.4787e-07, -3.1880e-07,
        -8.2997e-08,  2.0348e-07,  1.2069e-07,  2.5905e-07, -4.7331e-07,
        -3.1382e-07, -4.7547e-07, -2.0995e-07,  4.2207e-07, -2.0095e-07,
         1.4210e-08,  5.3863e-07, -4.9266e-07,  2.8363e-07, -3.3258e-07,
        -7.8346e-07,  8.2623e-07, -1.0686e-07, -1.3578e-08,  1.0446e-07,
         4.8894e-07, -3.7867e-07,  4.3588e-08,  1.7271e-07,  7.6818e-07,
        -7.3015e-08, -1.3584e-07,  6.6030e-08, -1.5671e-07, -5.3908e-07,
        -4.2039e-07, -2.7919e-07,  9.7454e-08, -2.7223e-07, -3.5237e-07,
         2.9356e-07, -5.6704e-08,  3.6331e-07,  9.9312e-08, -1.7230e-08,
        -3.1207e-07,  7.8294e-07, -1.4120e-07, -5.0180e-07,  1.1107e-07,
        -1.0775e-06,  3.4528e-08, -8.5436e-07,  1.8514e-07, -6.5442e-07,
         3.5226e-07,  6.4706e-07, -5.3906e-07,  1.0029e-07,  3.4148e-07,
        -3.4389e-07,  4.5904e-08, -2.2108e-07, -1.5723e-07,  4.9172e-07,
        -2.1270e-07,  7.0278e-07,  4.3415e-07, -6.2466e-07, -4.2996e-07,
        -2.1392e-07, -2.7105e-07,  3.1546e-07,  5.5924e-07, -4.0602e-07,
         7.1436e-07,  3.2406e-07, -5.8105e-09,  5.0537e-07, -6.1904e-07,
        -1.6832e-07,  2.9715e-07, -4.0085e-07, -3.4085e-07, -5.6236e-07,
         9.6857e-08,  2.7787e-07,  4.1238e-08,  4.9723e-07,  1.5093e-08,
         3.7749e-07, -2.4253e-07, -3.7767e-07, -2.3786e-07,  9.4871e-08,
         4.0665e-07,  4.7870e-08, -5.8409e-07,  3.9990e-07, -4.6378e-07,
        -4.8849e-07, -6.1437e-07,  1.9699e-08, -1.0249e-07, -5.2747e-07,
        -1.5889e-07, -3.3824e-07, -3.0262e-07,  1.4460e-07, -2.2997e-07,
        -1.9450e-07, -2.2203e-07,  6.5020e-08,  4.3043e-08,  2.3273e-08,
         4.7591e-08, -3.6482e-07, -4.4494e-07, -1.1445e-07,  7.3410e-08,
         1.5005e-07,  2.5275e-07,  1.7869e-07,  2.4754e-08,  3.4686e-08,
         8.3865e-08, -1.7398e-07, -4.1997e-07, -6.3892e-07,  5.6381e-08,
        -8.4225e-08, -1.9436e-07, -3.6214e-07,  4.7992e-08, -2.9228e-07,
        -1.9776e-07, -2.7888e-07,  2.7673e-07, -4.9900e-07,  4.8571e-07,
        -3.4933e-09,  3.3203e-07, -4.7996e-07, -9.3571e-08,  3.1632e-07,
         3.5769e-08], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024, 256);tensor([[ 0.0238, -0.0056, -0.0112,  ...,  0.0038, -0.0192,  0.0111],
        [ 0.0185, -0.0226, -0.0209,  ...,  0.0037,  0.0016,  0.0164],
        [-0.0063, -0.0002, -0.0243,  ...,  0.0135, -0.0067,  0.0018],
        ...,
        [-0.0039, -0.0038,  0.0136,  ...,  0.0219, -0.0112, -0.0278],
        [ 0.0106, -0.0304, -0.0178,  ...,  0.0192, -0.0069, -0.0111],
        [ 0.0117,  0.0012,  0.0194,  ..., -0.0118,  0.0020,  0.0071]],
       device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([ 3.5072e-07, -6.1701e-07, -5.7381e-07,  ..., -3.1622e-06,
        -7.0885e-09,  3.4073e-07], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 2.9947e-07, -1.6608e-07, -6.6290e-07,  ..., -8.2493e-07,
        -1.9948e-07, -2.9883e-07], device='cuda:0');
