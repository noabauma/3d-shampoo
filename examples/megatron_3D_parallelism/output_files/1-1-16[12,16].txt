name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(3200, 1024);tensor([[ 0.0085, -0.0065, -0.0195,  ..., -0.0022,  0.0278,  0.0224],
        [-0.0145, -0.0115, -0.0189,  ...,  0.0125,  0.0154, -0.0035],
        [ 0.0285, -0.0064, -0.0014,  ..., -0.0152,  0.0166,  0.0266],
        ...,
        [ 0.0050,  0.0011,  0.0230,  ..., -0.0088, -0.0084,  0.0143],
        [-0.0233,  0.0013, -0.0136,  ..., -0.0126, -0.0159,  0.0073],
        [ 0.0140,  0.0301, -0.0183,  ...,  0.0530, -0.0192, -0.0464]],
       device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-6.8370e-06, -6.2967e-07, -2.2953e-06,  ...,  4.7200e-06,
        -2.2815e-06, -2.7902e-06], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192, 1024);tensor([[-0.0006,  0.0464, -0.0270,  ..., -0.0386,  0.0012, -0.0015],
        [ 0.0300, -0.0208,  0.0022,  ..., -0.0397,  0.0387, -0.0103],
        [-0.0080, -0.0084, -0.0082,  ...,  0.0104,  0.0161, -0.0005],
        ...,
        [ 0.0018,  0.0078, -0.0237,  ...,  0.0207, -0.0065, -0.0018],
        [-0.0207,  0.0051, -0.0006,  ..., -0.0113, -0.0025,  0.0111],
        [-0.0361, -0.0019,  0.0162,  ..., -0.0231, -0.0019,  0.0047]],
       device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192,);tensor([ 5.4397e-08,  4.2469e-08,  2.7474e-08, -2.6677e-08,  1.4454e-07,
        -1.3722e-07,  4.4211e-08,  1.4582e-07, -1.6964e-08, -5.7616e-09,
        -3.4964e-08,  5.1676e-08, -8.4417e-08,  1.4473e-07, -1.2936e-07,
        -1.3639e-07, -2.2654e-08,  8.3287e-08,  1.3480e-08,  7.7139e-08,
        -5.2158e-08,  1.0952e-08, -1.7875e-07,  8.9083e-08, -4.1766e-08,
         1.1774e-07,  3.4665e-08, -2.7732e-07,  3.0108e-08,  1.0914e-07,
         5.5675e-08,  9.9689e-09,  1.4240e-08, -8.4483e-08,  1.2239e-07,
        -7.4625e-08,  8.4828e-08, -8.9278e-08,  1.0737e-07, -2.1603e-08,
         1.4112e-07, -2.5331e-08, -5.9665e-08,  1.2050e-07, -1.8817e-07,
        -1.3008e-07, -3.4048e-08, -1.0759e-07,  8.6898e-08, -5.9755e-08,
        -2.7170e-08, -7.8501e-08, -1.4197e-08, -1.7338e-07, -2.1663e-08,
         1.3187e-07,  1.8102e-07,  2.7945e-08,  1.1019e-07,  1.6667e-07,
         1.7080e-07,  5.1968e-08, -1.0730e-07, -1.4596e-08,  2.3030e-15,
        -1.6383e-15, -2.5073e-16, -1.3870e-15,  1.2974e-15,  2.6930e-15,
        -4.9694e-16,  8.7983e-16, -7.7045e-15, -1.8188e-15, -2.2475e-15,
         3.7346e-15,  1.1641e-15,  1.8664e-15, -8.7786e-15, -7.1873e-15,
         1.7442e-15, -2.9078e-15, -4.9571e-15, -5.9219e-16,  1.2659e-15,
         2.9073e-15, -1.1266e-15,  5.4037e-16, -8.2872e-15,  1.9217e-15,
         3.5665e-15,  9.2534e-15, -1.0829e-15,  2.9438e-15,  2.9571e-15,
        -6.0789e-15,  2.2800e-15,  1.4759e-15,  6.0618e-16,  2.3403e-15,
         1.6280e-15, -3.0498e-15,  1.2193e-15, -6.0165e-16,  2.7068e-15,
        -1.0473e-15, -4.1809e-15, -1.4556e-15,  3.0083e-16, -3.5180e-15,
         1.8244e-15, -1.2254e-15, -5.7802e-15,  9.4138e-16, -1.5702e-15,
         1.9608e-15, -4.3331e-15,  3.0189e-16,  1.1668e-15, -4.7370e-15,
        -1.4431e-15,  6.9012e-17,  2.2726e-15,  1.6946e-16, -6.7839e-16,
         4.0861e-15, -3.3472e-15, -3.3051e-15, -1.4390e-06,  4.1225e-07,
         7.2991e-06, -7.2423e-06, -4.8202e-06,  4.1129e-07,  5.7830e-06,
         5.0773e-06,  8.3097e-06,  7.8882e-06,  3.6852e-06,  6.3091e-07,
        -2.2852e-06, -1.5989e-06,  5.8410e-06, -1.2776e-06,  3.1227e-06,
        -8.4759e-07, -8.8428e-06, -6.4834e-06, -1.4152e-05, -7.0713e-06,
        -5.9312e-06,  1.4018e-05,  7.6392e-06,  3.2489e-06,  8.7286e-06,
        -5.0720e-06, -2.8596e-06,  3.3577e-06, -5.4424e-06,  3.0351e-06,
         7.3490e-06,  3.8244e-06,  5.8781e-06,  4.6879e-06, -2.7546e-06,
         6.8712e-06,  2.7056e-06,  1.5998e-06, -7.3931e-07,  1.8804e-06,
         1.1439e-05, -1.7975e-06,  5.7448e-06,  7.0635e-06,  4.1930e-07,
        -9.8654e-06, -4.2691e-06,  1.4994e-06,  9.3618e-06,  1.1809e-06,
        -3.2860e-06, -1.0414e-05, -4.5283e-06,  1.6676e-06, -4.2331e-06,
         9.1951e-06,  2.9501e-07,  9.5140e-06,  6.4963e-06, -5.9665e-06,
        -8.3669e-06,  5.1603e-06], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024, 64);tensor([[-2.1166e-02,  1.3079e-03,  1.4073e-02,  ...,  3.3939e-03,
         -4.5712e-03, -1.7385e-05],
        [-9.5858e-03, -2.0343e-04, -1.5299e-02,  ...,  8.8309e-04,
         -1.3654e-02, -3.1421e-02],
        [-1.5381e-02,  1.5574e-02,  7.5101e-05,  ..., -2.2513e-02,
          8.2234e-03,  8.1724e-03],
        ...,
        [-1.5408e-02,  7.3229e-03,  8.7010e-03,  ...,  5.4542e-03,
         -3.7365e-03, -8.1943e-04],
        [ 2.4560e-02, -1.4059e-02,  1.8992e-02,  ..., -9.3296e-04,
         -1.8947e-03, -2.3166e-02],
        [ 3.6526e-03, -2.5502e-02, -4.0598e-03,  ...,  5.5951e-03,
          7.5073e-03, -1.5429e-02]], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024,);tensor([-2.8643e-05,  1.4121e-05,  2.6624e-05,  ..., -1.0501e-05,
        -7.4630e-06,  7.3358e-06], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-1.0457e-06,  5.2020e-07,  9.7062e-07,  ..., -2.7887e-07,
        -2.7312e-07,  2.6215e-07], device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256, 1024);tensor([[-0.0224,  0.0214, -0.0275,  ..., -0.0458,  0.0002, -0.0063],
        [ 0.0035,  0.0091,  0.0093,  ...,  0.0079,  0.0256, -0.0085],
        [ 0.0146,  0.0134,  0.0098,  ...,  0.0121,  0.0111,  0.0067],
        ...,
        [-0.0004,  0.0017,  0.0135,  ...,  0.0378, -0.0113,  0.0086],
        [ 0.0060, -0.0176, -0.0082,  ...,  0.0089,  0.0140, -0.0043],
        [-0.0013, -0.0137, -0.0158,  ...,  0.0148, -0.0126, -0.0020]],
       device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256,);tensor([-2.5566e-07,  2.2428e-07,  1.4302e-07, -2.4872e-07,  1.4936e-07,
        -8.9307e-07,  6.0629e-08,  3.6494e-07, -2.0662e-07, -4.6901e-07,
         8.7963e-08, -7.4714e-07, -1.2905e-07, -6.4001e-07, -2.3707e-07,
         1.8951e-08, -1.5663e-07,  6.1807e-08, -4.5108e-07, -9.8956e-08,
         1.5615e-07,  2.1539e-07, -3.3550e-07,  4.1283e-07, -2.7382e-07,
         1.8661e-08, -6.7810e-07,  2.4878e-07, -2.2547e-07,  3.0332e-08,
        -5.4211e-07, -9.1776e-08,  3.5023e-08,  7.1508e-07,  5.8429e-07,
        -9.8410e-08, -5.1331e-08,  2.1025e-07, -2.1584e-07,  4.3230e-08,
        -3.3204e-07,  2.3823e-07, -4.4980e-07,  7.0786e-07, -5.5607e-08,
         4.9092e-08, -4.3050e-07,  8.9480e-08,  1.2349e-07,  3.7142e-07,
        -2.7723e-08,  7.9746e-09,  2.3522e-07,  2.6814e-08,  1.7069e-07,
         2.0018e-07,  5.8078e-07,  3.5580e-07, -2.0459e-07,  3.1794e-07,
        -1.6983e-07, -8.7010e-07,  2.1565e-07,  2.5057e-07,  2.7271e-07,
         1.3649e-07, -1.3795e-07, -1.7686e-07, -3.2909e-07,  4.1209e-07,
         3.5289e-07, -2.9378e-07, -6.0795e-07,  3.5471e-07,  7.7535e-08,
        -4.1733e-07,  1.4163e-07,  7.3651e-07, -1.5341e-07,  7.5027e-07,
         5.2686e-07,  4.3981e-07,  1.4759e-07, -2.4147e-07,  7.6008e-07,
         8.0392e-07, -1.6732e-07,  1.6551e-07, -9.3469e-08,  1.5846e-07,
        -6.7447e-08, -1.2926e-07, -1.0985e-07, -3.2464e-07, -1.0433e-07,
        -9.9805e-07, -3.4380e-08,  1.3556e-07, -3.9178e-07, -9.3805e-09,
        -2.5747e-07, -2.5086e-07, -9.0522e-08, -5.4568e-07,  4.4083e-08,
        -2.1774e-07, -6.0294e-08,  2.6078e-07, -6.1579e-08,  5.5984e-07,
         3.5033e-07,  4.5953e-07,  6.0381e-07,  4.3557e-07,  1.1783e-07,
         5.7902e-08,  3.9606e-07,  2.1667e-07,  1.3931e-07, -1.0436e-07,
         2.1026e-07, -3.6530e-07,  1.1414e-08,  1.0986e-07, -2.4307e-07,
        -1.7177e-07,  1.9387e-08,  3.0827e-07, -6.0685e-07,  5.8749e-07,
        -2.4319e-08,  1.1902e-07,  3.7643e-07,  2.4672e-07,  4.8088e-07,
        -2.8335e-07,  4.9559e-07,  4.9957e-07, -2.9847e-07,  5.8520e-08,
         7.7150e-07,  2.0082e-07,  3.3239e-07,  3.7257e-07, -5.9943e-07,
         2.3862e-07,  7.3544e-07,  1.3425e-07,  1.5871e-08, -3.6246e-07,
         3.7219e-08,  3.5605e-09,  3.4577e-08, -5.0862e-07, -4.9853e-07,
        -8.3137e-08,  3.8308e-07,  4.7489e-07,  2.2795e-08,  7.8178e-08,
        -6.2434e-08, -3.0579e-08, -7.7175e-08, -6.7528e-08, -1.3642e-07,
        -4.6468e-07, -1.2816e-07, -2.3279e-08,  2.3549e-07, -3.1077e-07,
        -5.1362e-08, -5.9295e-07,  3.8619e-07, -5.8784e-07, -2.6944e-07,
         2.6687e-07,  3.7552e-07,  1.5799e-07, -1.9741e-07,  1.3103e-07,
         1.7257e-08,  1.1246e-07, -1.6313e-08, -9.8766e-08, -2.8586e-07,
        -5.4708e-08, -1.2688e-07,  2.3409e-08, -2.9168e-07, -1.7119e-07,
        -2.2863e-07,  3.1189e-07,  4.0154e-07,  3.2828e-07, -9.8132e-07,
        -2.2863e-07, -1.3866e-07,  2.9813e-07, -3.0455e-07,  4.0629e-07,
         3.2392e-08, -1.7306e-07, -4.3792e-08, -1.3609e-07, -1.0013e-07,
         1.6993e-07, -2.3715e-08,  3.1378e-07,  3.3006e-07, -3.4719e-07,
        -3.9758e-07,  2.3738e-08, -5.6703e-08,  1.4528e-07, -2.2471e-07,
        -2.6706e-07,  5.8338e-07, -1.0548e-07, -5.3936e-08,  5.2690e-08,
         1.9657e-07, -1.8342e-07, -6.9115e-08,  1.2004e-07, -2.0541e-07,
         3.3690e-07,  4.2804e-07, -6.7430e-08, -6.0976e-07,  4.1304e-07,
        -1.7974e-07, -1.9266e-07,  1.2061e-07, -9.2516e-08, -6.6186e-07,
         4.4178e-07, -8.2851e-09,  3.9448e-07, -2.0979e-07,  3.5634e-07,
         7.2319e-07, -1.7779e-07,  4.1567e-07, -4.5487e-07,  3.7715e-07,
        -6.0862e-08, -1.3003e-07,  1.0029e-07,  7.6066e-08,  9.6178e-07,
         5.0673e-07, -9.3608e-08, -1.0649e-07,  1.0513e-07, -1.3756e-07,
        -4.5771e-07], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024, 256);tensor([[ 0.0065,  0.0007,  0.0125,  ...,  0.0078, -0.0023,  0.0111],
        [ 0.0090, -0.0298,  0.0005,  ..., -0.0133,  0.0036,  0.0271],
        [-0.0256, -0.0003, -0.0078,  ...,  0.0188,  0.0055,  0.0278],
        ...,
        [-0.0111, -0.0129, -0.0074,  ...,  0.0009,  0.0082, -0.0102],
        [ 0.0006, -0.0070, -0.0055,  ..., -0.0109,  0.0065, -0.0063],
        [-0.0094,  0.0012,  0.0469,  ..., -0.0140,  0.0070,  0.0045]],
       device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([ 3.5072e-07, -6.1701e-07, -5.7381e-07,  ..., -3.1622e-06,
        -7.0885e-09,  3.4073e-07], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 2.9947e-07, -1.6608e-07, -6.6290e-07,  ..., -8.2493e-07,
        -1.9948e-07, -2.9883e-07], device='cuda:0');
