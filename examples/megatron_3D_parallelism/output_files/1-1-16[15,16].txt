name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(3200, 1024);tensor([[ 3.1042e-02, -4.1180e-03, -2.6258e-02,  ...,  5.5708e-04,
          1.5879e-02, -2.0103e-02],
        [ 3.2250e-02,  1.5175e-02, -2.8630e-02,  ...,  1.7435e-02,
         -1.1833e-02,  3.7743e-02],
        [ 1.7038e-02, -1.6049e-02,  2.6455e-02,  ..., -3.0426e-02,
         -1.7835e-02, -2.6598e-03],
        ...,
        [ 2.2540e-02,  1.8899e-02, -2.0523e-02,  ..., -1.4907e-02,
         -9.5718e-03,  1.8027e-02],
        [-3.1235e-02, -9.5176e-05,  2.9383e-02,  ...,  3.6170e-03,
         -1.5379e-02, -1.3430e-04],
        [ 3.3485e-02, -1.9628e-02,  3.4687e-02,  ..., -4.0661e-02,
          1.9241e-02,  2.8949e-02]], device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-6.8370e-06, -6.2967e-07, -2.2953e-06,  ...,  4.7200e-06,
        -2.2815e-06, -2.7902e-06], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192, 1024);tensor([[ 0.0234,  0.0171,  0.0131,  ...,  0.0079,  0.0204, -0.0092],
        [ 0.0130, -0.0379, -0.0170,  ..., -0.0016,  0.0005, -0.0135],
        [-0.0241,  0.0142, -0.0115,  ...,  0.0373,  0.0279,  0.0270],
        ...,
        [ 0.0198, -0.0177, -0.0044,  ..., -0.0296,  0.0148,  0.0016],
        [-0.0159,  0.0008,  0.0254,  ..., -0.0066, -0.0035,  0.0386],
        [-0.0127, -0.0084,  0.0245,  ..., -0.0234, -0.0113,  0.0286]],
       device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192,);tensor([ 2.2721e-07, -9.1259e-08, -8.5403e-08, -8.5101e-09,  4.3629e-08,
         1.6860e-08,  5.7239e-08, -7.7026e-08,  1.3801e-08,  1.1376e-07,
         5.4595e-08, -3.8630e-08, -1.1689e-07, -1.4245e-08,  2.0010e-07,
         9.2440e-08,  3.4590e-08, -8.3577e-08, -1.5047e-07, -1.8302e-07,
         4.2281e-08, -8.1915e-08, -1.5360e-07,  1.3730e-07, -8.0333e-08,
         7.0425e-08,  3.1026e-07, -6.8256e-08, -3.8323e-08,  7.3783e-09,
         1.5489e-07,  8.3718e-08,  1.0469e-07, -5.8174e-08,  4.9442e-10,
         1.9688e-07,  4.6385e-08,  1.4953e-07,  2.5169e-08,  4.0043e-08,
         2.0511e-07,  5.3428e-08, -2.0343e-07,  1.0449e-07,  1.4062e-07,
        -4.0581e-08, -2.1936e-07,  4.5274e-11,  5.8215e-09, -7.7402e-08,
         1.2815e-08,  4.4656e-08, -2.8853e-08, -5.7467e-08, -1.3137e-07,
        -1.4889e-07,  5.2530e-08, -1.2327e-07, -1.0218e-07, -1.4115e-08,
         6.4137e-08,  3.6855e-08,  4.1647e-08,  2.6393e-08, -5.6280e-15,
        -1.2542e-15,  5.1255e-15, -7.0341e-15,  2.5722e-15, -7.2960e-15,
         5.1079e-16, -2.2150e-15, -1.2070e-16,  3.3920e-16, -1.6432e-15,
        -6.2782e-15,  2.2697e-15, -2.0866e-15,  1.6094e-16, -2.2601e-15,
        -1.5987e-16, -4.4841e-15, -5.4250e-15, -3.0005e-15, -3.8966e-15,
        -2.6725e-16,  6.0013e-15, -3.4431e-15, -5.6496e-15,  3.7442e-15,
        -2.5979e-15, -2.1391e-15, -2.0288e-15, -4.0919e-15,  2.6382e-15,
        -2.5649e-15,  3.6653e-15,  1.8892e-15, -2.2097e-15, -6.7626e-16,
        -3.7157e-15,  6.6320e-16, -3.9488e-15,  7.2038e-15,  3.3893e-16,
         7.2140e-15,  3.2880e-16,  1.6467e-15,  2.8188e-15,  2.5646e-15,
        -3.9366e-15,  1.5009e-15, -9.4298e-16, -2.8929e-15,  5.2697e-15,
         1.8822e-15, -2.2515e-16, -1.7633e-15, -1.3496e-15, -4.8868e-15,
         3.9611e-15, -3.4327e-15, -6.9560e-15, -1.4644e-15, -8.4679e-16,
         9.1660e-16,  4.5337e-15,  1.1420e-15, -3.6096e-06,  3.7090e-06,
        -7.4270e-06,  1.3747e-05,  1.6296e-06, -1.3750e-06, -1.9117e-06,
         3.4198e-06,  6.4680e-06,  1.5108e-06, -2.0271e-08,  2.1512e-06,
        -4.8957e-06,  1.1937e-05, -2.2938e-06,  8.0885e-06, -3.8333e-06,
         2.3388e-06,  7.5193e-06, -1.2520e-06,  5.9894e-06, -2.5761e-06,
         2.8147e-06, -1.2361e-05,  3.9415e-06, -3.7059e-06,  8.6347e-06,
        -1.5687e-06,  7.5879e-06, -8.3337e-08,  6.3400e-07, -1.1020e-05,
        -4.5001e-06, -4.4470e-06,  4.6760e-07,  2.5558e-06, -6.0327e-06,
         2.8090e-07,  1.0467e-05, -1.9721e-06,  1.2179e-05, -8.7924e-06,
        -9.4123e-06, -6.6672e-06, -5.2840e-06, -1.8924e-06,  4.6176e-06,
         3.9799e-06, -4.3058e-06, -1.7231e-09, -4.7158e-06,  4.7879e-06,
         4.7537e-07,  2.2290e-06, -1.0536e-05,  3.2187e-07, -2.5960e-06,
        -7.9182e-06, -7.9403e-07,  5.6075e-06,  1.0141e-05,  2.9221e-06,
         9.3371e-06, -5.4460e-06], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024, 64);tensor([[ 0.0034, -0.0027, -0.0024,  ...,  0.0041,  0.0140,  0.0025],
        [ 0.0143,  0.0035,  0.0024,  ..., -0.0039, -0.0009, -0.0042],
        [-0.0182, -0.0022,  0.0041,  ...,  0.0032, -0.0024, -0.0118],
        ...,
        [-0.0150,  0.0002, -0.0114,  ..., -0.0186,  0.0021,  0.0060],
        [-0.0221,  0.0014,  0.0019,  ..., -0.0134,  0.0035, -0.0029],
        [-0.0048, -0.0077,  0.0124,  ..., -0.0017,  0.0251,  0.0073]],
       device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024,);tensor([-2.8643e-05,  1.4121e-05,  2.6624e-05,  ..., -1.0501e-05,
        -7.4630e-06,  7.3358e-06], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-1.0457e-06,  5.2020e-07,  9.7062e-07,  ..., -2.7887e-07,
        -2.7312e-07,  2.6215e-07], device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256, 1024);tensor([[ 0.0078, -0.0187,  0.0533,  ..., -0.0305, -0.0060,  0.0230],
        [-0.0046, -0.0335,  0.0173,  ..., -0.0187, -0.0053,  0.0507],
        [ 0.0180, -0.0269,  0.0222,  ..., -0.0140,  0.0116, -0.0026],
        ...,
        [ 0.0049,  0.0167,  0.0139,  ..., -0.0113, -0.0038, -0.0375],
        [ 0.0173, -0.0073,  0.0143,  ...,  0.0168, -0.0458,  0.0172],
        [-0.0346, -0.0080, -0.0214,  ...,  0.0242, -0.0307,  0.0140]],
       device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256,);tensor([-2.1054e-07, -2.6725e-07,  5.5210e-07,  3.5000e-07,  6.1683e-08,
        -7.4127e-08,  4.4376e-07,  2.7282e-07,  6.2865e-07,  1.4768e-07,
         1.6972e-07, -3.8516e-07,  1.8164e-07, -3.4409e-07,  1.5141e-07,
        -9.0857e-08,  3.1020e-07,  9.5570e-08, -2.0357e-07, -2.9865e-07,
         1.7260e-07, -4.1285e-07,  2.2967e-07, -7.2377e-08, -6.4375e-08,
         1.7896e-07, -4.5534e-08, -5.7940e-07, -1.1976e-07,  3.7916e-07,
         9.9374e-07, -4.9013e-07, -2.3202e-07,  5.6041e-08,  5.6240e-07,
        -2.9585e-07,  3.5465e-07, -1.4211e-07,  7.5396e-08, -2.4474e-07,
        -9.9290e-08, -9.8853e-08,  2.9194e-08,  4.0159e-07, -5.3792e-07,
        -4.5995e-08,  3.6420e-09,  2.8053e-07, -4.3788e-07, -4.3181e-07,
         2.3287e-07,  2.1956e-08, -5.4983e-07,  5.2655e-07, -1.9322e-07,
         3.1440e-07, -2.8176e-07, -2.2054e-07,  8.0289e-07,  6.9597e-07,
         7.5651e-07, -9.4393e-07,  1.9756e-07,  9.1717e-08,  2.2180e-07,
        -1.5581e-07,  3.3338e-07,  5.9489e-08,  1.6099e-07,  8.6249e-08,
        -4.5635e-07,  3.7464e-07,  1.2187e-08,  2.6982e-07,  1.4005e-07,
        -8.2116e-07, -8.8396e-08,  3.5733e-08, -3.8638e-08,  6.0481e-07,
         1.4032e-07, -7.1024e-08,  2.0563e-07,  4.8848e-07,  2.1777e-07,
         2.7150e-07, -3.1979e-07, -2.1951e-07,  3.6567e-07, -4.8982e-07,
         1.9413e-07, -5.0404e-07, -5.1476e-08,  1.7718e-07, -3.5390e-07,
         7.6583e-08,  6.0885e-07,  8.4054e-07,  4.7574e-08,  2.8006e-07,
         4.9315e-07,  4.7563e-07, -5.4312e-07, -5.9949e-08, -4.7657e-07,
         6.8893e-07,  1.1629e-06,  5.0358e-08,  4.9407e-07,  2.7256e-07,
         4.5128e-07,  2.1517e-07, -5.5678e-07, -9.3737e-08, -1.6746e-07,
        -1.4742e-07,  1.4457e-07,  3.7181e-07,  1.6549e-07, -7.0586e-08,
        -1.2124e-07,  3.4680e-08, -7.2737e-08, -2.3994e-07, -5.0268e-07,
        -2.0571e-07,  5.3968e-07, -4.6172e-07, -2.5149e-07,  1.9982e-07,
        -3.4561e-07, -2.0038e-07,  8.2717e-08, -1.8978e-08, -1.7918e-07,
        -2.4830e-07, -3.8402e-07,  1.5281e-07, -4.2610e-07, -1.4847e-07,
        -2.4304e-07,  4.2896e-07, -4.0181e-08,  1.6953e-07, -6.5261e-07,
         6.1319e-08,  4.1500e-07,  4.2295e-07,  1.5415e-07,  1.4848e-08,
         1.7451e-07,  1.1468e-07, -1.6203e-07,  2.2627e-07,  2.4036e-07,
         3.8291e-07,  4.6764e-07, -1.4971e-07, -3.7555e-08, -2.4756e-07,
        -2.9848e-07, -4.1682e-08,  1.5559e-07, -1.6531e-07,  6.7216e-07,
         2.0766e-08, -4.8597e-08,  9.3464e-08, -1.4122e-07,  5.7893e-07,
        -6.4931e-07, -3.9539e-07, -8.8702e-08, -4.2348e-07,  8.1511e-07,
         6.3925e-07, -1.3139e-08, -3.9363e-07, -1.9152e-07, -5.4721e-08,
         6.1817e-08, -2.4659e-07,  3.1889e-07,  3.7668e-07, -1.5082e-07,
        -3.8625e-08,  1.6510e-07,  6.2324e-08, -4.5550e-08, -3.7809e-07,
        -6.4131e-07,  3.6235e-07, -2.4969e-07, -5.4060e-07,  5.0684e-08,
        -1.5745e-07,  4.3295e-07,  1.6044e-07, -3.7021e-07, -9.6727e-08,
         5.0289e-07, -1.5070e-07, -3.2205e-07,  3.8551e-07, -5.7870e-08,
        -2.7713e-07,  7.2866e-08, -5.8994e-08, -6.9802e-08, -2.1653e-07,
        -3.8237e-07,  4.6060e-07, -2.0539e-07,  3.6744e-07, -1.4302e-07,
        -3.5885e-07, -1.7465e-08,  1.5934e-08, -6.7584e-07,  2.7739e-07,
        -1.9639e-07, -3.8965e-07, -1.0565e-07, -4.0576e-07, -1.7084e-08,
         1.2441e-07,  1.5135e-07,  2.1233e-07,  6.1669e-07, -3.0494e-07,
        -3.3146e-07,  2.1631e-07,  3.5358e-07,  2.9473e-07,  5.2878e-07,
         6.4824e-07,  1.9634e-07, -1.1877e-07, -1.6847e-07, -8.7054e-08,
        -2.3311e-07,  8.4580e-09,  2.2766e-07,  4.1370e-07, -3.8617e-07,
         9.0081e-08,  1.5017e-07, -2.3483e-07,  2.0562e-07, -8.9307e-08,
         5.3645e-07, -2.1264e-07,  1.2675e-07,  1.8306e-07,  3.9780e-08,
         6.7940e-07], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024, 256);tensor([[ 3.1257e-03,  1.3207e-02,  3.1085e-02,  ...,  3.2110e-03,
          3.0142e-04, -1.1761e-02],
        [-9.7132e-03, -3.5988e-03,  1.5095e-02,  ..., -3.5373e-02,
          4.9704e-03, -3.3288e-02],
        [ 7.1903e-03, -2.1528e-03, -6.1999e-03,  ..., -2.1635e-02,
          3.4500e-02,  1.9380e-02],
        ...,
        [-2.1744e-02, -1.3253e-02, -1.6160e-03,  ..., -2.3586e-02,
          3.7225e-03,  1.0547e-02],
        [-8.4911e-05,  2.1821e-02,  2.1984e-02,  ..., -2.9319e-02,
         -3.0362e-02, -2.6872e-03],
        [-3.5149e-04, -1.8337e-02,  1.0872e-02,  ..., -6.8680e-03,
          1.4483e-02, -1.2154e-02]], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([ 3.5072e-07, -6.1701e-07, -5.7381e-07,  ..., -3.1622e-06,
        -7.0885e-09,  3.4073e-07], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 2.9947e-07, -1.6608e-07, -6.6290e-07,  ..., -8.2493e-07,
        -1.9948e-07, -2.9883e-07], device='cuda:0');
