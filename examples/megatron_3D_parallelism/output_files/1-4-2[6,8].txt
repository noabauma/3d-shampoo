name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(25216, 1024);tensor([[ 1.2348e-02, -1.5729e-02,  7.4835e-03,  ...,  4.6923e-03,
          7.9155e-03,  3.1757e-03],
        [ 8.3441e-03, -4.5514e-02, -1.7944e-02,  ...,  1.4501e-02,
          1.8025e-02,  6.5998e-03],
        [-3.1351e-02,  3.1234e-03, -1.6962e-02,  ...,  1.7608e-03,
         -1.2459e-02,  1.4113e-03],
        ...,
        [-1.4476e-03,  8.5494e-03, -2.6708e-02,  ...,  1.3694e-02,
         -1.3860e-02,  2.3392e-02],
        [ 6.7246e-03, -5.7692e-03,  1.7549e-02,  ..., -3.1014e-03,
         -3.8619e-02, -6.0679e-03],
        [-3.2436e-02,  5.1521e-03,  2.0899e-05,  ...,  2.5276e-02,
          1.9308e-02, -1.0662e-02]], device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.8.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0');
module.8.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-1.1733e-07, -1.3916e-07, -1.0317e-08,  ...,  2.5503e-08,
         1.1532e-07,  4.7473e-08], device='cuda:0');
module.8.attention.query_key_value;ColumnParallelLinear();(1536, 1024);tensor([[ 0.0123, -0.0157,  0.0075,  ...,  0.0047,  0.0079,  0.0032],
        [ 0.0083, -0.0455, -0.0179,  ...,  0.0145,  0.0180,  0.0066],
        [-0.0314,  0.0031, -0.0170,  ...,  0.0018, -0.0125,  0.0014],
        ...,
        [-0.0422, -0.0147, -0.0201,  ..., -0.0126,  0.0008, -0.0180],
        [-0.0283, -0.0227, -0.0294,  ..., -0.0049, -0.0091,  0.0213],
        [-0.0113, -0.0082, -0.0138,  ...,  0.0019,  0.0022,  0.0067]],
       device='cuda:0');
module.8.attention.query_key_value;ColumnParallelLinear();(1536,);tensor([ 1.7572e-09, -8.1352e-10,  7.6472e-10,  ...,  1.9762e-07,
        -1.8272e-08,  4.1794e-08], device='cuda:0');
module.8.attention.dense;RowParallelLinear();(1024, 512);tensor([[ 0.0052,  0.0018, -0.0040,  ..., -0.0008,  0.0081, -0.0028],
        [-0.0009, -0.0005, -0.0078,  ..., -0.0077, -0.0048,  0.0084],
        [ 0.0079,  0.0049, -0.0008,  ..., -0.0032, -0.0015, -0.0042],
        ...,
        [ 0.0017,  0.0027, -0.0037,  ..., -0.0079,  0.0005, -0.0114],
        [ 0.0007, -0.0080,  0.0002,  ...,  0.0030,  0.0001,  0.0024],
        [-0.0058, -0.0016, -0.0111,  ...,  0.0092,  0.0005, -0.0022]],
       device='cuda:0');
module.8.attention.dense;RowParallelLinear();(1024,);tensor([-8.9618e-07,  1.6644e-07,  8.2266e-07,  ..., -1.5356e-06,
        -5.4705e-07, -4.4259e-07], device='cuda:0');
module.8.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.8.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-5.3022e-08,  5.6865e-08, -2.0464e-08,  ...,  7.0032e-08,
         5.3475e-09, -3.9296e-08], device='cuda:0');
module.8.mlp.dense_h_to_4h;ColumnParallelLinear();(2048, 1024);tensor([[ 0.0200, -0.0198,  0.0276,  ...,  0.0077, -0.0244, -0.0112],
        [ 0.0287,  0.0158,  0.0073,  ...,  0.0298,  0.0428,  0.0131],
        [ 0.0172,  0.0090,  0.0143,  ...,  0.0123,  0.0221,  0.0023],
        ...,
        [-0.0313, -0.0085,  0.0038,  ...,  0.0064,  0.0330, -0.0052],
        [-0.0181, -0.0182, -0.0022,  ...,  0.0248, -0.0155,  0.0204],
        [ 0.0132, -0.0162,  0.0157,  ...,  0.0180, -0.0450, -0.0233]],
       device='cuda:0');
module.8.mlp.dense_h_to_4h;ColumnParallelLinear();(2048,);tensor([ 3.9698e-08,  1.3705e-09,  6.7954e-08,  ..., -1.9773e-08,
         3.9837e-08, -8.7618e-09], device='cuda:0');
module.8.mlp.dense_4h_to_h;RowParallelLinear();(1024, 2048);tensor([[ 0.0030,  0.0070, -0.0033,  ...,  0.0012, -0.0055, -0.0063],
        [-0.0073,  0.0051, -0.0047,  ...,  0.0050, -0.0014,  0.0042],
        [-0.0027, -0.0062, -0.0045,  ..., -0.0036,  0.0112,  0.0001],
        ...,
        [-0.0048, -0.0020, -0.0009,  ..., -0.0115,  0.0015,  0.0032],
        [-0.0103,  0.0054,  0.0059,  ...,  0.0009, -0.0038,  0.0114],
        [ 0.0034, -0.0049,  0.0005,  ..., -0.0040, -0.0014,  0.0017]],
       device='cuda:0');
module.8.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([-7.1788e-07,  1.0341e-08,  8.8442e-07,  ..., -1.7145e-06,
        -5.2762e-07, -3.4051e-07], device='cuda:0');
module.9.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0');
module.9.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 1.3148e-08, -3.3519e-08,  7.1042e-08,  ..., -1.3168e-07,
         5.1396e-08, -5.0990e-08], device='cuda:0');
module.9.attention.query_key_value;ColumnParallelLinear();(1536, 1024);tensor([[-0.0122,  0.0029,  0.0284,  ..., -0.0228,  0.0212, -0.0094],
        [ 0.0181, -0.0036,  0.0286,  ..., -0.0100, -0.0055,  0.0162],
        [-0.0091, -0.0181, -0.0027,  ...,  0.0082, -0.0021,  0.0166],
        ...,
        [ 0.0060,  0.0120,  0.0038,  ..., -0.0220,  0.0179, -0.0163],
        [ 0.0319, -0.0158, -0.0183,  ...,  0.0024,  0.0068, -0.0170],
        [ 0.0087, -0.0153, -0.0018,  ...,  0.0093, -0.0302, -0.0313]],
       device='cuda:0');
module.9.attention.query_key_value;ColumnParallelLinear();(1536,);tensor([-1.7274e-09,  9.7543e-10,  3.2744e-09,  ..., -2.6144e-08,
         1.7890e-07, -1.1799e-07], device='cuda:0');
module.9.attention.dense;RowParallelLinear();(1024, 512);tensor([[-0.0032,  0.0089, -0.0029,  ..., -0.0049, -0.0051,  0.0019],
        [-0.0008, -0.0055,  0.0012,  ..., -0.0080,  0.0007, -0.0006],
        [ 0.0012,  0.0057,  0.0044,  ...,  0.0064,  0.0047,  0.0086],
        ...,
        [-0.0010,  0.0051,  0.0044,  ...,  0.0023, -0.0049, -0.0022],
        [-0.0074,  0.0039,  0.0011,  ..., -0.0002,  0.0041, -0.0047],
        [ 0.0016, -0.0010, -0.0088,  ..., -0.0002,  0.0042, -0.0034]],
       device='cuda:0');
module.9.attention.dense;RowParallelLinear();(1024,);tensor([-7.5655e-07,  1.0985e-07,  6.8114e-07,  ..., -1.3787e-06,
        -6.7689e-07, -2.1028e-07], device='cuda:0');
module.9.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.9.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 6.2323e-08,  1.3975e-07, -2.3029e-08,  ..., -3.4533e-08,
         4.4285e-08, -5.6605e-08], device='cuda:0');
module.9.mlp.dense_h_to_4h;ColumnParallelLinear();(2048, 1024);tensor([[-0.0522,  0.0534, -0.0147,  ...,  0.0123,  0.0014,  0.0279],
        [ 0.0094,  0.0188, -0.0138,  ...,  0.0129, -0.0349,  0.0092],
        [-0.0104,  0.0162,  0.0149,  ...,  0.0281, -0.0050,  0.0213],
        ...,
        [ 0.0193,  0.0294,  0.0123,  ..., -0.0157, -0.0271,  0.0303],
        [ 0.0218,  0.0051,  0.0135,  ..., -0.0091, -0.0171, -0.0197],
        [ 0.0120, -0.0386, -0.0168,  ..., -0.0150, -0.0297, -0.0240]],
       device='cuda:0');
module.9.mlp.dense_h_to_4h;ColumnParallelLinear();(2048,);tensor([-1.5211e-09,  2.1262e-08, -1.1027e-08,  ..., -2.4097e-08,
         5.1201e-08, -2.5465e-08], device='cuda:0');
module.9.mlp.dense_4h_to_h;RowParallelLinear();(1024, 2048);tensor([[-0.0063, -0.0012, -0.0014,  ..., -0.0077,  0.0055,  0.0040],
        [-0.0038, -0.0032, -0.0013,  ...,  0.0049,  0.0052,  0.0058],
        [ 0.0027,  0.0019,  0.0003,  ..., -0.0033, -0.0125, -0.0113],
        ...,
        [-0.0091,  0.0023,  0.0031,  ..., -0.0064, -0.0006, -0.0078],
        [ 0.0133, -0.0023,  0.0019,  ..., -0.0077,  0.0051,  0.0034],
        [-0.0090,  0.0018,  0.0087,  ...,  0.0081, -0.0010,  0.0062]],
       device='cuda:0');
module.9.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([-9.0883e-07, -2.5869e-07,  7.6750e-07,  ..., -1.2919e-06,
        -7.8605e-07, -5.6832e-08], device='cuda:0');
module.11;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.11;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-7.3953e-07,  2.7583e-07,  3.3096e-07,  ..., -1.0228e-07,
        -3.4558e-07,  4.0642e-07], device='cuda:0');
