name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(50304, 1024);tensor([[ 0.0123, -0.0157,  0.0075,  ...,  0.0047,  0.0079,  0.0032],
        [ 0.0083, -0.0455, -0.0179,  ...,  0.0145,  0.0180,  0.0066],
        [-0.0314,  0.0031, -0.0170,  ...,  0.0018, -0.0125,  0.0014],
        ...,
        [-0.0402, -0.0089, -0.0064,  ...,  0.0357,  0.0119,  0.0071],
        [ 0.0005,  0.0058,  0.0004,  ..., -0.0208, -0.0137,  0.0048],
        [ 0.0082,  0.0133,  0.0015,  ..., -0.0041,  0.0219,  0.0099]],
       device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.8.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.8.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-1.8406e-07,  9.1891e-09,  1.8171e-07,  ..., -4.0166e-08,
         6.7763e-08,  3.3737e-08], device='cuda:0');
module.8.attention.query_key_value;ColumnParallelLinear();(3072, 1024);tensor([[ 1.2347e-02, -1.5729e-02,  7.4835e-03,  ...,  4.6925e-03,
          7.9154e-03,  3.1760e-03],
        [ 8.3441e-03, -4.5514e-02, -1.7944e-02,  ...,  1.4501e-02,
          1.8025e-02,  6.5999e-03],
        [-3.1352e-02,  3.1236e-03, -1.6962e-02,  ...,  1.7610e-03,
         -1.2459e-02,  1.4116e-03],
        ...,
        [ 2.5731e-02,  1.3889e-02,  1.7865e-02,  ...,  1.0416e-02,
          7.2070e-03,  3.0545e-02],
        [-5.6050e-05, -4.6093e-02,  3.9477e-03,  ..., -4.3987e-02,
         -1.1979e-02,  4.3475e-02],
        [ 7.5088e-03, -4.4561e-03, -7.4020e-03,  ...,  2.8742e-03,
         -2.9961e-02,  1.9343e-02]], device='cuda:0');
module.8.attention.query_key_value;ColumnParallelLinear();(3072,);tensor([ 8.8092e-10, -1.2624e-09,  7.4766e-10,  ..., -2.8834e-07,
        -7.0379e-08,  1.6074e-07], device='cuda:0');
module.8.attention.dense;RowParallelLinear();(1024, 1024);tensor([[-0.0065, -0.0006, -0.0010,  ..., -0.0118,  0.0097,  0.0082],
        [-0.0023, -0.0030, -0.0041,  ..., -0.0107,  0.0009, -0.0023],
        [ 0.0020,  0.0047,  0.0037,  ..., -0.0069,  0.0068,  0.0032],
        ...,
        [-0.0070,  0.0028, -0.0030,  ..., -0.0060,  0.0041,  0.0039],
        [ 0.0072,  0.0062,  0.0013,  ..., -0.0002,  0.0015,  0.0042],
        [ 0.0036, -0.0024, -0.0038,  ..., -0.0012, -0.0058,  0.0003]],
       device='cuda:0');
module.8.attention.dense;RowParallelLinear();(1024,);tensor([-1.0353e-06, -2.0750e-07, -7.0100e-08,  ..., -8.2914e-07,
        -6.2970e-07, -6.2297e-07], device='cuda:0');
module.8.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.8.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-1.1064e-07,  9.5213e-08,  2.6612e-08,  ...,  2.2853e-07,
         2.1175e-08,  9.6073e-09], device='cuda:0');
module.8.mlp.dense_h_to_4h;ColumnParallelLinear();(4096, 1024);tensor([[-0.0311, -0.0136, -0.0353,  ..., -0.0150, -0.0159, -0.0196],
        [-0.0072,  0.0096,  0.0285,  ..., -0.0272, -0.0566, -0.0044],
        [ 0.0178, -0.0177, -0.0002,  ..., -0.0140,  0.0125,  0.0091],
        ...,
        [ 0.0243,  0.0137, -0.0625,  ..., -0.0002, -0.0093, -0.0483],
        [ 0.0079, -0.0023, -0.0024,  ...,  0.0140,  0.0033,  0.0029],
        [ 0.0225, -0.0064, -0.0205,  ..., -0.0123, -0.0197, -0.0165]],
       device='cuda:0');
module.8.mlp.dense_h_to_4h;ColumnParallelLinear();(4096,);tensor([ 2.5893e-08,  7.2840e-08, -1.3738e-07,  ..., -1.0748e-08,
        -4.5582e-09,  2.3916e-08], device='cuda:0');
module.8.mlp.dense_4h_to_h;RowParallelLinear();(1024, 4096);tensor([[-0.0032,  0.0089, -0.0029,  ..., -0.0052, -0.0013,  0.0003],
        [ 0.0006, -0.0048, -0.0116,  ...,  0.0079,  0.0021, -0.0055],
        [ 0.0067,  0.0021,  0.0007,  ...,  0.0041, -0.0010, -0.0063],
        ...,
        [ 0.0070,  0.0081,  0.0038,  ..., -0.0045, -0.0010, -0.0045],
        [ 0.0105,  0.0037, -0.0004,  ..., -0.0048, -0.0010, -0.0019],
        [-0.0019,  0.0010,  0.0088,  ..., -0.0078, -0.0034, -0.0028]],
       device='cuda:0');
module.8.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([-7.3282e-07, -4.7660e-07, -1.3012e-07,  ..., -1.4956e-06,
        -7.0736e-07, -6.6696e-07], device='cuda:0');
module.9.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0');
module.9.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 6.3034e-08, -2.8945e-08, -8.7653e-08,  ..., -2.9700e-08,
         3.5090e-08, -1.1639e-07], device='cuda:0');
module.9.attention.query_key_value;ColumnParallelLinear();(3072, 1024);tensor([[ 0.0006, -0.0083, -0.0028,  ..., -0.0132, -0.0121, -0.0195],
        [-0.0179, -0.0192,  0.0008,  ...,  0.0231, -0.0184,  0.0048],
        [ 0.0276,  0.0376, -0.0096,  ..., -0.0032, -0.0301, -0.0294],
        ...,
        [ 0.0332, -0.0066, -0.0139,  ...,  0.0013, -0.0078, -0.0111],
        [-0.0130,  0.0127,  0.0144,  ...,  0.0369, -0.0115, -0.0169],
        [-0.0119,  0.0195,  0.0375,  ..., -0.0083, -0.0405, -0.0035]],
       device='cuda:0');
module.9.attention.query_key_value;ColumnParallelLinear();(3072,);tensor([-1.3360e-09,  2.4181e-09,  9.0487e-11,  ..., -2.1732e-07,
         6.6674e-08,  7.0849e-08], device='cuda:0');
module.9.attention.dense;RowParallelLinear();(1024, 1024);tensor([[ 0.0019, -0.0011, -0.0061,  ..., -0.0001,  0.0090,  0.0003],
        [ 0.0072, -0.0001,  0.0014,  ..., -0.0018,  0.0021, -0.0045],
        [ 0.0059,  0.0066,  0.0086,  ..., -0.0070, -0.0010,  0.0012],
        ...,
        [ 0.0009, -0.0030,  0.0091,  ...,  0.0057,  0.0063, -0.0080],
        [-0.0082, -0.0054, -0.0099,  ..., -0.0116,  0.0005, -0.0017],
        [ 0.0094, -0.0008,  0.0069,  ..., -0.0004,  0.0021, -0.0074]],
       device='cuda:0');
module.9.attention.dense;RowParallelLinear();(1024,);tensor([-8.8032e-07, -3.9237e-07,  7.6494e-08,  ..., -1.4428e-06,
        -8.1091e-07, -3.6707e-07], device='cuda:0');
module.9.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0');
module.9.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-4.2018e-09, -8.3677e-10, -1.7032e-07,  ...,  6.7165e-08,
         7.7007e-08, -8.6291e-09], device='cuda:0');
module.9.mlp.dense_h_to_4h;ColumnParallelLinear();(4096, 1024);tensor([[ 0.0061, -0.0039,  0.0428,  ...,  0.0190,  0.0269, -0.0245],
        [ 0.0123, -0.0204, -0.0294,  ...,  0.0106,  0.0270, -0.0050],
        [-0.0174, -0.0426, -0.0287,  ...,  0.0090, -0.0074, -0.0117],
        ...,
        [-0.0100, -0.0346, -0.0002,  ...,  0.0144, -0.0130,  0.0113],
        [-0.0087, -0.0113,  0.0099,  ..., -0.0118, -0.0078,  0.0092],
        [ 0.0234, -0.0185,  0.0085,  ..., -0.0283, -0.0092, -0.0005]],
       device='cuda:0');
module.9.mlp.dense_h_to_4h;ColumnParallelLinear();(4096,);tensor([ 2.1455e-08, -6.3070e-08, -2.4142e-08,  ..., -9.0547e-08,
         1.4235e-07,  1.1010e-07], device='cuda:0');
module.9.mlp.dense_4h_to_h;RowParallelLinear();(1024, 4096);tensor([[-0.0056,  0.0007,  0.0077,  ...,  0.0009, -0.0033, -0.0008],
        [-0.0024, -0.0038,  0.0065,  ...,  0.0004, -0.0002, -0.0062],
        [ 0.0099, -0.0036,  0.0105,  ..., -0.0046, -0.0054,  0.0066],
        ...,
        [ 0.0020, -0.0043,  0.0005,  ..., -0.0025, -0.0040, -0.0021],
        [-0.0041,  0.0041,  0.0017,  ...,  0.0034, -0.0013,  0.0044],
        [-0.0009, -0.0061,  0.0088,  ..., -0.0037, -0.0005,  0.0009]],
       device='cuda:0');
module.9.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([-8.9762e-07, -3.9840e-07,  5.5819e-07,  ..., -1.5824e-06,
        -1.0169e-06, -3.5210e-07], device='cuda:0');
module.11;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.11;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-2.5989e-07, -3.9999e-08,  2.4503e-08,  ..., -1.1300e-06,
        -5.1680e-07, -1.8608e-07], device='cuda:0');
