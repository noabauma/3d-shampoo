name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(3200, 1024);tensor([[-0.0122, -0.0203, -0.0169,  ..., -0.0329, -0.0100,  0.0106],
        [ 0.0318,  0.0131, -0.0015,  ..., -0.0059,  0.0043, -0.0084],
        [-0.0312,  0.0101, -0.0041,  ...,  0.0077, -0.0320,  0.0175],
        ...,
        [ 0.0096,  0.0094,  0.0016,  ..., -0.0074,  0.0386,  0.0149],
        [ 0.0061, -0.0197, -0.0276,  ...,  0.0035,  0.0361, -0.0057],
        [ 0.0040, -0.0039,  0.0452,  ..., -0.0033,  0.0306, -0.0282]],
       device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-6.8370e-06, -6.2967e-07, -2.2953e-06,  ...,  4.7200e-06,
        -2.2815e-06, -2.7902e-06], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192, 1024);tensor([[-1.6906e-02, -1.7977e-02,  1.0983e-02,  ..., -2.8700e-05,
         -3.8091e-02,  3.9851e-02],
        [-1.7009e-02,  2.4214e-02, -3.4468e-02,  ..., -2.2032e-02,
          1.7415e-02, -5.1443e-03],
        [ 3.0374e-02,  2.6297e-02, -2.8737e-02,  ...,  1.9554e-02,
          9.0655e-03, -2.3593e-02],
        ...,
        [ 7.5748e-03, -1.5657e-02,  1.7167e-02,  ...,  5.2718e-03,
         -1.2621e-02, -1.8212e-02],
        [-5.5382e-03, -2.4364e-02, -3.2344e-02,  ..., -1.1183e-02,
         -3.6426e-03, -7.6281e-03],
        [-7.2941e-03, -1.2659e-03,  7.0650e-03,  ...,  1.8711e-03,
         -1.4482e-02,  1.3869e-02]], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192,);tensor([ 7.0232e-08, -1.3167e-07, -1.5982e-08, -4.4688e-08, -9.7412e-08,
        -1.3982e-07, -1.2762e-07, -1.1023e-07, -7.1560e-08, -5.1375e-08,
        -8.7966e-08,  1.7740e-07, -5.7140e-08, -1.0247e-07, -8.0260e-08,
        -5.7688e-09,  3.0204e-08, -3.2155e-08,  2.5763e-10, -5.7840e-09,
        -1.3523e-07,  2.0245e-08,  6.6075e-08,  1.9797e-08, -1.2267e-08,
        -5.8557e-08, -2.6456e-08, -1.2524e-07, -2.6432e-08, -1.1917e-07,
        -8.5554e-08, -3.0114e-07,  8.5474e-08,  6.6845e-08, -1.7659e-08,
        -2.0891e-09,  2.1578e-08,  8.5669e-08,  4.6792e-08, -1.2707e-07,
         2.0120e-08, -7.3747e-08, -1.0817e-07,  6.8699e-08, -3.3277e-08,
        -1.7871e-07,  1.9786e-07,  8.5687e-08,  1.5297e-07,  2.8418e-08,
         8.9656e-08,  6.0501e-09,  5.6314e-08, -1.0209e-07,  7.0765e-08,
         5.7013e-08,  1.6857e-07,  1.0285e-07, -7.7835e-08,  6.4822e-08,
        -8.5034e-08, -3.8430e-09, -1.1138e-08, -7.0702e-08, -2.8015e-15,
        -1.0654e-15,  1.6645e-15,  1.2577e-16, -4.4684e-16, -2.2979e-15,
         2.4775e-15,  4.4831e-15, -5.4389e-15,  3.2585e-15,  7.5100e-15,
         8.7463e-16, -1.1465e-15,  1.0552e-16,  1.2014e-15,  9.0967e-16,
        -9.7922e-16, -4.3554e-15,  4.4738e-16,  1.0330e-15, -5.4599e-15,
        -2.6803e-15, -1.4684e-15, -1.8998e-16,  4.8798e-15,  6.2627e-15,
        -4.7176e-15,  3.9622e-15,  7.1410e-16, -5.8236e-15, -1.8479e-16,
         1.5316e-15,  2.0536e-15, -9.9734e-16, -2.2593e-15, -1.0552e-16,
         2.3545e-15,  1.5449e-15,  5.7820e-17, -1.0991e-15, -7.4758e-15,
         8.3485e-15, -4.1756e-15,  2.8852e-15, -1.7693e-16, -5.1026e-16,
         2.3469e-15, -1.1418e-15,  8.1268e-16, -7.0882e-15,  4.6310e-16,
         5.9419e-16, -2.2651e-15,  2.4082e-15,  5.9488e-15,  5.5176e-15,
        -2.4690e-15, -4.8479e-15,  3.5017e-15,  2.6166e-15,  6.4002e-16,
         8.0195e-15, -1.6621e-15,  5.9699e-15,  4.7116e-06,  4.0488e-06,
         1.0959e-05, -5.0583e-07, -3.2554e-06,  8.5370e-06, -1.7971e-06,
         3.0111e-06,  9.9496e-06,  1.1845e-06,  8.1936e-06, -6.0076e-07,
        -1.1396e-06,  2.1447e-06, -4.5944e-06,  3.3370e-06, -8.3823e-06,
        -1.9293e-06, -4.8478e-06,  1.0521e-07, -1.0712e-05, -4.5744e-06,
        -1.8654e-06, -3.0918e-06, -5.0849e-06, -4.1020e-06,  8.5654e-06,
         1.8198e-06, -8.9592e-06, -4.6573e-07, -3.6605e-06, -4.2509e-06,
         5.4359e-06, -7.2380e-07, -1.4445e-06,  8.9871e-06, -6.5546e-07,
         4.5587e-06, -3.3745e-07,  9.9366e-06, -5.8000e-07, -5.5081e-06,
         6.1597e-06,  3.9536e-06, -7.8464e-06,  6.3945e-06,  2.2316e-06,
         1.0066e-06,  1.9272e-06,  6.9755e-06, -5.2108e-07,  2.2131e-06,
         6.2758e-06,  5.0621e-06, -2.8798e-06,  6.2527e-06, -5.3908e-06,
        -3.6997e-06,  2.2415e-06, -1.3005e-06,  4.3478e-06,  8.8929e-06,
         5.5728e-06,  1.1777e-05], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024, 64);tensor([[-0.0054,  0.0092, -0.0094,  ...,  0.0075,  0.0072, -0.0023],
        [-0.0280,  0.0272,  0.0022,  ...,  0.0010,  0.0037,  0.0041],
        [-0.0058,  0.0424,  0.0131,  ...,  0.0172, -0.0046,  0.0035],
        ...,
        [-0.0014,  0.0144,  0.0166,  ...,  0.0145, -0.0042, -0.0136],
        [-0.0322,  0.0023, -0.0066,  ..., -0.0027, -0.0057, -0.0095],
        [ 0.0034, -0.0150, -0.0079,  ...,  0.0080, -0.0140, -0.0190]],
       device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024,);tensor([-2.8643e-05,  1.4121e-05,  2.6624e-05,  ..., -1.0501e-05,
        -7.4630e-06,  7.3358e-06], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-1.0457e-06,  5.2020e-07,  9.7062e-07,  ..., -2.7887e-07,
        -2.7312e-07,  2.6215e-07], device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256, 1024);tensor([[-0.0498, -0.0242, -0.0156,  ...,  0.0084, -0.0232, -0.0193],
        [-0.0139, -0.0161, -0.0178,  ..., -0.0037,  0.0246,  0.0011],
        [ 0.0107, -0.0025,  0.0268,  ...,  0.0155, -0.0297,  0.0135],
        ...,
        [ 0.0449, -0.0094,  0.0191,  ...,  0.0023, -0.0160,  0.0251],
        [-0.0220, -0.0099,  0.0024,  ..., -0.0085, -0.0091,  0.0185],
        [ 0.0125, -0.0017, -0.0039,  ...,  0.0042, -0.0108, -0.0064]],
       device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256,);tensor([ 3.3834e-07,  5.7129e-07, -2.3549e-08,  4.7665e-07, -8.2657e-08,
        -2.9189e-08,  3.2787e-07,  2.8327e-07,  3.4754e-08, -1.1329e-06,
         4.1081e-07,  3.5566e-08,  3.8108e-07,  8.6834e-07, -9.7302e-08,
        -1.3197e-07,  7.6627e-07,  6.9192e-07, -2.0322e-07, -4.4996e-07,
         2.4294e-07,  1.4476e-07,  4.3518e-07, -1.0096e-07,  3.5522e-07,
         3.7900e-08,  3.9402e-07, -4.4575e-07, -1.0879e-07,  4.7277e-07,
        -6.2569e-08, -5.6690e-07,  2.3333e-07,  2.0177e-07, -3.1192e-08,
        -2.0666e-07,  4.7164e-07,  1.3830e-07, -3.8344e-07, -4.4727e-07,
        -2.0837e-08,  7.5152e-08,  2.7974e-07,  2.5443e-07,  1.3092e-07,
         7.6255e-07, -3.8710e-07,  5.1842e-07,  5.9121e-08,  3.2494e-07,
        -4.0639e-07, -2.2359e-07,  1.5491e-07,  8.9037e-08, -4.4214e-07,
         4.1130e-07, -1.3182e-07,  7.0555e-07,  8.7892e-08, -9.6977e-08,
        -6.6901e-07, -3.8562e-08, -2.8672e-07,  1.0963e-07, -3.4887e-08,
         1.5571e-07,  4.6648e-09,  5.3834e-07, -2.0530e-07,  2.6825e-07,
        -3.1178e-07,  3.1661e-07, -2.5395e-07, -6.7808e-08,  3.1623e-07,
        -1.8070e-07, -1.7434e-07,  1.2551e-07,  4.1803e-08, -6.4241e-08,
        -3.6451e-08, -1.1352e-07, -5.7790e-07, -9.6665e-08,  1.0744e-06,
        -4.0999e-07,  2.0446e-07, -1.3729e-08,  4.0050e-07, -3.9698e-07,
         2.0513e-07, -4.6601e-07, -2.0119e-07,  1.2222e-07,  1.5367e-07,
        -2.7402e-08, -2.0008e-07, -2.3158e-07, -2.6006e-07,  1.6927e-07,
        -7.5906e-08,  2.7556e-07, -2.3556e-07,  2.1890e-07,  2.9305e-07,
         3.8677e-07,  3.6959e-07, -4.7224e-07, -5.7854e-07,  3.8837e-08,
        -4.7928e-08, -3.9207e-07,  7.2014e-08, -3.2001e-07,  1.0903e-07,
         1.6043e-07, -4.1687e-07,  2.1833e-07,  2.9191e-07,  6.5099e-07,
         2.2950e-07, -1.3622e-07,  8.7339e-08, -1.9965e-08,  2.2547e-07,
         7.0495e-08,  2.7935e-07,  4.3758e-07, -4.9347e-07,  2.5033e-07,
         1.1347e-07, -3.5474e-07, -2.1124e-07, -1.6051e-07, -2.4060e-07,
         4.9602e-08,  2.6576e-08, -1.8931e-07, -6.1409e-07,  4.0952e-07,
         1.8311e-08, -1.1457e-07,  6.5282e-08, -3.3336e-07,  5.6144e-08,
         1.1905e-06, -1.8390e-07, -1.2107e-07, -2.4868e-07,  2.2147e-07,
        -4.3340e-07, -3.5830e-07,  4.7774e-07, -5.0065e-07, -1.6483e-08,
         4.1500e-07, -1.4288e-07, -2.8528e-07,  7.0991e-07, -4.0781e-08,
        -3.5939e-08,  2.1105e-07,  5.1684e-08, -6.3939e-07, -4.2661e-07,
        -2.1413e-07,  2.0025e-07, -2.6229e-07,  8.7136e-09, -3.3395e-07,
        -1.7802e-07,  4.1423e-07, -9.6823e-07,  5.6398e-07, -2.3873e-07,
        -1.5732e-07, -3.3362e-07, -4.4629e-07,  2.4369e-07,  2.2160e-08,
        -2.4207e-07, -1.7803e-07, -5.6731e-08,  4.0595e-07, -7.0312e-07,
        -3.9834e-07, -1.5265e-07,  6.5925e-07, -3.3682e-07, -2.3822e-08,
         3.8356e-07,  4.4592e-07, -2.5911e-07,  5.7952e-07,  3.6437e-07,
        -4.1740e-07,  7.0847e-09,  3.8136e-08,  1.1785e-07, -8.5464e-07,
         3.5314e-08,  1.9947e-08, -3.1227e-07,  1.7262e-07, -2.6018e-07,
         3.5810e-07, -2.2468e-07, -3.9228e-07,  7.3189e-08,  1.0895e-07,
        -4.6726e-07, -2.6275e-07, -3.3633e-07, -9.6665e-08, -1.9556e-07,
        -3.0129e-07,  7.7897e-09,  4.2543e-07, -1.1529e-08,  3.6485e-07,
        -7.0715e-07, -2.3795e-07, -7.8628e-08,  3.5325e-08,  2.2823e-07,
         2.5312e-07,  9.7685e-09,  3.1049e-07, -3.1484e-07, -5.5210e-08,
        -4.0579e-07, -4.1480e-07, -4.4517e-07,  7.1522e-08, -2.2904e-07,
         2.5011e-07, -2.6985e-07, -3.0237e-07,  3.0469e-07, -4.9685e-07,
        -3.1956e-07, -5.3585e-08,  9.7080e-08,  2.2301e-07,  1.3083e-07,
        -2.5880e-07,  4.0872e-07,  1.7417e-07,  5.1280e-07, -3.5032e-07,
        -1.0432e-07,  2.3945e-07,  5.5251e-07, -1.3606e-07, -4.5457e-07,
         1.8638e-07], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024, 256);tensor([[ 0.0211, -0.0053,  0.0063,  ..., -0.0119,  0.0066, -0.0029],
        [-0.0056,  0.0030,  0.0005,  ..., -0.0166, -0.0065,  0.0060],
        [-0.0206, -0.0096, -0.0042,  ..., -0.0186, -0.0010, -0.0089],
        ...,
        [-0.0065,  0.0342, -0.0158,  ...,  0.0305,  0.0114, -0.0188],
        [ 0.0151, -0.0113, -0.0044,  ..., -0.0345,  0.0019, -0.0201],
        [ 0.0181, -0.0025,  0.0280,  ..., -0.0023,  0.0063, -0.0475]],
       device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([ 3.5072e-07, -6.1701e-07, -5.7381e-07,  ..., -3.1622e-06,
        -7.0885e-09,  3.4073e-07], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 2.9947e-07, -1.6608e-07, -6.6290e-07,  ..., -8.2493e-07,
        -1.9948e-07, -2.9883e-07], device='cuda:0');
