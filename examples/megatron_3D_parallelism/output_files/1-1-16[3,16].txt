name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(3200, 1024);tensor([[ 0.0021,  0.0007, -0.0375,  ...,  0.0257,  0.0515,  0.0015],
        [ 0.0378,  0.0064, -0.0023,  ..., -0.0102,  0.0170, -0.0169],
        [-0.0168,  0.0094, -0.0214,  ..., -0.0465,  0.0103, -0.0075],
        ...,
        [-0.0048,  0.0016,  0.0119,  ..., -0.0006, -0.0232, -0.0065],
        [-0.0381,  0.0035,  0.0230,  ...,  0.0218,  0.0028, -0.0236],
        [-0.0213,  0.0046,  0.0165,  ...,  0.0217, -0.0485, -0.0340]],
       device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-6.8370e-06, -6.2967e-07, -2.2953e-06,  ...,  4.7200e-06,
        -2.2815e-06, -2.7902e-06], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192, 1024);tensor([[-0.0232, -0.0080,  0.0446,  ..., -0.0037, -0.0376,  0.0070],
        [-0.0246,  0.0002, -0.0288,  ...,  0.0132,  0.0292,  0.0493],
        [ 0.0295, -0.0002, -0.0176,  ..., -0.0004,  0.0120,  0.0204],
        ...,
        [-0.0173,  0.0046,  0.0190,  ..., -0.0062, -0.0010, -0.0382],
        [-0.0035, -0.0204, -0.0056,  ...,  0.0137, -0.0016, -0.0318],
        [-0.0174, -0.0270,  0.0068,  ...,  0.0014,  0.0212, -0.0135]],
       device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192,);tensor([ 1.3640e-08,  7.1876e-08, -1.7548e-08, -1.8149e-08, -1.2427e-07,
        -1.3359e-07, -1.0381e-07,  1.0116e-08, -9.1251e-08,  2.9172e-08,
         3.2209e-08,  8.2602e-08, -1.0344e-08, -1.4980e-07,  3.2676e-08,
         2.0253e-07, -9.8677e-08, -2.3839e-08, -3.8383e-08, -4.6237e-08,
        -1.0664e-08,  2.4356e-08,  4.1111e-08, -1.4568e-08, -1.2729e-07,
         1.0327e-07,  1.2131e-07,  4.2096e-08,  9.8798e-09,  5.6900e-08,
        -4.5118e-08,  5.6979e-08, -2.1785e-08,  7.4779e-08, -9.0043e-08,
         1.1676e-08, -1.7480e-08,  2.8645e-08, -3.8727e-08,  4.6631e-08,
         2.2181e-08,  5.8865e-08,  2.9611e-08,  7.4906e-08,  9.7599e-08,
         3.2352e-08, -9.9582e-08,  1.7810e-08, -8.6195e-08, -1.2048e-07,
        -4.6646e-08, -6.2993e-09,  1.6049e-07,  1.7031e-07, -4.4658e-08,
         1.0645e-07,  1.9210e-07,  7.0563e-08, -6.2209e-08,  7.3632e-08,
         4.6368e-08, -1.3442e-07, -4.0374e-08,  2.5939e-07,  3.1964e-15,
        -1.7058e-15,  4.0235e-17,  5.8096e-15,  8.3829e-15, -2.9313e-15,
        -1.9571e-15,  5.4357e-17,  9.8348e-16, -4.9161e-16, -7.2457e-15,
        -3.0922e-15,  2.7426e-15, -6.0293e-15, -4.3896e-15, -6.6960e-16,
        -3.2886e-15, -9.3339e-16,  4.2926e-15,  4.9019e-15,  1.6877e-15,
         2.3155e-15, -3.3928e-15,  3.1837e-15,  4.8441e-15,  3.0408e-15,
        -1.9448e-15, -3.9819e-15, -3.3706e-15, -2.4301e-16,  1.9371e-15,
         3.4468e-15,  2.9078e-15,  3.7847e-15, -9.1847e-16, -4.7098e-15,
         2.2057e-15, -4.4410e-15, -7.6318e-15,  3.3272e-15,  3.8052e-15,
         2.7870e-15, -4.5891e-15,  2.8537e-15,  3.5758e-16, -1.2630e-16,
         1.3856e-16,  6.2537e-15, -4.1567e-17,  1.3584e-15,  3.3373e-15,
         2.1207e-15, -2.8982e-15,  9.3192e-15,  4.1953e-15,  3.8343e-15,
         4.4299e-15,  1.4607e-15,  7.1966e-15,  4.3770e-15,  1.6520e-15,
        -5.7501e-15, -5.9742e-15, -4.2483e-15, -2.9153e-06,  8.7844e-07,
        -7.2315e-06, -2.4435e-06, -3.2245e-06,  4.8404e-06,  3.0627e-07,
        -1.1479e-06,  1.7007e-07,  5.0302e-06,  4.1921e-07,  1.1463e-05,
         3.5154e-06, -5.2418e-07,  1.4878e-06, -2.2470e-06, -5.5265e-06,
        -1.8352e-06, -3.1365e-06,  3.3964e-07, -1.5112e-06, -1.1433e-05,
        -6.7992e-06, -3.8371e-06, -4.3111e-06, -1.3847e-06,  1.3864e-05,
        -8.1364e-06, -1.0704e-07, -6.4000e-06, -7.7948e-06,  1.3537e-05,
        -8.9126e-06,  6.4308e-06,  3.1719e-06,  6.1411e-06,  5.7988e-06,
        -1.1903e-07,  5.0142e-06,  3.0675e-06,  1.1802e-06,  1.2096e-06,
        -7.2121e-06,  6.2097e-08,  1.0531e-05,  2.6286e-06, -6.9259e-06,
        -6.0222e-06,  3.2308e-06, -1.0176e-05, -3.5568e-06, -7.9669e-07,
        -7.3494e-06, -5.0425e-06, -7.3323e-07,  3.6916e-06,  1.1122e-08,
        -9.8238e-06, -4.1775e-06,  1.7538e-05, -2.7069e-06,  2.2365e-06,
        -4.3656e-06, -1.5026e-06], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024, 64);tensor([[-5.5661e-03,  1.6972e-02,  7.9509e-03,  ..., -1.7768e-02,
         -2.4246e-03,  4.9550e-03],
        [-1.7648e-02, -3.6063e-03,  4.3280e-03,  ..., -1.8060e-02,
         -2.7282e-02, -4.2506e-03],
        [ 2.7868e-02,  5.6476e-06, -2.5270e-02,  ...,  5.9494e-03,
          2.7721e-03, -4.5281e-03],
        ...,
        [ 1.2381e-02, -4.1916e-03,  1.8781e-02,  ..., -3.3258e-03,
          2.7043e-02, -1.4336e-02],
        [-1.1336e-02, -1.7938e-02,  3.5443e-03,  ...,  5.1803e-03,
          2.8669e-04,  1.7676e-02],
        [-1.9494e-02,  3.7090e-02,  7.5444e-03,  ..., -2.6378e-03,
         -8.3666e-03,  4.0960e-03]], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024,);tensor([-2.8643e-05,  1.4121e-05,  2.6624e-05,  ..., -1.0501e-05,
        -7.4630e-06,  7.3358e-06], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-1.0457e-06,  5.2020e-07,  9.7062e-07,  ..., -2.7887e-07,
        -2.7312e-07,  2.6215e-07], device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256, 1024);tensor([[ 0.0088,  0.0081, -0.0017,  ...,  0.0087, -0.0237,  0.0212],
        [ 0.0157, -0.0389, -0.0038,  ..., -0.0107, -0.0180,  0.0077],
        [ 0.0074, -0.0206,  0.0223,  ..., -0.0141, -0.0105,  0.0067],
        ...,
        [ 0.0430,  0.0147, -0.0293,  ...,  0.0100, -0.0342,  0.0333],
        [-0.0303,  0.0073, -0.0034,  ...,  0.0153,  0.0015, -0.0068],
        [ 0.0390, -0.0136,  0.0290,  ...,  0.0082, -0.0499,  0.0062]],
       device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256,);tensor([ 1.7061e-07,  9.8274e-08,  2.6798e-08, -9.6851e-08, -1.0437e-07,
         4.6965e-07, -1.2444e-06,  1.2261e-07,  1.5558e-07,  1.8388e-07,
        -1.0089e-06,  5.1124e-07,  4.6926e-07,  9.9388e-08,  2.2148e-07,
        -6.8651e-08, -1.6813e-07,  1.3903e-07, -4.4737e-08,  4.3012e-07,
         4.1042e-07,  4.9481e-07, -1.1441e-07, -1.3462e-07, -2.0629e-07,
         2.4941e-07, -2.5080e-07, -1.1393e-07,  6.1594e-07, -1.9816e-07,
        -7.3359e-07, -1.2552e-07,  2.7287e-07, -1.5458e-07, -1.7770e-07,
        -3.6470e-07,  3.7294e-07,  2.1610e-09,  5.1153e-07, -1.0100e-07,
         4.5485e-07, -3.4132e-07, -1.2188e-07, -3.6730e-07,  3.6454e-07,
         2.2227e-07, -3.6307e-08,  2.9867e-07,  1.7780e-07, -1.8343e-07,
         4.6307e-07,  3.2260e-07, -6.3284e-07, -4.7620e-07, -8.6709e-08,
        -6.8190e-07, -2.9465e-07, -1.6059e-07,  4.9276e-08, -5.1378e-08,
        -1.1040e-07, -5.2353e-07, -1.5172e-08,  5.7795e-08, -3.2574e-07,
         1.5848e-07, -1.3540e-07, -2.2976e-07, -9.8516e-08, -3.6994e-08,
         5.5701e-07,  1.0804e-07,  1.9250e-07, -2.8391e-09, -1.9578e-07,
        -3.0430e-07, -3.2343e-07,  2.1004e-07, -8.7302e-08,  1.7809e-07,
         8.6124e-08,  3.1125e-07,  6.8495e-07, -1.1413e-07, -4.9163e-07,
         3.3492e-07,  1.1934e-07, -4.3321e-07, -1.3933e-07, -2.2789e-07,
        -2.9265e-08,  2.6627e-07, -4.5534e-07, -4.6618e-07, -5.4545e-07,
         7.1259e-07, -2.1121e-07,  4.2520e-07,  6.3885e-07,  1.1797e-08,
         1.2535e-07, -2.2261e-07,  1.3393e-07, -2.8536e-07,  1.8981e-07,
        -2.3525e-07,  2.7664e-07, -1.7171e-08,  1.8809e-07, -2.6443e-07,
        -6.9615e-07, -3.3705e-07, -3.9386e-07, -2.7395e-07, -4.5931e-07,
        -2.3289e-07, -5.2750e-08,  6.8359e-07, -1.1363e-06, -1.3877e-08,
         2.9007e-07,  2.3916e-07,  9.6458e-08, -6.2779e-07, -7.8871e-08,
         1.9666e-07, -1.4881e-07, -1.4393e-07,  3.7777e-07,  1.8303e-07,
         4.0307e-07,  5.0252e-07,  2.9189e-07,  1.1875e-07, -1.0848e-07,
        -3.0458e-07,  5.1867e-07,  3.0801e-07,  1.2671e-07,  3.3918e-07,
         7.1767e-07,  1.8330e-07, -3.8237e-07,  4.8537e-07,  4.8272e-07,
        -7.3593e-08, -4.1096e-07, -2.8868e-07, -3.2495e-07, -1.8020e-08,
        -2.8923e-08,  2.3439e-07, -2.2517e-07,  1.6826e-07,  3.4141e-07,
        -1.4879e-07, -1.2828e-06, -4.0840e-08,  1.9824e-07, -2.3283e-07,
         1.6828e-07, -5.4871e-07,  1.6390e-07,  1.5691e-08, -1.8147e-07,
        -2.3168e-07, -5.3938e-07,  5.2012e-07, -5.2928e-07,  2.4360e-07,
        -1.2061e-07,  2.1493e-07, -1.5487e-07, -9.3078e-08, -2.4935e-07,
         4.6658e-07, -6.5082e-07, -2.7133e-08, -3.8885e-07,  2.3459e-07,
        -4.8840e-08, -2.0225e-09, -1.0881e-08,  2.7723e-07,  1.8098e-08,
        -1.8263e-07,  1.1366e-07,  6.3977e-08, -4.4844e-07, -2.4457e-07,
        -1.3125e-07,  1.2269e-07,  1.3797e-07, -3.8745e-07, -5.8038e-07,
         1.5212e-07,  2.4627e-07,  3.5899e-07, -2.3388e-07,  5.4189e-07,
         1.5413e-07, -2.0708e-07, -4.4143e-07, -7.0992e-08,  1.3688e-07,
         4.3592e-08, -8.5688e-10,  1.5943e-07, -4.1921e-07,  4.5370e-07,
         8.6429e-08, -1.7574e-07, -9.5893e-07, -2.7197e-07,  1.0267e-07,
         1.0386e-07,  2.4698e-07,  7.8328e-08,  2.1370e-07, -2.3116e-07,
        -1.0037e-07,  2.4310e-07,  4.7430e-07,  4.0219e-08, -4.0138e-07,
        -9.7121e-09,  1.3324e-07, -1.4021e-09,  2.5526e-07,  5.4314e-07,
        -1.8790e-07, -6.2452e-07, -3.1403e-07, -2.1582e-07, -2.2980e-07,
         3.1472e-07, -1.3844e-07,  4.0423e-07, -4.0868e-07,  2.7828e-07,
         1.1042e-07, -1.9130e-07, -6.0412e-07,  2.5264e-07, -3.7434e-07,
        -3.3515e-07,  1.5041e-07, -2.0265e-07, -1.6319e-07, -3.7371e-07,
         3.0826e-07,  9.6134e-08, -6.0852e-07,  1.1255e-07, -2.8104e-07,
         2.3524e-08], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024, 256);tensor([[-1.0811e-02, -5.2314e-02,  9.7325e-03,  ...,  1.4915e-02,
         -7.9374e-03, -4.5096e-03],
        [ 3.2477e-02, -4.8195e-03, -8.3141e-03,  ..., -1.6674e-02,
          7.4079e-03, -8.8936e-03],
        [-1.5432e-02, -1.1027e-02,  1.2971e-02,  ..., -1.4639e-02,
          1.8772e-02,  7.4669e-04],
        ...,
        [-9.0198e-05, -1.6625e-02,  4.3880e-03,  ..., -2.3544e-02,
          1.5225e-02, -8.0469e-03],
        [ 2.2928e-02,  3.2740e-03,  1.0180e-03,  ...,  1.6398e-02,
          1.1515e-02, -1.1261e-03],
        [-3.5878e-02, -2.2577e-02, -2.7918e-03,  ..., -2.4991e-03,
         -1.2553e-03,  3.5056e-02]], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([ 3.5072e-07, -6.1701e-07, -5.7381e-07,  ..., -3.1622e-06,
        -7.0885e-09,  3.4073e-07], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 2.9947e-07, -1.6608e-07, -6.6290e-07,  ..., -8.2493e-07,
        -1.9948e-07, -2.9883e-07], device='cuda:0');
