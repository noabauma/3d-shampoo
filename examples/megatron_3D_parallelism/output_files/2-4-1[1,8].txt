name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(50304, 1024);tensor([[ 0.0123, -0.0157,  0.0075,  ...,  0.0047,  0.0079,  0.0032],
        [ 0.0083, -0.0455, -0.0179,  ...,  0.0145,  0.0180,  0.0066],
        [-0.0314,  0.0031, -0.0170,  ...,  0.0018, -0.0125,  0.0014],
        ...,
        [-0.0402, -0.0089, -0.0064,  ...,  0.0357,  0.0119,  0.0071],
        [ 0.0005,  0.0058,  0.0004,  ..., -0.0208, -0.0137,  0.0048],
        [ 0.0082,  0.0133,  0.0015,  ..., -0.0041,  0.0219,  0.0099]],
       device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 2.3798e-07, -1.1906e-06, -6.7855e-07,  ...,  1.5345e-07,
        -2.0645e-09, -4.0817e-07], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(3072, 1024);tensor([[-0.0209, -0.0273,  0.0190,  ..., -0.0163, -0.0063, -0.0368],
        [ 0.0245,  0.0264,  0.0184,  ..., -0.0211,  0.0041,  0.0075],
        [ 0.0180, -0.0060,  0.0090,  ...,  0.0099,  0.0222,  0.0080],
        ...,
        [ 0.0229, -0.0417, -0.0058,  ...,  0.0309, -0.0238,  0.0078],
        [ 0.0190,  0.0167, -0.0154,  ..., -0.0353, -0.0567, -0.0253],
        [ 0.0251, -0.0102, -0.0088,  ..., -0.0330, -0.0221, -0.0031]],
       device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(3072,);tensor([ 4.8403e-08, -4.7589e-08, -1.9200e-08,  ..., -3.7528e-07,
        -8.3585e-08,  1.1806e-06], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024, 1024);tensor([[-0.0094,  0.0105,  0.0002,  ...,  0.0011, -0.0011, -0.0053],
        [-0.0013,  0.0026,  0.0064,  ..., -0.0070,  0.0060,  0.0043],
        [ 0.0120, -0.0036,  0.0024,  ..., -0.0085,  0.0027,  0.0016],
        ...,
        [ 0.0015,  0.0047,  0.0072,  ..., -0.0040, -0.0042,  0.0098],
        [-0.0088,  0.0080, -0.0029,  ...,  0.0009,  0.0052,  0.0054],
        [-0.0014,  0.0103,  0.0024,  ...,  0.0012, -0.0047, -0.0045]],
       device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024,);tensor([ 3.9213e-06, -1.6426e-06,  9.8545e-07,  ...,  2.1572e-06,
        -1.2974e-05, -6.7022e-07], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 1.4145e-07, -6.5150e-08, -8.9963e-08,  ...,  6.6297e-08,
        -5.1967e-07,  1.1074e-07], device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(4096, 1024);tensor([[ 0.0010,  0.0121,  0.0361,  ..., -0.0050,  0.0004,  0.0269],
        [ 0.0093, -0.0054, -0.0212,  ..., -0.0100, -0.0510, -0.0200],
        [-0.0059, -0.0614, -0.0540,  ..., -0.0108,  0.0058, -0.0245],
        ...,
        [-0.0159, -0.0038, -0.0378,  ..., -0.0140, -0.0242, -0.0176],
        [-0.0148,  0.0340, -0.0015,  ..., -0.0006, -0.0283, -0.0283],
        [-0.0227, -0.0190,  0.0181,  ...,  0.0146, -0.0186,  0.0036]],
       device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(4096,);tensor([-5.3382e-08,  9.2330e-08,  1.1265e-07,  ...,  2.0345e-08,
        -1.9966e-08, -2.3111e-07], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024, 4096);tensor([[ 4.6003e-05, -3.9498e-03, -1.8941e-03,  ..., -7.8330e-03,
          6.0528e-03,  4.7139e-03],
        [ 4.4218e-04, -4.7119e-03, -2.6025e-03,  ..., -3.3961e-03,
          1.2400e-03, -3.5693e-03],
        [ 4.3228e-03, -2.4329e-03, -5.4254e-03,  ...,  5.2029e-03,
          3.9249e-03, -4.9499e-03],
        ...,
        [ 2.0543e-03,  3.2824e-03,  7.0713e-03,  ...,  2.5177e-03,
         -1.0581e-02,  8.3151e-03],
        [ 7.8216e-03,  6.8759e-04, -7.0074e-03,  ...,  1.6408e-02,
         -7.3760e-04, -6.3811e-03],
        [-1.8196e-03,  9.6981e-03, -4.3132e-03,  ...,  9.5247e-03,
         -1.9405e-04,  3.9626e-04]], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([-3.8220e-07,  5.4332e-07,  4.6317e-06,  ...,  4.8073e-07,
         3.1259e-06, -4.0680e-06], device='cuda:0');
module.3.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.3.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-4.3331e-09, -2.0546e-07,  9.6607e-08,  ..., -2.7313e-07,
         2.0125e-07,  1.4927e-07], device='cuda:0');
module.3.attention.query_key_value;ColumnParallelLinear();(3072, 1024);tensor([[-0.0306, -0.0047, -0.0109,  ...,  0.0066,  0.0188, -0.0277],
        [ 0.0112, -0.0016,  0.0397,  ...,  0.0253,  0.0292,  0.0386],
        [ 0.0149, -0.0381,  0.0024,  ...,  0.0185, -0.0088,  0.0224],
        ...,
        [ 0.0302,  0.0068,  0.0273,  ..., -0.0055, -0.0241, -0.0054],
        [ 0.0130, -0.0478,  0.0232,  ...,  0.0092, -0.0104, -0.0069],
        [ 0.0125, -0.0264, -0.0225,  ...,  0.0023, -0.0140, -0.0195]],
       device='cuda:0');
module.3.attention.query_key_value;ColumnParallelLinear();(3072,);tensor([ 3.7384e-09, -5.8274e-09,  6.5862e-09,  ...,  2.5183e-07,
        -2.1211e-08, -4.6500e-07], device='cuda:0');
module.3.attention.dense;RowParallelLinear();(1024, 1024);tensor([[ 3.3487e-03, -4.0942e-03,  3.9546e-03,  ..., -9.6458e-03,
          3.0325e-03,  3.8844e-03],
        [ 2.4779e-03, -2.1187e-03,  5.0889e-03,  ..., -1.3725e-02,
         -9.6382e-03, -1.0484e-03],
        [-7.4278e-03, -4.5188e-03,  6.6545e-03,  ...,  7.5139e-03,
          8.1329e-04,  8.2650e-03],
        ...,
        [ 1.2016e-02, -7.7732e-05,  1.0451e-03,  ..., -2.8943e-03,
         -8.4794e-04, -1.6053e-03],
        [-2.5969e-03, -9.5107e-05, -1.3730e-02,  ...,  3.0903e-03,
         -3.0338e-03,  1.0324e-03],
        [-2.5766e-03, -3.6669e-03,  7.4359e-03,  ..., -3.1940e-03,
          4.8408e-03, -2.1457e-03]], device='cuda:0');
module.3.attention.dense;RowParallelLinear();(1024,);tensor([-3.9017e-07,  2.0940e-06,  3.8676e-06,  ...,  2.4287e-06,
         1.5592e-06, -5.2488e-06], device='cuda:0');
module.3.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.3.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 1.9934e-07,  3.9514e-07, -5.1264e-08,  ...,  1.6927e-07,
        -1.3460e-07, -2.7193e-07], device='cuda:0');
module.3.mlp.dense_h_to_4h;ColumnParallelLinear();(4096, 1024);tensor([[ 0.0016,  0.0062,  0.0049,  ..., -0.0131,  0.0371,  0.0076],
        [ 0.0167,  0.0092,  0.0069,  ...,  0.0154, -0.0156,  0.0441],
        [-0.0040,  0.0134, -0.0039,  ..., -0.0208,  0.0118,  0.0145],
        ...,
        [-0.0153, -0.0446, -0.0191,  ...,  0.0317, -0.0416, -0.0181],
        [ 0.0043, -0.0313, -0.0330,  ...,  0.0134,  0.0192,  0.0267],
        [-0.0016,  0.0470, -0.0044,  ..., -0.0114,  0.0021, -0.0198]],
       device='cuda:0');
module.3.mlp.dense_h_to_4h;ColumnParallelLinear();(4096,);tensor([ 3.3308e-08,  4.0084e-09, -3.7949e-08,  ...,  2.0395e-07,
         1.3814e-07,  1.3005e-07], device='cuda:0');
module.3.mlp.dense_4h_to_h;RowParallelLinear();(1024, 4096);tensor([[-1.3149e-02,  1.2396e-04,  2.5564e-03,  ..., -4.6501e-03,
         -4.4665e-03, -4.7435e-04],
        [ 1.7322e-03,  6.2219e-03, -5.0062e-04,  ...,  1.8768e-03,
         -1.6592e-03,  1.7858e-03],
        [-4.5871e-03, -2.3504e-03, -1.7465e-03,  ...,  5.8463e-03,
          4.2334e-03,  1.1191e-03],
        ...,
        [ 1.9670e-03, -1.0425e-02, -1.1253e-03,  ...,  1.1081e-04,
         -8.9209e-05, -4.1467e-06],
        [-5.0994e-03, -2.3814e-03,  2.3601e-03,  ...,  8.5801e-03,
         -4.9648e-03, -3.0846e-04],
        [-3.9989e-03, -6.9476e-04, -1.0434e-02,  ...,  6.8345e-03,
         -1.1255e-03,  1.0599e-03]], device='cuda:0');
module.3.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([-1.7862e-06, -7.2908e-07,  4.2843e-06,  ...,  1.3126e-06,
         2.6393e-06, -3.2595e-06], device='cuda:0');
