name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(3200, 1024);tensor([[ 0.0161,  0.0327, -0.0155,  ...,  0.0066, -0.0082, -0.0187],
        [-0.0134, -0.0032, -0.0246,  ...,  0.0200, -0.0231,  0.0354],
        [ 0.0275, -0.0147, -0.0392,  ...,  0.0118, -0.0263, -0.0164],
        ...,
        [ 0.0110,  0.0009, -0.0105,  ...,  0.0175, -0.0208, -0.0238],
        [ 0.0431, -0.0123,  0.0016,  ..., -0.0313,  0.0636,  0.0078],
        [-0.0520, -0.0092,  0.0031,  ...,  0.0334, -0.0298, -0.0115]],
       device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-6.8370e-06, -6.2967e-07, -2.2953e-06,  ...,  4.7200e-06,
        -2.2815e-06, -2.7902e-06], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192, 1024);tensor([[ 0.0412,  0.0008, -0.0256,  ..., -0.0212,  0.0172, -0.0126],
        [ 0.0234, -0.0005, -0.0258,  ...,  0.0153,  0.0308, -0.0060],
        [ 0.0150, -0.0130, -0.0171,  ...,  0.0124, -0.0226, -0.0171],
        ...,
        [-0.0071, -0.0356, -0.0039,  ...,  0.0044,  0.0008, -0.0051],
        [ 0.0139,  0.0213,  0.0261,  ..., -0.0042,  0.0034, -0.0059],
        [-0.0294, -0.0304,  0.0108,  ..., -0.0084, -0.0063, -0.0504]],
       device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192,);tensor([ 5.8818e-08,  1.0513e-07, -2.1113e-08,  4.8162e-08,  8.3954e-08,
         5.5802e-08,  8.1757e-08,  2.4697e-07, -3.4909e-08, -5.0985e-09,
        -2.3098e-07,  1.6832e-07, -1.3392e-08, -1.2314e-07,  1.4061e-10,
        -1.7512e-08, -4.2723e-08,  8.1526e-09, -2.6441e-08,  1.3928e-07,
         3.8136e-08,  4.0239e-09, -1.8487e-08, -1.2974e-07, -1.1151e-07,
         1.6767e-07,  1.6814e-07, -1.5158e-07,  2.0498e-07,  4.4612e-08,
         1.3225e-07, -2.4939e-07, -8.7375e-08,  1.0193e-07, -1.8936e-08,
         1.4361e-07,  2.2088e-08,  9.0616e-09,  1.0190e-07, -1.7561e-08,
        -7.2352e-08,  4.6428e-08,  2.6009e-08, -9.0085e-08, -1.0996e-08,
         1.0688e-07,  7.4252e-08,  5.9652e-08, -5.3338e-08,  2.6725e-07,
         6.0040e-08, -7.3729e-08, -6.8395e-08,  4.6862e-08, -5.7655e-08,
         6.7034e-10, -4.7164e-08,  7.3182e-08, -8.2106e-10, -9.5660e-08,
         3.4345e-08, -4.0197e-08, -5.3123e-09,  3.0234e-08,  7.2465e-15,
         4.9936e-15,  2.4119e-15,  2.3088e-15, -1.1410e-15, -3.1079e-15,
         1.7583e-15,  6.1018e-16,  9.3525e-17, -3.7466e-15, -1.9318e-16,
        -1.4099e-15,  6.2643e-15,  9.3818e-16,  1.2132e-15,  3.0069e-15,
         2.6179e-15, -2.7056e-15,  6.8561e-15, -6.3838e-15,  1.3938e-15,
        -8.3083e-15,  3.0981e-15, -1.0594e-15, -8.8249e-16, -4.2582e-15,
        -2.6094e-15, -3.1860e-15,  2.6152e-15, -2.7818e-15,  1.2337e-15,
        -4.2000e-15,  1.5809e-15,  4.5249e-15,  3.6677e-15,  8.1079e-15,
        -4.3461e-15,  3.8031e-15,  1.8628e-15, -1.6376e-15,  4.9651e-15,
        -2.4996e-15, -7.5366e-15, -2.2838e-15, -4.7101e-15,  1.6312e-15,
        -8.0618e-15,  4.9305e-15,  6.1721e-15, -1.0935e-15, -1.5755e-15,
        -9.3952e-16,  2.3357e-15, -1.6336e-15, -5.1391e-15,  4.4178e-16,
        -1.6041e-16, -2.5396e-15, -1.5108e-16, -2.9893e-15, -2.0885e-15,
         1.2705e-15,  2.5277e-15, -2.1751e-15, -2.3898e-06,  4.3716e-06,
         4.9400e-06,  1.5052e-06,  5.1694e-06,  2.9768e-06,  1.1887e-06,
         3.0105e-06,  3.3735e-06,  2.7759e-06,  6.6654e-06,  2.5686e-06,
        -3.6675e-06, -8.3340e-06, -1.5897e-06, -1.5552e-06, -1.2976e-06,
        -3.9965e-06, -4.0381e-06, -2.3449e-06,  2.5661e-06,  2.5181e-06,
         1.0823e-05,  4.6517e-06,  3.9974e-06, -3.9855e-06, -4.1348e-06,
         1.6288e-05, -1.4984e-05, -3.2999e-06,  4.2164e-06, -5.7240e-06,
         3.0163e-06, -1.1739e-05,  2.2293e-06, -6.9672e-06,  2.4989e-06,
        -1.9080e-06,  8.8294e-06, -4.6086e-06,  6.1014e-06,  5.2772e-06,
         5.4971e-06,  3.5516e-06, -2.7626e-06,  6.7610e-07, -6.0526e-06,
         1.0301e-05,  8.9437e-06, -1.1463e-05,  3.7499e-06, -3.0023e-07,
         2.9609e-06,  1.2478e-07, -3.8519e-06,  1.0400e-06, -2.9385e-06,
         2.0242e-06, -3.9810e-06,  4.5714e-06,  6.9893e-06,  1.1375e-05,
         1.3391e-05,  9.9741e-07], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024, 64);tensor([[ 0.0108,  0.0035, -0.0055,  ...,  0.0057, -0.0012, -0.0043],
        [ 0.0005, -0.0039, -0.0152,  ..., -0.0123,  0.0133, -0.0100],
        [ 0.0017,  0.0113, -0.0222,  ...,  0.0113,  0.0171,  0.0319],
        ...,
        [ 0.0103, -0.0157,  0.0120,  ..., -0.0116,  0.0263, -0.0198],
        [ 0.0235,  0.0092, -0.0062,  ..., -0.0070,  0.0013, -0.0032],
        [ 0.0096, -0.0164,  0.0169,  ..., -0.0285,  0.0242, -0.0017]],
       device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024,);tensor([-2.8643e-05,  1.4121e-05,  2.6624e-05,  ..., -1.0501e-05,
        -7.4630e-06,  7.3358e-06], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-1.0457e-06,  5.2020e-07,  9.7062e-07,  ..., -2.7887e-07,
        -2.7312e-07,  2.6215e-07], device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256, 1024);tensor([[-0.0121, -0.0217,  0.0139,  ...,  0.0059, -0.0070,  0.0141],
        [ 0.0007,  0.0201, -0.0545,  ...,  0.0164, -0.0313, -0.0126],
        [-0.0366, -0.0257,  0.0123,  ...,  0.0243, -0.0121,  0.0097],
        ...,
        [ 0.0097,  0.0059,  0.0081,  ..., -0.0139,  0.0072, -0.0271],
        [ 0.0131,  0.0323, -0.0063,  ...,  0.0171, -0.0001,  0.0121],
        [-0.0312, -0.0245,  0.0158,  ...,  0.0434, -0.0288,  0.0009]],
       device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256,);tensor([ 2.5045e-07, -3.0705e-07,  6.5410e-07, -1.9407e-07,  1.4239e-07,
         6.0436e-07, -5.4568e-07,  2.1666e-07,  2.0977e-07, -3.3064e-07,
         2.6182e-07,  5.1856e-07,  3.5969e-07, -3.6473e-07,  1.3419e-07,
        -6.4420e-07,  5.2299e-07, -6.6416e-07,  4.4447e-08, -1.2125e-07,
        -1.3390e-07, -4.2853e-07, -7.0360e-08,  1.0495e-07, -5.6644e-07,
         5.6282e-08,  1.7399e-07, -6.4294e-09, -1.3942e-08,  3.8298e-08,
         6.3443e-07,  5.0032e-07, -2.0652e-07, -4.4543e-07, -1.5355e-07,
        -3.4237e-07,  2.8415e-07, -2.5244e-07,  3.1029e-07, -4.3266e-07,
        -1.1806e-07, -4.2794e-07,  2.7212e-07,  1.1797e-07,  1.7459e-07,
        -3.8700e-09, -1.5496e-07,  4.4499e-08, -3.5031e-07, -3.5136e-07,
         1.8597e-07, -3.8313e-08,  9.9405e-07,  6.4064e-08,  2.5828e-07,
         6.8999e-07, -2.1408e-07, -1.9988e-07, -1.0906e-07, -4.0113e-07,
        -2.9089e-08, -3.8193e-07, -1.0621e-06, -1.1555e-07, -3.6246e-07,
         1.1375e-07, -6.0122e-07, -3.1516e-07,  3.9066e-07,  2.4940e-07,
        -1.7749e-07, -2.7389e-07,  3.2835e-07,  3.0389e-08, -3.6889e-07,
        -1.7137e-07, -1.6155e-07, -2.8878e-07, -5.4528e-08,  8.7116e-09,
         1.0135e-07,  3.3641e-07,  1.6232e-07, -2.5311e-07, -2.1506e-07,
        -2.4895e-07, -4.7747e-08,  2.6350e-07, -5.9096e-07, -2.7322e-07,
        -2.8490e-07,  2.1218e-08, -5.1713e-08,  2.4731e-07,  1.5553e-08,
         3.6742e-07, -1.4468e-07, -2.5988e-07,  3.5244e-07, -7.4703e-08,
        -2.4751e-07, -3.0804e-10, -1.5829e-07,  2.1351e-07,  1.8655e-07,
        -3.4165e-07,  2.9237e-07,  4.7433e-07, -3.4418e-07,  1.0778e-07,
         3.8256e-07, -1.5302e-07,  2.6605e-08,  4.8330e-07,  3.2015e-07,
        -2.9925e-07,  1.3532e-07,  2.5443e-07, -6.7503e-09, -7.2302e-08,
        -6.4338e-07,  6.8918e-07,  8.2698e-07, -9.3626e-09, -1.9568e-07,
        -1.0370e-07, -3.0443e-07, -8.7132e-07, -9.0119e-08,  2.1631e-07,
         1.3303e-07,  2.7497e-07,  3.8778e-07, -2.0189e-07,  3.5850e-07,
         2.6876e-07,  2.3265e-07,  1.2726e-07,  8.1147e-08,  3.1217e-07,
        -4.0054e-07,  7.9814e-07,  1.1807e-07,  8.7514e-07, -1.9296e-07,
         6.3029e-07,  1.5102e-07,  2.6871e-07,  6.8147e-07,  5.0349e-07,
         2.6480e-07, -4.7389e-07,  3.1524e-07,  3.5787e-07,  9.5575e-08,
         1.3719e-07, -1.2017e-07, -6.6012e-08, -3.5469e-07, -7.7420e-08,
        -3.6861e-07, -5.1993e-07,  7.6440e-07, -2.9683e-07,  4.8714e-07,
         2.2653e-07,  5.6392e-08,  1.4380e-06,  6.2476e-07, -7.7366e-07,
        -2.3096e-07,  8.5381e-07, -1.8241e-07,  1.3953e-07,  1.2478e-07,
        -1.9882e-07, -1.2689e-07,  8.4422e-07, -6.6769e-07,  2.1069e-07,
        -5.5873e-07, -8.3461e-08,  8.4358e-08, -8.1237e-08, -1.5357e-07,
         2.4896e-07, -1.0965e-07, -1.4900e-07,  2.0697e-07, -2.0171e-07,
         3.5538e-07,  1.4793e-07,  1.8413e-07, -1.9867e-07, -9.7630e-08,
         5.6132e-07, -5.7283e-07, -1.8946e-07, -1.5744e-07, -7.5969e-08,
        -3.1132e-07, -2.0585e-07,  8.7272e-08, -1.1791e-07, -2.9863e-07,
        -2.5416e-07,  5.6263e-07, -5.1005e-08, -3.7554e-07, -1.7576e-07,
        -4.8035e-07, -1.2177e-07, -2.6806e-07,  7.4693e-08, -1.6964e-07,
         7.5508e-07, -2.5656e-07, -1.0271e-07,  4.5275e-07, -1.3940e-09,
         2.7798e-08,  1.5171e-07,  1.4058e-07, -1.8821e-07, -1.5513e-07,
        -4.3634e-07,  3.9169e-07,  6.5205e-07, -3.4534e-07,  6.8850e-07,
        -3.6783e-07, -2.3504e-07,  6.8705e-07,  1.5115e-07,  2.0322e-07,
         6.7959e-07, -2.3183e-07, -1.5790e-07, -4.8773e-07, -8.3564e-07,
        -1.7704e-07, -6.6406e-08,  9.4559e-08,  7.1675e-07,  3.2406e-07,
        -1.9690e-08, -1.6709e-08, -1.5005e-07, -2.7485e-07,  3.8212e-07,
        -2.9659e-08,  4.3622e-08,  2.6951e-07, -3.8606e-07,  7.5473e-07,
        -1.5482e-07], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024, 256);tensor([[ 1.4966e-02, -9.5177e-04, -3.3023e-03,  ..., -1.2994e-02,
         -1.0528e-02,  1.5198e-02],
        [-3.5447e-03,  1.5518e-03, -2.0037e-02,  ..., -3.2884e-03,
          1.3720e-02,  7.3888e-03],
        [-1.2626e-02,  2.5562e-03, -1.5173e-02,  ..., -1.4065e-02,
          2.8518e-02, -1.8210e-02],
        ...,
        [ 1.9405e-03,  2.3040e-02,  3.1486e-05,  ..., -2.8654e-03,
          1.4497e-02,  2.6169e-02],
        [-1.1505e-03, -1.4978e-02, -5.7289e-03,  ...,  1.2240e-02,
          3.7087e-03,  2.2994e-03],
        [ 3.0715e-03,  1.7774e-02, -1.6914e-02,  ...,  1.8718e-03,
         -1.0583e-02, -1.7447e-02]], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([ 3.5072e-07, -6.1701e-07, -5.7381e-07,  ..., -3.1622e-06,
        -7.0885e-09,  3.4073e-07], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 2.9947e-07, -1.6608e-07, -6.6290e-07,  ..., -8.2493e-07,
        -1.9948e-07, -2.9883e-07], device='cuda:0');
