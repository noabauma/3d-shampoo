name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(3200, 1024);tensor([[ 0.0097,  0.0148,  0.0265,  ..., -0.0088,  0.0089, -0.0387],
        [-0.0055, -0.0007, -0.0145,  ..., -0.0100, -0.0022,  0.0130],
        [ 0.0080,  0.0245,  0.0355,  ...,  0.0143,  0.0075, -0.0191],
        ...,
        [-0.0263,  0.0066,  0.0199,  ...,  0.0195,  0.0071, -0.0044],
        [-0.0208, -0.0184, -0.0069,  ...,  0.0098,  0.0223, -0.0035],
        [ 0.0089, -0.0207, -0.0199,  ..., -0.0028, -0.0212,  0.0122]],
       device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-6.8370e-06, -6.2967e-07, -2.2953e-06,  ...,  4.7200e-06,
        -2.2815e-06, -2.7902e-06], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192, 1024);tensor([[-0.0258, -0.0323,  0.0035,  ...,  0.0017, -0.0064,  0.0141],
        [-0.0018,  0.0092, -0.0212,  ..., -0.0037, -0.0060,  0.0120],
        [-0.0051, -0.0251, -0.0466,  ..., -0.0026, -0.0195,  0.0326],
        ...,
        [-0.0146,  0.0021, -0.0046,  ..., -0.0021,  0.0167, -0.0127],
        [ 0.0497, -0.0084, -0.0092,  ..., -0.0033,  0.0085, -0.0389],
        [-0.0430,  0.0031, -0.0196,  ..., -0.0445, -0.0290,  0.0196]],
       device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192,);tensor([ 4.6356e-08,  9.6096e-08,  8.0180e-08,  5.4753e-08, -1.7491e-08,
         5.3823e-08, -3.3663e-08,  1.2132e-07, -1.0380e-07, -1.3010e-07,
         6.2843e-08, -5.3594e-08, -6.1215e-08,  1.3307e-07,  8.8361e-08,
        -9.8035e-09, -2.5361e-08, -1.2934e-07, -3.9907e-09,  1.9291e-08,
         3.7078e-08,  3.3781e-08, -9.2994e-08, -8.2617e-09, -2.4555e-08,
        -1.4754e-07, -1.2189e-07,  1.2437e-08, -1.7312e-07,  5.1790e-08,
         1.6111e-07, -9.9988e-08,  8.1074e-09,  1.0433e-07, -6.8074e-08,
        -3.0064e-08, -7.2773e-08, -2.3405e-07,  1.6083e-08, -4.0722e-08,
         1.5706e-08, -9.5953e-08, -1.3501e-07,  7.0105e-08, -5.6556e-08,
         7.4856e-08,  2.0059e-08,  1.0856e-07,  7.0614e-08,  1.3447e-07,
        -1.8228e-07,  7.1222e-08, -2.0199e-07, -8.3798e-08, -6.0102e-08,
        -1.4605e-07,  2.0986e-07, -8.7896e-10,  1.8046e-08, -1.6964e-07,
         6.6138e-08,  3.3625e-08, -2.1602e-08, -7.5354e-08, -4.3169e-15,
         9.2089e-15, -2.8862e-15, -4.8780e-15, -5.2848e-15,  6.1152e-15,
         2.8694e-15,  6.4620e-15, -7.4407e-15, -3.8220e-15,  3.2483e-15,
         4.7122e-15, -2.2819e-15,  6.9816e-15,  2.7133e-15,  4.5857e-15,
         2.5943e-15,  8.6813e-15, -3.7703e-16,  1.5683e-15,  6.0911e-15,
        -5.0360e-17, -2.3821e-16,  1.8071e-15,  1.0394e-15,  8.4146e-16,
        -2.9046e-15,  6.3626e-15,  2.0208e-15,  4.1103e-15, -1.5926e-15,
        -2.8721e-15, -6.1045e-16, -1.7421e-15,  2.7855e-15, -3.5199e-15,
        -5.5830e-15, -3.3141e-15,  6.4394e-15, -1.0038e-14, -3.5921e-15,
         2.5593e-15,  2.4594e-15, -5.7128e-16,  6.9358e-16,  3.6709e-15,
        -1.8706e-15,  2.2566e-15, -5.7399e-15, -2.9427e-15,  1.1655e-15,
         1.5241e-14, -2.5979e-15, -1.0825e-15, -5.9780e-15,  2.1452e-15,
        -9.9392e-15,  1.2044e-16, -2.4386e-15,  3.5915e-15,  1.5372e-15,
        -2.1045e-15, -1.2105e-15, -1.0402e-15,  2.7326e-06, -2.4406e-06,
        -8.4008e-06, -6.4796e-07, -2.2200e-06,  1.6699e-06, -5.1566e-06,
        -1.9581e-06, -1.4093e-06, -6.1810e-06,  5.0435e-06,  4.0689e-06,
         5.8528e-06,  1.3966e-07, -2.5468e-06,  2.9316e-06, -4.5763e-06,
         1.0743e-05, -4.1373e-06,  9.3978e-06, -3.7701e-06, -5.7419e-06,
        -5.8465e-06, -6.4891e-06, -7.3040e-06,  4.2538e-06,  4.3066e-06,
         5.0527e-07, -6.9351e-06, -8.1631e-06, -1.2206e-06,  5.1123e-06,
         7.3456e-06,  4.0236e-06, -7.8290e-07, -3.3255e-06,  1.4558e-06,
         2.3737e-06, -7.8079e-06, -3.4943e-06,  6.7949e-06,  8.3454e-06,
        -4.7898e-06,  4.5323e-06,  2.5768e-06, -1.7888e-05,  7.3914e-06,
        -8.8736e-08, -2.0321e-06,  1.1971e-06, -1.0548e-05, -2.1258e-06,
        -9.3832e-07, -5.1289e-06, -1.2453e-07, -3.2483e-06,  1.3290e-08,
         9.1795e-06, -4.4471e-06, -1.7945e-06,  3.9389e-06,  2.1507e-06,
         1.2588e-06, -9.4385e-07], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024, 64);tensor([[-0.0009, -0.0013,  0.0262,  ..., -0.0012, -0.0051,  0.0030],
        [-0.0026, -0.0101,  0.0073,  ...,  0.0155, -0.0135,  0.0146],
        [ 0.0055,  0.0046,  0.0077,  ...,  0.0140, -0.0149,  0.0153],
        ...,
        [-0.0170,  0.0127,  0.0114,  ...,  0.0067, -0.0143,  0.0155],
        [ 0.0091,  0.0051,  0.0076,  ..., -0.0333, -0.0065,  0.0126],
        [ 0.0131,  0.0176,  0.0150,  ..., -0.0027, -0.0038, -0.0116]],
       device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024,);tensor([-2.8643e-05,  1.4121e-05,  2.6624e-05,  ..., -1.0501e-05,
        -7.4630e-06,  7.3358e-06], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-1.0457e-06,  5.2020e-07,  9.7062e-07,  ..., -2.7887e-07,
        -2.7312e-07,  2.6215e-07], device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256, 1024);tensor([[ 0.0060, -0.0009, -0.0135,  ...,  0.0081,  0.0067, -0.0048],
        [ 0.0013,  0.0005, -0.0101,  ..., -0.0034, -0.0170,  0.0131],
        [-0.0030, -0.0120,  0.0102,  ...,  0.0010,  0.0291,  0.0141],
        ...,
        [-0.0012, -0.0261,  0.0140,  ...,  0.0075,  0.0108,  0.0112],
        [ 0.0154, -0.0072, -0.0247,  ..., -0.0110,  0.0249,  0.0099],
        [-0.0073,  0.0341, -0.0094,  ..., -0.0089,  0.0122, -0.0153]],
       device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256,);tensor([-6.2527e-07,  5.8976e-07, -1.9039e-07, -4.5491e-07,  2.6223e-07,
        -1.6891e-07,  1.1223e-07,  3.3180e-07,  1.9031e-07,  1.9299e-08,
        -9.5294e-08, -2.1030e-08, -3.8918e-07,  6.2891e-07,  5.9816e-07,
        -2.0108e-07,  3.5328e-07,  3.0531e-07,  1.2339e-08,  8.8602e-09,
         1.3966e-07, -2.2095e-07,  4.0071e-07,  3.5701e-07, -3.8878e-07,
        -1.0197e-08,  2.0352e-07,  2.6942e-07, -8.0142e-08, -1.1763e-07,
         2.5054e-08,  3.0205e-07,  4.6498e-07, -3.6017e-07, -9.6671e-08,
         4.5635e-07, -4.6478e-07, -2.3352e-08,  9.0855e-08,  4.2736e-08,
         4.7097e-07,  5.4683e-07, -2.0382e-07, -1.9585e-07,  2.8920e-07,
        -5.6349e-07, -4.0165e-07, -1.7708e-07, -1.1277e-07, -6.2027e-07,
        -6.8659e-08, -1.2756e-07, -3.0556e-07,  3.3582e-07, -3.2266e-07,
         1.1388e-07,  1.8654e-07, -6.5032e-07, -4.4671e-07,  4.8583e-07,
        -1.5994e-07, -6.8822e-07,  1.3698e-07, -1.0114e-06, -9.7815e-08,
        -9.6107e-07,  1.3423e-08, -4.9466e-07,  1.6110e-07,  4.5415e-07,
         3.5284e-07, -1.8414e-08,  1.0683e-07, -2.0034e-07,  9.2580e-07,
         1.9406e-07, -3.5409e-07,  1.2155e-07,  3.2410e-07,  8.9237e-07,
        -3.9878e-07, -5.3222e-07,  3.9606e-07,  2.6818e-07,  7.1247e-07,
        -1.1361e-07, -1.6109e-07, -6.9439e-08,  2.2514e-07,  5.3931e-08,
         5.2263e-07,  3.1711e-08, -1.3407e-07, -5.5768e-08, -8.6602e-08,
         7.5859e-07,  1.9572e-07,  5.2624e-07, -7.8770e-07, -3.5022e-07,
         9.8917e-08, -3.0815e-07,  1.1868e-07,  2.5483e-07, -5.4544e-07,
         5.3826e-07,  2.0512e-07,  2.5696e-07,  4.9374e-07, -2.8465e-07,
         1.6333e-07, -3.5538e-07,  3.1951e-07, -4.4015e-08,  3.6086e-07,
        -4.0443e-07, -9.2394e-07, -5.4856e-07,  7.6309e-08, -8.6509e-08,
        -3.4830e-07, -3.3395e-07, -4.0229e-08, -4.4965e-07,  5.5785e-08,
        -8.2604e-08, -4.1097e-08, -9.9736e-08, -4.7767e-07, -6.4292e-08,
         8.6671e-08,  1.2717e-07, -2.0371e-07,  2.1847e-07,  5.4262e-07,
        -4.7208e-07,  4.6151e-07, -2.5843e-08,  9.7574e-08,  5.7050e-08,
         1.7305e-07,  4.0959e-07, -6.1133e-07, -1.0614e-06,  3.0976e-07,
        -1.6252e-07, -6.5114e-08,  4.9491e-08, -6.4573e-07,  1.0980e-07,
         1.6695e-07,  4.3230e-07, -4.1200e-07,  6.6484e-07,  3.5073e-07,
         4.2786e-08, -3.2057e-07, -2.9973e-07,  2.6836e-10,  6.0464e-07,
        -6.4612e-09,  4.3468e-07,  3.8431e-07, -6.0057e-07, -7.9508e-08,
        -1.4407e-07,  4.8862e-07, -1.1307e-07,  2.2670e-07, -7.4392e-08,
        -5.2691e-08,  2.9921e-07,  1.5128e-07, -4.3507e-07,  4.0423e-07,
         5.3803e-08, -2.1237e-07, -3.8779e-07,  1.6558e-07,  1.5628e-07,
        -1.2337e-07,  4.1781e-07,  2.1592e-07,  1.0710e-07,  3.8406e-07,
        -2.0195e-07, -6.7974e-08,  2.1848e-07, -3.8754e-08, -2.2947e-07,
         5.9320e-08,  3.3125e-07,  2.6625e-07, -1.1267e-07,  3.3668e-07,
        -8.5791e-07, -4.4046e-07,  1.0867e-07,  4.9827e-08,  5.9564e-07,
        -3.4409e-07, -9.1113e-07, -5.7795e-07,  4.5319e-07, -1.4377e-07,
         2.8905e-07,  2.4014e-07,  2.2223e-07, -1.0867e-07,  7.3869e-07,
         4.2064e-07,  1.7074e-07, -5.9864e-08,  4.1915e-08, -1.2638e-08,
        -3.5082e-07, -5.6182e-07, -3.2957e-07,  2.2855e-07,  1.6981e-07,
        -1.4224e-07,  4.4287e-07, -2.0734e-07, -2.1780e-07, -1.6720e-07,
        -2.4837e-07, -2.4754e-07, -4.9806e-07, -8.9220e-07, -1.5893e-07,
        -5.7224e-07, -4.9552e-07,  5.7253e-07,  1.2177e-08, -7.0882e-07,
        -3.7387e-07, -3.9689e-07,  1.3191e-07, -2.9502e-07,  1.9265e-07,
        -4.9112e-07,  8.5834e-07, -1.6299e-08,  1.1995e-07,  5.4590e-07,
        -3.4857e-07, -1.0963e-07, -1.4547e-07,  4.3564e-07,  2.0671e-07,
         2.4931e-07,  1.6576e-08, -7.8093e-08, -3.1808e-07,  2.1528e-07,
        -1.4047e-07], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024, 256);tensor([[ 0.0144, -0.0005, -0.0076,  ...,  0.0028,  0.0057,  0.0134],
        [ 0.0287,  0.0114,  0.0067,  ...,  0.0006,  0.0033,  0.0072],
        [-0.0126, -0.0311, -0.0022,  ...,  0.0126,  0.0038, -0.0061],
        ...,
        [-0.0071,  0.0028,  0.0318,  ...,  0.0163, -0.0032, -0.0177],
        [ 0.0004, -0.0047, -0.0231,  ..., -0.0132,  0.0088,  0.0175],
        [ 0.0203, -0.0077, -0.0209,  ..., -0.0026, -0.0102,  0.0039]],
       device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([ 3.5072e-07, -6.1701e-07, -5.7381e-07,  ..., -3.1622e-06,
        -7.0885e-09,  3.4073e-07], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 2.9947e-07, -1.6608e-07, -6.6290e-07,  ..., -8.2493e-07,
        -1.9948e-07, -2.9883e-07], device='cuda:0');
