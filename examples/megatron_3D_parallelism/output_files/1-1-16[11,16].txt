name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(3200, 1024);tensor([[ 0.0129, -0.0262,  0.0063,  ...,  0.0122,  0.0014, -0.0102],
        [ 0.0101,  0.0302, -0.0101,  ...,  0.0082, -0.0267, -0.0033],
        [ 0.0066, -0.0156, -0.0121,  ...,  0.0312,  0.0202,  0.0226],
        ...,
        [-0.0113, -0.0115,  0.0314,  ...,  0.0107, -0.0156, -0.0267],
        [-0.0038,  0.0122, -0.0086,  ...,  0.0207, -0.0185, -0.0098],
        [ 0.0138, -0.0054, -0.0291,  ...,  0.0046, -0.0397, -0.0230]],
       device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-6.8370e-06, -6.2967e-07, -2.2953e-06,  ...,  4.7200e-06,
        -2.2815e-06, -2.7902e-06], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192, 1024);tensor([[ 0.0124, -0.0010, -0.0138,  ...,  0.0024, -0.0183, -0.0020],
        [-0.0171, -0.0066,  0.0218,  ...,  0.0051,  0.0189, -0.0142],
        [ 0.0305,  0.0072,  0.0226,  ..., -0.0001,  0.0034, -0.0268],
        ...,
        [ 0.0015,  0.0183,  0.0349,  ..., -0.0068,  0.0208,  0.0341],
        [ 0.0136,  0.0249, -0.0251,  ..., -0.0113, -0.0478,  0.0355],
        [ 0.0281, -0.0298,  0.0232,  ..., -0.0158, -0.0289, -0.0325]],
       device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192,);tensor([-5.9050e-08,  4.2219e-08, -1.4429e-07,  1.0664e-08,  3.3235e-08,
         4.6717e-08, -5.6501e-08, -1.7923e-07, -6.8124e-08, -6.7890e-08,
        -4.5910e-08,  7.2137e-08,  1.9660e-07,  1.0342e-07,  6.3430e-08,
        -1.6003e-07, -1.2435e-07, -8.1568e-08,  3.8656e-08, -1.6168e-07,
        -1.3792e-07,  2.7659e-08,  2.3310e-08,  3.6524e-08, -4.9383e-08,
         1.4743e-08, -2.3053e-08, -9.8098e-08, -8.7487e-08,  3.9958e-08,
         3.1990e-08,  3.6431e-08,  1.2361e-07, -5.8031e-08,  3.6958e-08,
         8.2024e-08,  1.2869e-08,  2.7035e-08,  2.4220e-08, -3.5710e-08,
        -1.4342e-07, -4.8376e-08, -4.9860e-08, -2.7402e-09, -7.7240e-08,
         4.8186e-08, -8.6096e-08, -3.9981e-08, -1.1007e-08,  6.9998e-08,
         1.5277e-08, -8.4861e-08, -2.7087e-09, -3.6842e-08, -7.8223e-08,
         2.6065e-08,  1.2350e-07,  1.0864e-07, -1.1600e-07,  4.1976e-08,
        -2.2381e-08, -8.0704e-08,  1.6979e-07,  1.9790e-07, -1.9262e-15,
        -7.8929e-15, -4.8257e-15,  4.8252e-15, -4.5910e-16,  1.4953e-15,
         1.3128e-15, -4.3904e-15, -3.6182e-15,  1.0437e-15,  5.7421e-16,
        -7.8790e-16,  1.4564e-15,  8.4546e-16,  4.7714e-15,  5.5215e-15,
         3.8908e-15,  2.8241e-15, -1.5508e-16, -1.7663e-15, -5.0759e-16,
         6.6267e-16, -6.1817e-17,  9.6033e-15, -6.2579e-15, -1.6080e-15,
        -2.7562e-15,  2.2531e-15, -9.7122e-15, -1.4631e-15, -6.2403e-16,
        -3.0280e-15, -7.1649e-16,  3.8543e-15, -5.0546e-16,  2.2844e-15,
        -1.7080e-15, -3.5915e-15,  1.5450e-15,  3.0051e-15, -1.0935e-15,
         3.7306e-15,  3.0003e-16,  6.4029e-16, -6.0725e-16,  1.7674e-15,
        -4.9827e-16, -2.3075e-15, -7.9062e-15,  7.0424e-16, -4.3451e-15,
        -3.7493e-15, -1.9238e-15, -3.3901e-15, -1.2638e-15, -1.2939e-15,
         2.9782e-15,  4.6203e-16,  5.3885e-15,  2.0973e-15, -6.9225e-16,
        -1.5978e-15,  1.7951e-15, -2.8854e-15,  6.4786e-06,  6.1813e-06,
         1.8150e-06, -5.8642e-06, -5.3457e-06, -5.0716e-07, -8.3315e-06,
        -3.4319e-06, -3.3704e-06,  1.7758e-06, -4.7157e-06, -5.9592e-06,
        -1.0178e-05, -8.3735e-07, -7.4778e-06, -9.4721e-07,  2.3994e-06,
         5.8045e-06, -2.1139e-06, -8.4061e-06,  4.5747e-06, -6.9206e-06,
        -1.1930e-06, -1.5808e-07, -2.6775e-06, -7.4113e-06,  6.6435e-06,
        -8.6324e-08,  8.0641e-09, -2.1258e-06, -1.7167e-06, -1.6626e-06,
        -1.2303e-05, -5.6548e-06, -1.0571e-05, -7.6487e-06,  7.1828e-06,
         1.2126e-05, -1.8105e-06, -2.2227e-06, -7.7919e-07,  4.8839e-06,
        -3.8900e-06, -7.2092e-07,  5.5193e-06,  8.6138e-06,  1.1304e-05,
         3.6415e-06, -2.6742e-06, -2.7301e-06,  1.0084e-05, -3.5874e-06,
        -7.6064e-06, -3.2151e-06,  3.1162e-06,  1.0435e-06, -1.1188e-07,
        -6.9513e-06,  9.1156e-06,  3.6157e-06, -9.5164e-07, -2.3711e-06,
         6.5114e-06,  3.4620e-06], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024, 64);tensor([[ 0.0091,  0.0174, -0.0070,  ..., -0.0170, -0.0067, -0.0113],
        [ 0.0141,  0.0108, -0.0113,  ..., -0.0195, -0.0053, -0.0117],
        [-0.0073,  0.0051, -0.0241,  ...,  0.0012, -0.0097, -0.0042],
        ...,
        [-0.0267, -0.0075, -0.0061,  ..., -0.0020, -0.0047, -0.0014],
        [ 0.0213, -0.0048, -0.0057,  ...,  0.0205, -0.0221,  0.0260],
        [ 0.0096,  0.0005,  0.0195,  ..., -0.0075,  0.0341,  0.0106]],
       device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024,);tensor([-2.8643e-05,  1.4121e-05,  2.6624e-05,  ..., -1.0501e-05,
        -7.4630e-06,  7.3358e-06], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-1.0457e-06,  5.2020e-07,  9.7062e-07,  ..., -2.7887e-07,
        -2.7312e-07,  2.6215e-07], device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256, 1024);tensor([[ 0.0072, -0.0093,  0.0002,  ...,  0.0257,  0.0125,  0.0170],
        [ 0.0285, -0.0189, -0.0045,  ..., -0.0083, -0.0069, -0.0228],
        [ 0.0079,  0.0241, -0.0051,  ..., -0.0080,  0.0322, -0.0060],
        ...,
        [ 0.0267,  0.0129,  0.0103,  ..., -0.0251,  0.0072,  0.0200],
        [-0.0030,  0.0163,  0.0263,  ..., -0.0134, -0.0137,  0.0170],
        [ 0.0166,  0.0023,  0.0156,  ..., -0.0065,  0.0241, -0.0482]],
       device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256,);tensor([ 6.2852e-07, -7.1847e-08, -9.3837e-08,  6.6419e-07, -1.0883e-07,
        -3.4001e-07,  4.1478e-08, -3.3017e-07, -2.9702e-07, -3.3680e-07,
        -1.1797e-07,  8.0610e-08, -5.2948e-08, -4.2973e-07,  2.2686e-07,
         6.2913e-07,  9.1630e-08, -3.3285e-07, -2.4927e-07, -1.1273e-07,
         2.1166e-07, -1.9001e-07, -1.4572e-07,  1.6901e-07, -9.1638e-07,
        -5.7975e-09, -2.5994e-07,  2.1673e-07,  3.6615e-07,  2.0189e-07,
         6.0847e-07, -3.0494e-07,  2.0433e-07, -1.6031e-07, -4.6722e-07,
        -1.3315e-08, -2.4928e-07,  2.2816e-07,  3.9265e-09, -3.7786e-07,
        -4.4151e-07, -3.9877e-07, -6.3446e-08,  2.4269e-08, -1.5200e-07,
         1.6781e-07, -1.8544e-07,  3.7712e-07, -1.9699e-07, -2.2606e-07,
         1.8201e-07, -4.7006e-07, -7.6461e-07,  3.7726e-07, -4.4370e-08,
         2.8631e-07, -8.0512e-07,  6.9641e-08, -9.9918e-08, -2.5777e-08,
         6.2432e-08, -7.2074e-08, -1.3192e-07,  1.5155e-08,  2.1215e-07,
        -3.6871e-07, -2.6353e-07,  1.9032e-08, -2.9317e-08,  3.9737e-08,
        -3.1870e-07,  2.1507e-07,  5.4478e-07, -1.2462e-07, -4.3019e-07,
         3.5102e-08, -8.7960e-08,  1.3112e-08, -3.4654e-07, -3.5895e-07,
         1.0361e-07, -2.8893e-07, -3.4663e-07, -3.4902e-07,  8.4381e-08,
        -2.2148e-07,  7.5235e-07,  2.8658e-08, -1.2387e-07, -1.7215e-07,
         2.3765e-07,  9.4238e-07, -1.4929e-07,  1.4569e-07, -4.5640e-07,
        -2.7721e-07,  2.6393e-07,  9.9420e-08,  2.0522e-07,  1.6000e-08,
         7.3522e-08,  7.0442e-08,  1.3289e-07,  1.8710e-08,  3.5655e-07,
        -2.8630e-07,  1.6315e-07,  2.8331e-07,  5.1168e-07, -3.5088e-07,
         3.1566e-07, -2.4750e-07,  2.9232e-07,  3.3612e-07,  1.7821e-08,
        -1.0659e-07,  1.3894e-08, -2.5964e-07, -3.9403e-07,  9.0138e-08,
        -6.5836e-07, -2.6613e-07, -5.2227e-07,  1.5113e-07, -3.7954e-07,
        -8.5797e-08,  1.7173e-06,  1.1333e-07, -4.2189e-07,  2.9700e-07,
         1.2832e-07,  3.0135e-08, -4.4540e-07, -1.8067e-07,  1.3514e-07,
        -8.6294e-07,  1.5808e-07, -4.6124e-07, -1.2745e-07, -8.3345e-07,
         1.0860e-07,  6.1249e-07,  7.4223e-07,  2.1879e-07, -9.0415e-08,
         3.6366e-08,  4.1933e-07,  6.8741e-08,  6.8939e-08,  8.2713e-07,
         1.8953e-07, -5.3940e-07,  2.9376e-07, -1.7310e-07,  1.8471e-07,
         3.3875e-07, -8.2888e-08, -6.7570e-08, -3.4391e-07, -1.6489e-07,
        -5.1646e-07, -6.5650e-07, -2.6321e-07,  5.5844e-07, -2.7249e-07,
         3.5241e-08, -1.7926e-07,  4.7512e-07,  1.5313e-07,  3.3030e-07,
         2.4384e-07,  5.8986e-07,  2.9821e-07, -1.4508e-07,  2.0201e-08,
         5.8727e-07, -7.9812e-08,  5.8988e-08,  1.5872e-08, -9.9629e-08,
        -1.3441e-07, -2.3772e-07, -1.5429e-07,  2.7261e-07,  2.4301e-07,
        -3.6265e-08,  3.7385e-07, -4.6413e-07, -1.9832e-07, -4.3433e-07,
        -4.4460e-07,  5.8329e-07,  5.6951e-08, -8.3710e-07, -9.3707e-08,
        -5.7998e-07, -5.5654e-07, -5.0248e-07,  1.1894e-07, -2.0606e-08,
         8.0436e-08, -1.4514e-07,  7.2648e-08,  6.1261e-08, -5.2482e-07,
         7.4338e-07, -1.4371e-07,  9.0314e-08,  5.5136e-07,  2.2802e-07,
         2.2328e-07,  1.9291e-07, -4.6902e-07,  5.7591e-07, -4.8172e-08,
         5.6031e-08,  5.6378e-07,  2.9660e-08, -1.1572e-07, -2.0673e-07,
        -1.9354e-07, -7.1160e-08,  1.1721e-07,  4.2876e-07,  1.7734e-07,
        -2.1023e-07, -1.5521e-07, -9.9711e-08,  3.3348e-07,  4.3090e-07,
         9.2958e-07, -3.7643e-07,  1.7816e-07,  2.2992e-07,  1.3070e-07,
         1.4463e-07, -1.2832e-07,  3.4975e-07,  1.2011e-07, -6.0753e-07,
        -1.4618e-07,  7.0698e-07,  5.1137e-07, -1.3281e-07,  2.5655e-08,
         8.6214e-08,  2.8905e-07,  1.9051e-07,  1.0644e-06,  2.0384e-08,
        -1.2484e-07, -4.4656e-07, -7.8793e-07, -3.3672e-07, -1.9317e-07,
         4.1695e-07], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024, 256);tensor([[ 1.3251e-02, -6.1206e-03,  1.9687e-05,  ..., -1.0211e-02,
         -9.5675e-03,  1.2417e-02],
        [ 2.2249e-02,  4.7247e-03,  4.4351e-03,  ...,  6.2437e-04,
         -2.3608e-02, -7.1806e-03],
        [-1.8122e-02, -2.8887e-04, -1.0127e-02,  ..., -7.4377e-03,
         -6.6573e-03,  6.6370e-03],
        ...,
        [ 1.8392e-02,  3.5501e-03, -6.4552e-03,  ...,  1.0927e-02,
         -1.6492e-02, -1.6324e-02],
        [-3.5520e-03,  5.1549e-03,  1.1416e-02,  ..., -1.2019e-02,
         -1.4605e-02, -6.0602e-03],
        [ 1.7552e-02,  3.7353e-03,  5.0899e-03,  ...,  8.4824e-03,
          5.4404e-03,  2.3618e-03]], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([ 3.5072e-07, -6.1701e-07, -5.7381e-07,  ..., -3.1622e-06,
        -7.0885e-09,  3.4073e-07], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 2.9947e-07, -1.6608e-07, -6.6290e-07,  ..., -8.2493e-07,
        -1.9948e-07, -2.9883e-07], device='cuda:0');
