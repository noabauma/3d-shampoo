name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(25216, 1024);tensor([[-0.0027,  0.0215, -0.0055,  ..., -0.0199,  0.0051,  0.0159],
        [-0.0050,  0.0148,  0.0032,  ..., -0.0099, -0.0060,  0.0020],
        [-0.0137, -0.0132, -0.0079,  ..., -0.0023,  0.0008, -0.0156],
        ...,
        [-0.0369,  0.0032, -0.0020,  ..., -0.0159, -0.0100,  0.0164],
        [ 0.0220,  0.0448, -0.0090,  ..., -0.0052,  0.0052,  0.0192],
        [-0.0036, -0.0065, -0.0103,  ...,  0.0121,  0.0033,  0.0004]],
       device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0234, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 6.7830e-07,  1.4842e-06, -5.8400e-07,  ..., -1.4485e-06,
         4.0086e-08,  4.4625e-07], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(1536, 1024);tensor([[ 0.0368, -0.0034,  0.0169,  ..., -0.0293,  0.0095,  0.0154],
        [ 0.0033, -0.0395,  0.0297,  ...,  0.0072, -0.0089, -0.0277],
        [ 0.0165,  0.0211,  0.0132,  ..., -0.0238, -0.0016, -0.0071],
        ...,
        [-0.0208, -0.0228,  0.0100,  ...,  0.0110,  0.0144,  0.0091],
        [-0.0108, -0.0103, -0.0343,  ..., -0.0004,  0.0058,  0.0555],
        [ 0.0159,  0.0070,  0.0223,  ...,  0.0013,  0.0062,  0.0155]],
       device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(1536,);tensor([ 1.8666e-08,  3.2612e-08,  2.1791e-08,  ...,  9.7802e-07,
         1.0023e-06, -6.6690e-07], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024, 512);tensor([[ 1.1383e-02, -3.0051e-04,  1.2387e-02,  ...,  6.3415e-03,
         -5.1346e-03,  1.5392e-03],
        [-2.7869e-03,  2.6327e-03, -8.9621e-04,  ...,  2.5972e-03,
         -4.0023e-03,  2.2401e-03],
        [ 3.6197e-03, -7.7085e-03,  1.2845e-03,  ...,  4.2974e-03,
         -6.9988e-04, -1.3403e-03],
        ...,
        [-7.9608e-04,  2.0395e-04,  8.1716e-03,  ..., -5.9111e-03,
         -1.6967e-03, -8.3273e-05],
        [-1.0365e-02, -2.8056e-03, -8.1268e-03,  ...,  1.0535e-02,
         -7.1177e-03,  3.0498e-03],
        [-1.5497e-03, -3.4543e-04,  3.1689e-04,  ...,  3.7428e-03,
         -9.7693e-04, -2.1982e-03]], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024,);tensor([ 7.3100e-06,  1.6073e-05, -9.4938e-06,  ...,  5.5442e-06,
         2.5801e-06, -5.2555e-06], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 2.9851e-07,  6.1986e-07, -1.7863e-07,  ...,  2.5573e-07,
         3.7771e-08, -2.3040e-07], device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(2048, 1024);tensor([[ 0.0141, -0.0016, -0.0063,  ...,  0.0004, -0.0038, -0.0266],
        [ 0.0395,  0.0014, -0.0095,  ...,  0.0079, -0.0010,  0.0141],
        [ 0.0031,  0.0414, -0.0173,  ..., -0.0262, -0.0133,  0.0051],
        ...,
        [-0.0016, -0.0545, -0.0093,  ..., -0.0382,  0.0169,  0.0075],
        [ 0.0181, -0.0005,  0.0167,  ..., -0.0310,  0.0280,  0.0041],
        [-0.0089, -0.0074,  0.0122,  ..., -0.0129,  0.0177,  0.0057]],
       device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(2048,);tensor([ 1.4301e-07,  1.2609e-07, -7.0138e-08,  ...,  1.0289e-07,
         4.1921e-07, -1.0404e-07], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024, 2048);tensor([[ 0.0006, -0.0028, -0.0078,  ...,  0.0024,  0.0016, -0.0033],
        [-0.0063,  0.0041, -0.0046,  ...,  0.0010,  0.0012, -0.0028],
        [ 0.0042, -0.0050,  0.0076,  ..., -0.0005,  0.0069,  0.0044],
        ...,
        [ 0.0015, -0.0077, -0.0037,  ...,  0.0020, -0.0005,  0.0073],
        [ 0.0055, -0.0005, -0.0016,  ...,  0.0012, -0.0035,  0.0049],
        [-0.0009,  0.0006,  0.0019,  ...,  0.0024,  0.0034, -0.0126]],
       device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([-7.1063e-07, -3.6332e-06, -3.5045e-06,  ..., -2.4863e-06,
         1.5626e-06,  1.3607e-06], device='cuda:0');
module.3.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0');
module.3.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-9.6971e-08, -2.5450e-07, -3.3628e-07,  ..., -2.1045e-07,
         1.2952e-07, -4.3115e-08], device='cuda:0');
module.3.attention.query_key_value;ColumnParallelLinear();(1536, 1024);tensor([[-0.0271,  0.0415, -0.0280,  ...,  0.0365, -0.0377,  0.0059],
        [-0.0162,  0.0092,  0.0242,  ...,  0.0007,  0.0062, -0.0025],
        [-0.0031,  0.0048, -0.0148,  ..., -0.0176, -0.0223,  0.0160],
        ...,
        [-0.0024,  0.0020, -0.0038,  ..., -0.0186,  0.0164,  0.0250],
        [-0.0389,  0.0139,  0.0167,  ...,  0.0040, -0.0111, -0.0007],
        [-0.0308, -0.0167, -0.0222,  ..., -0.0259,  0.0028, -0.0073]],
       device='cuda:0');
module.3.attention.query_key_value;ColumnParallelLinear();(1536,);tensor([-1.6417e-09,  4.2289e-09, -5.9053e-09,  ..., -7.0937e-07,
        -1.2638e-07, -1.1438e-07], device='cuda:0');
module.3.attention.dense;RowParallelLinear();(1024, 512);tensor([[-0.0077, -0.0008, -0.0027,  ...,  0.0097,  0.0021, -0.0023],
        [ 0.0037, -0.0030, -0.0031,  ..., -0.0075, -0.0059,  0.0004],
        [-0.0064, -0.0063, -0.0027,  ...,  0.0004, -0.0002,  0.0014],
        ...,
        [ 0.0026, -0.0049, -0.0027,  ...,  0.0104, -0.0035, -0.0012],
        [-0.0027, -0.0023, -0.0045,  ...,  0.0001,  0.0050,  0.0069],
        [ 0.0005,  0.0046,  0.0025,  ..., -0.0046, -0.0020, -0.0035]],
       device='cuda:0');
module.3.attention.dense;RowParallelLinear();(1024,);tensor([ 1.0834e-07, -1.7387e-06, -9.0671e-07,  ..., -9.7687e-07,
         6.1998e-07,  1.6962e-06], device='cuda:0');
module.3.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.3.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 1.2613e-07, -7.0877e-08, -1.1596e-07,  ...,  9.6337e-08,
         2.0579e-07,  7.8381e-08], device='cuda:0');
module.3.mlp.dense_h_to_4h;ColumnParallelLinear();(2048, 1024);tensor([[-0.0004,  0.0283, -0.0072,  ...,  0.0094,  0.0089,  0.0055],
        [-0.0072, -0.0216,  0.0184,  ...,  0.0016, -0.0284, -0.0169],
        [-0.0178,  0.0124,  0.0129,  ...,  0.0449, -0.0069,  0.0188],
        ...,
        [ 0.0275,  0.0166,  0.0338,  ..., -0.0116,  0.0032, -0.0385],
        [-0.0060, -0.0115, -0.0042,  ..., -0.0190,  0.0043, -0.0459],
        [-0.0065,  0.0564, -0.0068,  ...,  0.0322,  0.0163, -0.0304]],
       device='cuda:0');
module.3.mlp.dense_h_to_4h;ColumnParallelLinear();(2048,);tensor([ 9.3574e-08, -2.7776e-08, -1.0566e-07,  ..., -2.2306e-07,
         1.3939e-07, -4.7758e-08], device='cuda:0');
module.3.mlp.dense_4h_to_h;RowParallelLinear();(1024, 2048);tensor([[ 9.4748e-03, -2.3008e-03, -6.0611e-03,  ...,  1.3488e-04,
          6.4641e-04,  7.8347e-03],
        [-6.3625e-03,  3.1207e-03, -3.3660e-03,  ...,  3.7107e-04,
         -5.9431e-03,  6.9819e-03],
        [-1.0899e-03,  3.7186e-03,  2.3071e-03,  ..., -2.1202e-03,
          9.7679e-03,  7.1793e-03],
        ...,
        [ 3.5914e-03,  4.4107e-03, -1.4815e-03,  ...,  9.6715e-05,
         -2.6071e-03,  5.2684e-03],
        [ 3.1356e-03, -6.9640e-03,  5.0578e-03,  ..., -6.2468e-03,
         -1.0878e-03,  6.3508e-04],
        [ 4.1908e-03,  3.1347e-03,  4.4420e-03,  ..., -8.3490e-03,
          1.3657e-03,  2.1911e-03]], device='cuda:0');
module.3.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([-8.6423e-07, -1.2843e-06, -1.7803e-07,  ..., -1.7379e-06,
        -9.3824e-07,  9.6870e-07], device='cuda:0');
