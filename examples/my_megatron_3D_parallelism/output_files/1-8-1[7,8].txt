name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(50304, 1024);tensor([[ 0.0123, -0.0157,  0.0075,  ...,  0.0047,  0.0079,  0.0032],
        [ 0.0083, -0.0455, -0.0179,  ...,  0.0145,  0.0180,  0.0066],
        [-0.0314,  0.0031, -0.0170,  ...,  0.0018, -0.0125,  0.0014],
        ...,
        [-0.0402, -0.0089, -0.0064,  ...,  0.0357,  0.0119,  0.0071],
        [ 0.0005,  0.0058,  0.0004,  ..., -0.0208, -0.0137,  0.0048],
        [ 0.0082,  0.0133,  0.0015,  ..., -0.0041,  0.0219,  0.0099]],
       device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.9.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0');
module.9.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-1.6530e-07, -2.4271e-08,  1.2539e-07,  ..., -5.8253e-08,
         3.2645e-08,  1.9090e-08], device='cuda:0');
module.9.attention.query_key_value;ColumnParallelLinear();(3072, 1024);tensor([[ 1.2347e-02, -1.5729e-02,  7.4835e-03,  ...,  4.6925e-03,
          7.9154e-03,  3.1760e-03],
        [ 8.3441e-03, -4.5514e-02, -1.7944e-02,  ...,  1.4501e-02,
          1.8025e-02,  6.5999e-03],
        [-3.1352e-02,  3.1236e-03, -1.6962e-02,  ...,  1.7610e-03,
         -1.2459e-02,  1.4116e-03],
        ...,
        [ 2.5730e-02,  1.3889e-02,  1.7865e-02,  ...,  1.0416e-02,
          7.2072e-03,  3.0545e-02],
        [-5.6099e-05, -4.6093e-02,  3.9477e-03,  ..., -4.3987e-02,
         -1.1979e-02,  4.3476e-02],
        [ 7.5089e-03, -4.4560e-03, -7.4019e-03,  ...,  2.8740e-03,
         -2.9961e-02,  1.9343e-02]], device='cuda:0');
module.9.attention.query_key_value;ColumnParallelLinear();(3072,);tensor([-1.3783e-09,  9.9850e-10,  3.1405e-10,  ..., -1.4264e-07,
         2.8330e-08,  1.0884e-07], device='cuda:0');
module.9.attention.dense;RowParallelLinear();(1024, 1024);tensor([[-0.0065, -0.0006, -0.0010,  ..., -0.0118,  0.0097,  0.0082],
        [-0.0023, -0.0030, -0.0041,  ..., -0.0107,  0.0009, -0.0023],
        [ 0.0020,  0.0047,  0.0037,  ..., -0.0069,  0.0068,  0.0032],
        ...,
        [-0.0070,  0.0028, -0.0030,  ..., -0.0060,  0.0041,  0.0039],
        [ 0.0072,  0.0062,  0.0013,  ..., -0.0002,  0.0015,  0.0042],
        [ 0.0036, -0.0024, -0.0038,  ..., -0.0012, -0.0058,  0.0003]],
       device='cuda:0');
module.9.attention.dense;RowParallelLinear();(1024,);tensor([-8.7679e-07, -2.3271e-07,  4.9347e-07,  ..., -8.0054e-07,
        -1.0321e-06, -4.8641e-07], device='cuda:0');
module.9.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0');
module.9.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-4.2019e-08,  6.8015e-08,  1.0723e-08,  ...,  2.1837e-07,
        -6.3487e-09, -7.4744e-08], device='cuda:0');
module.9.mlp.dense_h_to_4h;ColumnParallelLinear();(4096, 1024);tensor([[-0.0311, -0.0136, -0.0353,  ..., -0.0150, -0.0159, -0.0196],
        [-0.0072,  0.0096,  0.0285,  ..., -0.0272, -0.0566, -0.0044],
        [ 0.0178, -0.0177, -0.0002,  ..., -0.0140,  0.0125,  0.0091],
        ...,
        [ 0.0243,  0.0137, -0.0625,  ..., -0.0002, -0.0093, -0.0483],
        [ 0.0079, -0.0023, -0.0024,  ...,  0.0140,  0.0033,  0.0029],
        [ 0.0225, -0.0064, -0.0205,  ..., -0.0123, -0.0197, -0.0165]],
       device='cuda:0');
module.9.mlp.dense_h_to_4h;ColumnParallelLinear();(4096,);tensor([ 3.5400e-08,  2.1378e-08, -1.8273e-08,  ..., -2.6068e-08,
        -3.3189e-08,  4.8337e-09], device='cuda:0');
module.9.mlp.dense_4h_to_h;RowParallelLinear();(1024, 4096);tensor([[-0.0032,  0.0089, -0.0029,  ..., -0.0052, -0.0013,  0.0003],
        [ 0.0006, -0.0048, -0.0116,  ...,  0.0079,  0.0021, -0.0055],
        [ 0.0067,  0.0021,  0.0007,  ...,  0.0041, -0.0010, -0.0063],
        ...,
        [ 0.0070,  0.0081,  0.0038,  ..., -0.0045, -0.0010, -0.0045],
        [ 0.0105,  0.0037, -0.0004,  ..., -0.0048, -0.0010, -0.0019],
        [-0.0019,  0.0010,  0.0088,  ..., -0.0078, -0.0034, -0.0028]],
       device='cuda:0');
module.9.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([-7.8842e-07, -4.0748e-07,  4.8649e-07,  ..., -1.3678e-06,
        -1.0192e-06, -3.0920e-07], device='cuda:0');
module.11;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.11;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-5.2416e-07, -2.4216e-07, -1.3442e-07,  ..., -6.4650e-07,
        -3.9571e-07, -3.0289e-07], device='cuda:0');
