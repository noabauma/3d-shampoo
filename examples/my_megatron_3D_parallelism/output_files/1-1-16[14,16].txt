name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(3200, 1024);tensor([[-0.0195,  0.0195,  0.0115,  ...,  0.0093,  0.0044, -0.0061],
        [-0.0141, -0.0095, -0.0059,  ...,  0.0013, -0.0029,  0.0031],
        [-0.0145,  0.0456, -0.0209,  ..., -0.0159, -0.0095, -0.0420],
        ...,
        [ 0.0199,  0.0045, -0.0077,  ..., -0.0043,  0.0025,  0.0115],
        [ 0.0002,  0.0237, -0.0048,  ...,  0.0143,  0.0048,  0.0180],
        [-0.0177,  0.0384,  0.0069,  ..., -0.0114,  0.0096, -0.0036]],
       device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-6.8370e-06, -6.2967e-07, -2.2953e-06,  ...,  4.7200e-06,
        -2.2815e-06, -2.7902e-06], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192, 1024);tensor([[-0.0322,  0.0002, -0.0292,  ..., -0.0131, -0.0056,  0.0110],
        [ 0.0184, -0.0104, -0.0438,  ..., -0.0047,  0.0235, -0.0126],
        [ 0.0216,  0.0116, -0.0019,  ..., -0.0310,  0.0047,  0.0636],
        ...,
        [-0.0393,  0.0151,  0.0037,  ...,  0.0135, -0.0255, -0.0023],
        [-0.0122,  0.0137,  0.0041,  ...,  0.0281, -0.0295, -0.0298],
        [-0.0187, -0.0186,  0.0100,  ...,  0.0061, -0.0214,  0.0114]],
       device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192,);tensor([ 1.2940e-08,  1.3985e-07, -7.1538e-08,  2.4937e-09, -1.3714e-07,
        -3.9752e-08,  8.9263e-08, -3.3287e-08,  6.3372e-08,  6.8996e-09,
        -1.0614e-07,  1.2337e-08, -7.9206e-08,  3.2810e-07,  3.5644e-08,
         3.9201e-08, -3.0156e-08,  1.2286e-08,  2.7107e-08, -9.1639e-08,
        -7.6683e-08, -2.7071e-08, -1.1151e-07, -8.3396e-08,  5.1543e-08,
        -5.1829e-10,  1.0191e-07,  8.0063e-08,  8.5581e-08,  7.2231e-08,
         1.3487e-07, -2.1740e-08, -6.9931e-08, -1.4097e-07, -1.0005e-07,
        -5.8493e-08, -3.0307e-09,  4.4829e-08,  5.5835e-08,  7.5459e-08,
         7.1343e-08, -9.9598e-08,  1.2007e-08, -7.5863e-09, -5.1850e-08,
        -9.6538e-08, -9.0546e-09, -1.6450e-07, -3.2010e-08,  1.0848e-07,
         1.5742e-07,  4.2148e-09, -1.3908e-07,  4.5281e-08, -5.0801e-09,
        -6.4873e-08,  1.4936e-09, -5.5658e-09,  3.1477e-08,  1.9378e-08,
         1.4939e-08,  2.4437e-08, -9.4747e-09, -5.6444e-08,  6.2723e-16,
        -3.3120e-16, -1.9790e-15,  3.4085e-15, -1.8225e-16,  1.4780e-15,
         3.9275e-16, -4.8412e-15,  6.4730e-15, -1.8452e-15,  2.6163e-15,
        -3.2481e-16,  1.0541e-15, -2.3264e-15, -3.4282e-15,  2.9229e-15,
         3.9435e-16, -7.4021e-16, -1.4338e-15, -1.8260e-15,  2.2998e-15,
        -4.4754e-15, -4.4343e-15,  1.0378e-15,  4.4623e-15,  1.5337e-15,
         2.8564e-16, -7.5007e-16, -8.4420e-15, -1.8229e-15,  4.7711e-15,
         1.9546e-15, -8.4119e-16,  3.0125e-15,  1.2169e-15,  3.1090e-15,
         4.8171e-15, -2.9510e-15, -4.2164e-15,  3.9808e-16,  2.3749e-15,
         2.1140e-15, -2.0464e-15, -4.6408e-15,  5.0517e-15,  8.8622e-16,
         1.3129e-15, -7.0877e-16,  4.2246e-15, -1.9214e-15,  2.0266e-15,
         1.6568e-15,  1.2212e-15, -7.1516e-16,  3.5675e-15,  1.0099e-15,
         6.0218e-16, -1.2403e-15, -3.3564e-15, -6.1359e-15,  1.8785e-15,
        -2.7394e-15,  6.0743e-15, -4.4428e-15,  4.0928e-06,  1.0801e-05,
         6.6358e-06, -4.3535e-06,  6.2515e-06, -3.5180e-06,  1.6627e-06,
        -5.4411e-06, -2.0444e-06,  6.0722e-06, -5.5119e-08, -3.8080e-06,
        -1.4084e-06, -1.2655e-06,  2.1220e-07, -1.7543e-06, -8.6690e-06,
         4.1463e-06,  5.8835e-06,  2.6383e-06,  3.1508e-06,  5.1151e-06,
         9.5409e-07,  2.6295e-06, -2.8398e-06,  3.5015e-06, -2.9262e-06,
         5.5777e-06, -4.9900e-06,  5.0961e-07, -1.6038e-06,  1.6075e-07,
        -4.4893e-06, -2.7710e-06, -5.5035e-09,  5.9644e-06, -1.6893e-06,
         5.6704e-06, -3.1948e-06,  9.8568e-06, -5.7969e-06,  1.6340e-06,
        -2.2908e-06,  7.3082e-06,  6.3881e-06, -4.3182e-06, -4.0918e-07,
         2.4655e-07,  8.2712e-06,  3.6293e-06, -3.7435e-06, -9.8723e-07,
        -1.4915e-06,  9.6963e-06,  3.2077e-06, -1.9045e-06, -4.0264e-06,
        -6.1526e-06,  8.0749e-06, -2.5681e-07, -1.5966e-06, -6.3788e-06,
        -3.3955e-06,  1.4544e-06], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024, 64);tensor([[-0.0246,  0.0002,  0.0082,  ...,  0.0077, -0.0122,  0.0111],
        [-0.0332, -0.0025,  0.0119,  ..., -0.0404, -0.0005, -0.0096],
        [-0.0043,  0.0137, -0.0109,  ..., -0.0175,  0.0106,  0.0024],
        ...,
        [ 0.0069, -0.0110, -0.0090,  ...,  0.0041,  0.0019,  0.0083],
        [-0.0044,  0.0003, -0.0030,  ...,  0.0003,  0.0007, -0.0123],
        [ 0.0010, -0.0051,  0.0254,  ..., -0.0027, -0.0079, -0.0040]],
       device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024,);tensor([-2.8643e-05,  1.4121e-05,  2.6624e-05,  ..., -1.0501e-05,
        -7.4630e-06,  7.3358e-06], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-1.0457e-06,  5.2020e-07,  9.7062e-07,  ..., -2.7887e-07,
        -2.7312e-07,  2.6215e-07], device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256, 1024);tensor([[ 0.0215,  0.0251, -0.0009,  ...,  0.0028, -0.0071,  0.0193],
        [-0.0235, -0.0023, -0.0162,  ..., -0.0105,  0.0193,  0.0110],
        [-0.0183,  0.0018, -0.0231,  ..., -0.0121, -0.0104, -0.0070],
        ...,
        [ 0.0260,  0.0094, -0.0014,  ..., -0.0066, -0.0243, -0.0111],
        [-0.0162, -0.0070,  0.0399,  ..., -0.0087,  0.0045, -0.0152],
        [-0.0278, -0.0179,  0.0028,  ...,  0.0140, -0.0051, -0.0067]],
       device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256,);tensor([-5.0529e-07, -3.8494e-07, -2.7455e-07,  2.6864e-08,  1.6553e-07,
         2.3347e-07, -2.4615e-07, -2.5901e-07, -4.4178e-08, -2.1662e-07,
        -3.6101e-07,  2.5830e-07,  4.8132e-07,  6.7983e-08,  6.5955e-07,
        -2.3547e-07, -3.5331e-07, -2.4555e-07,  3.2671e-07, -1.2570e-07,
         5.0565e-07,  1.1499e-08,  1.8424e-07, -9.8737e-08, -1.0254e-07,
        -1.1913e-07, -3.2552e-07, -5.9437e-07,  5.4056e-07,  4.0367e-08,
         1.4993e-08, -6.2008e-08, -1.8389e-07, -5.0901e-07, -3.6342e-07,
        -5.5684e-07, -3.6092e-08, -4.1001e-07,  7.4473e-08, -1.3058e-07,
         2.4571e-07,  1.4905e-07, -2.2321e-07,  4.5866e-07,  1.8442e-07,
        -3.5558e-07,  3.9131e-07, -2.3265e-07, -7.0611e-11, -2.4783e-07,
        -3.9966e-07,  1.4593e-07,  2.1945e-07,  5.3314e-07,  3.2383e-07,
        -5.2438e-07,  6.6524e-07, -1.8710e-07,  3.7530e-07,  5.7414e-07,
        -1.5650e-08,  4.2460e-07, -3.3478e-07,  3.5296e-07,  9.2199e-08,
        -6.3335e-08,  5.4713e-08, -3.6384e-07,  1.0703e-07, -8.7926e-08,
        -4.5830e-08, -2.1104e-07, -2.5407e-07, -3.6652e-07, -1.8403e-07,
         3.4215e-07,  3.3858e-07, -1.3579e-07, -9.2960e-08,  1.1584e-07,
        -9.6291e-07, -3.6825e-07,  2.9641e-07,  1.5954e-07,  7.5098e-08,
        -4.3299e-07,  4.4670e-07,  1.5226e-07, -2.7315e-07, -2.8555e-07,
         4.2679e-07,  2.9942e-07,  8.4922e-07,  7.2545e-08,  2.4495e-07,
         5.4225e-07,  2.7594e-07, -1.3076e-07, -8.3214e-07,  1.6924e-07,
        -3.3374e-07, -1.9818e-07,  1.3841e-07, -5.9162e-08,  1.1637e-06,
         7.3974e-08,  1.5041e-07,  4.2963e-07, -5.7745e-08,  2.4411e-07,
        -3.4143e-07, -4.5693e-07, -1.4894e-07, -3.2321e-07,  7.7629e-07,
         2.1511e-07,  4.1060e-07,  2.0261e-07, -1.9310e-07,  5.0725e-07,
        -2.2396e-07,  1.3799e-06,  7.2752e-08,  3.5804e-07, -3.0997e-07,
        -6.7633e-07, -8.3625e-07,  7.3108e-08,  3.0089e-07,  4.3401e-07,
         6.3678e-07,  1.2044e-07, -5.7706e-08,  4.7900e-07,  6.0704e-07,
         7.7481e-07, -1.3900e-07, -5.1729e-07, -1.9479e-07, -3.4037e-07,
         9.6602e-07,  2.2209e-07, -1.0334e-07,  1.3784e-07,  5.3058e-08,
         1.7637e-07, -2.5732e-07, -1.0313e-06, -3.4985e-07,  5.9601e-08,
        -1.8959e-07,  1.8502e-07, -1.2366e-06, -3.9459e-08,  7.8740e-07,
        -2.7574e-07, -2.9887e-07, -5.6533e-08, -4.6249e-08,  3.2311e-07,
        -3.7962e-08, -5.0991e-07,  2.3552e-07, -4.8179e-08,  2.8964e-07,
         3.6364e-07,  3.0973e-07, -7.7684e-07,  5.6883e-08, -1.2803e-07,
         2.3525e-07,  3.1695e-07, -4.8581e-07, -6.3787e-08, -9.4275e-08,
         2.6514e-07, -1.3486e-07, -6.8858e-08, -6.1225e-07, -5.3050e-07,
         2.2273e-07, -3.9152e-09,  2.9108e-07, -1.1640e-07, -7.1352e-07,
        -3.0427e-07,  8.0490e-07, -8.8785e-08, -6.3215e-08, -5.0968e-07,
        -1.6391e-07, -1.4032e-07,  2.3631e-07, -3.9192e-07,  1.5307e-07,
         2.1673e-07, -1.6757e-07,  1.8226e-07,  1.8207e-09,  2.6278e-07,
        -1.8957e-07,  3.6773e-07, -4.6019e-07, -4.4778e-08, -9.9439e-08,
         4.5206e-07,  4.6495e-07,  9.0706e-09, -8.5728e-07, -2.3101e-07,
         2.1796e-07,  6.4333e-07, -3.1039e-07, -2.3446e-09, -5.4104e-08,
        -9.6486e-07,  4.7552e-08,  8.5762e-08, -2.6006e-07,  7.2839e-07,
        -9.7152e-08, -6.2106e-07,  1.5255e-07, -7.3104e-07,  5.8093e-07,
         4.4343e-07, -9.7500e-08, -4.6522e-07,  1.4540e-07, -8.0401e-08,
         2.1705e-07, -4.4680e-08,  4.4955e-08, -3.3848e-07, -9.7141e-08,
         8.4610e-08,  1.4759e-07, -1.5021e-07,  9.3744e-07,  4.0575e-07,
        -2.6561e-07, -1.8830e-07,  1.5344e-07,  3.7130e-07,  1.4678e-10,
        -2.6109e-07,  5.9599e-07, -7.6225e-07,  2.9022e-07, -2.6973e-08,
        -2.8563e-07, -1.4380e-07, -1.7334e-07, -9.1096e-08, -6.4054e-08,
        -1.6366e-07], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024, 256);tensor([[ 0.0062, -0.0035,  0.0096,  ..., -0.0038,  0.0129,  0.0051],
        [ 0.0075, -0.0326,  0.0225,  ...,  0.0052, -0.0069, -0.0119],
        [-0.0191, -0.0258, -0.0027,  ..., -0.0044, -0.0037, -0.0167],
        ...,
        [-0.0022, -0.0043,  0.0116,  ...,  0.0188, -0.0177,  0.0184],
        [ 0.0139,  0.0093,  0.0280,  ..., -0.0018, -0.0216,  0.0097],
        [-0.0046,  0.0349,  0.0157,  ...,  0.0130,  0.0127, -0.0003]],
       device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([ 3.5072e-07, -6.1701e-07, -5.7381e-07,  ..., -3.1622e-06,
        -7.0885e-09,  3.4073e-07], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 2.9947e-07, -1.6608e-07, -6.6290e-07,  ..., -8.2493e-07,
        -1.9948e-07, -2.9883e-07], device='cuda:0');
