name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(3200, 1024);tensor([[ 0.0412,  0.0427, -0.0354,  ..., -0.0163, -0.0172,  0.0033],
        [-0.0326, -0.0490, -0.0092,  ..., -0.0349, -0.0063,  0.0059],
        [ 0.0137, -0.0063,  0.0245,  ..., -0.0145,  0.0094,  0.0015],
        ...,
        [-0.0114,  0.0098,  0.0380,  ...,  0.0270,  0.0564, -0.0195],
        [-0.0366,  0.0039, -0.0187,  ...,  0.0056,  0.0170,  0.0072],
        [ 0.0231, -0.0376, -0.0060,  ..., -0.0110,  0.0012, -0.0066]],
       device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-6.8370e-06, -6.2967e-07, -2.2953e-06,  ...,  4.7200e-06,
        -2.2815e-06, -2.7902e-06], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192, 1024);tensor([[-0.0165,  0.0479,  0.0263,  ..., -0.0077, -0.0248,  0.0129],
        [ 0.0020,  0.0150,  0.0156,  ...,  0.0250,  0.0294,  0.0075],
        [-0.0280, -0.0125,  0.0426,  ...,  0.0060, -0.0346,  0.0207],
        ...,
        [ 0.0198, -0.0358,  0.0265,  ...,  0.0042,  0.0016,  0.0164],
        [-0.0125,  0.0037,  0.0115,  ...,  0.0299,  0.0132,  0.0033],
        [ 0.0348, -0.0077, -0.0071,  ...,  0.0085, -0.0073, -0.0027]],
       device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192,);tensor([ 1.3899e-07, -7.8688e-08, -2.1399e-07, -2.9281e-08, -2.9643e-10,
        -1.2948e-07, -5.0497e-08, -1.1147e-07, -1.3994e-07,  9.7289e-08,
        -6.3025e-09,  3.1267e-08,  9.6505e-08,  2.1319e-07,  1.1775e-07,
         1.1706e-07,  7.3110e-08, -9.9147e-08, -9.2272e-08,  1.5063e-08,
        -1.1080e-08,  1.9357e-08,  1.6088e-07,  3.5864e-08,  1.2351e-08,
        -5.5093e-08,  1.6737e-07, -6.0732e-08,  1.0492e-07,  2.0651e-08,
        -2.2569e-07,  9.8451e-09,  3.0588e-08, -8.2512e-08,  2.2919e-08,
        -9.4986e-08,  8.2714e-08,  1.8502e-07, -2.9066e-08,  9.8160e-08,
         2.2044e-08, -6.7705e-08,  7.8251e-08,  6.5681e-08,  7.2822e-09,
         2.9446e-08, -6.0784e-08, -1.6011e-07,  1.9233e-07, -4.1691e-08,
        -6.6420e-08,  1.4162e-07,  4.6071e-08, -8.5633e-08,  9.9970e-08,
         2.5651e-09,  1.6012e-07,  2.3842e-07, -9.8899e-08,  9.5387e-08,
        -2.4599e-08,  2.2896e-07,  9.0370e-08, -5.1093e-08, -2.7842e-15,
        -4.1018e-15,  4.0753e-15, -1.1767e-15,  6.3549e-15, -1.8385e-15,
        -4.4045e-16, -1.9718e-17, -1.2657e-16, -1.6495e-15,  4.1861e-15,
        -3.2297e-15,  8.2787e-16,  2.8164e-16,  3.4375e-15, -1.3786e-15,
         2.9776e-15, -3.2665e-15,  4.1982e-15,  1.7956e-15,  2.8185e-15,
         1.9542e-15,  1.8918e-15, -7.4420e-16,  1.6930e-15, -3.7277e-16,
        -5.8034e-15,  3.9334e-15, -6.0618e-16,  1.7373e-15,  8.0216e-15,
        -1.8489e-15, -5.6142e-16, -1.8654e-15,  5.1980e-15,  1.2606e-15,
         3.4189e-15,  4.3216e-15,  6.3070e-15, -6.2190e-16,  2.0621e-15,
        -4.7506e-15,  3.0629e-15,  5.3131e-16,  3.6320e-15, -3.9475e-15,
        -4.6408e-15, -2.5857e-15, -5.4063e-16, -1.2752e-15, -2.3821e-16,
        -2.6243e-15, -5.5702e-15, -1.8495e-15, -3.4841e-15,  3.0485e-15,
        -7.7237e-15,  4.4380e-15, -4.5270e-16, -1.5055e-16, -1.0954e-15,
        -1.3208e-15, -9.8417e-15, -4.0173e-15, -1.6188e-07, -2.7164e-06,
        -4.9846e-06, -2.4823e-06,  6.4270e-06,  2.9365e-06, -3.8083e-06,
         3.7946e-07,  1.3866e-05, -8.1186e-06,  5.7455e-06,  3.5542e-06,
        -2.5115e-06, -7.3084e-06,  1.0039e-05, -2.6973e-06, -5.1326e-06,
         1.8535e-06,  4.7768e-07,  2.3221e-06, -1.1770e-05,  6.9269e-06,
         1.0193e-05,  1.0631e-05,  9.7143e-06,  5.0740e-07,  4.4819e-07,
         2.2662e-06, -7.2771e-06, -4.6166e-06, -8.0216e-06, -5.0317e-06,
        -4.7619e-07, -8.2991e-06,  2.4376e-06, -5.1401e-06, -9.1216e-06,
        -6.9109e-06,  9.5745e-06, -5.4662e-06, -4.0028e-06,  2.6990e-06,
         1.2227e-05,  5.5124e-07, -3.3616e-06, -5.6069e-06,  4.6192e-06,
        -4.5334e-06,  5.8679e-06, -8.2078e-06,  8.5911e-07, -4.0462e-06,
        -5.1152e-06,  2.8061e-06,  3.2948e-06, -6.7954e-06,  1.1987e-05,
        -3.5431e-06, -9.3419e-06,  5.2466e-06,  3.8014e-06,  2.9011e-06,
         1.7553e-06, -2.6684e-06], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024, 64);tensor([[-0.0166,  0.0239, -0.0052,  ...,  0.0089,  0.0154,  0.0002],
        [-0.0173,  0.0176,  0.0099,  ...,  0.0113,  0.0023,  0.0076],
        [-0.0006, -0.0022, -0.0318,  ..., -0.0152, -0.0062, -0.0015],
        ...,
        [-0.0005, -0.0055, -0.0108,  ...,  0.0206, -0.0271,  0.0124],
        [ 0.0043, -0.0083, -0.0121,  ...,  0.0159, -0.0045,  0.0156],
        [ 0.0053,  0.0082,  0.0144,  ..., -0.0077,  0.0179,  0.0250]],
       device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024,);tensor([-2.8643e-05,  1.4121e-05,  2.6624e-05,  ..., -1.0501e-05,
        -7.4630e-06,  7.3358e-06], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-1.0457e-06,  5.2020e-07,  9.7062e-07,  ..., -2.7887e-07,
        -2.7312e-07,  2.6215e-07], device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256, 1024);tensor([[-0.0103, -0.0144,  0.0346,  ...,  0.0125, -0.0261, -0.0258],
        [-0.0049,  0.0107,  0.0450,  ...,  0.0061,  0.0025, -0.0020],
        [-0.0092,  0.0227, -0.0080,  ..., -0.0153, -0.0285,  0.0325],
        ...,
        [-0.0157, -0.0085,  0.0042,  ..., -0.0018, -0.0205, -0.0134],
        [-0.0201,  0.0214,  0.0340,  ..., -0.0054,  0.0184,  0.0023],
        [-0.0073, -0.0128,  0.0050,  ..., -0.0056,  0.0106, -0.0188]],
       device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256,);tensor([ 2.7322e-07,  5.5818e-08, -4.0812e-07, -7.1363e-08, -2.0279e-07,
        -1.8107e-07, -3.0252e-07,  1.0949e-06, -1.6311e-07,  5.3712e-07,
         3.1237e-07, -7.3812e-07, -2.6513e-07, -2.7037e-07, -3.0684e-07,
         3.4065e-07,  6.6954e-07, -1.3550e-07, -4.9073e-07, -2.3628e-07,
         7.7503e-07, -7.7658e-07,  4.0766e-09, -2.4843e-07, -1.1606e-07,
         1.0964e-08,  4.1814e-07,  2.5981e-07,  2.5435e-07, -1.2482e-07,
        -1.4833e-07, -1.8405e-07,  1.5044e-07,  2.8549e-08, -4.3762e-07,
        -5.1679e-09,  1.2759e-07,  1.2851e-07, -5.8741e-07, -5.6489e-07,
         3.5904e-07, -1.2315e-07, -5.4700e-08,  2.2080e-07,  3.1930e-08,
         3.9713e-08,  2.2861e-07, -2.6354e-07, -4.2579e-07, -6.2097e-07,
         3.4418e-07,  4.3113e-07,  2.0435e-07, -2.1262e-07,  5.3856e-07,
        -8.9620e-07, -5.9750e-07, -5.9424e-07, -1.4019e-07,  1.4596e-08,
         6.7469e-07, -3.6638e-08, -2.6113e-07,  4.5424e-07,  7.7449e-09,
        -3.6803e-07, -2.2827e-07,  1.4230e-07, -2.8258e-08, -1.1280e-07,
         7.4665e-07, -1.6237e-07, -6.8341e-08,  1.0083e-07, -1.5001e-07,
         5.9265e-07, -6.7497e-07,  6.7406e-08,  4.1391e-07, -5.7319e-07,
         1.2776e-07,  3.8033e-07, -5.3790e-07, -2.9284e-08,  6.6465e-07,
         2.8996e-07,  4.7449e-08,  3.3232e-07, -2.3427e-08,  7.0549e-07,
        -1.2363e-07,  4.7382e-07, -7.1512e-08, -6.0698e-07,  9.2475e-07,
         1.6935e-07, -1.7493e-07,  1.1169e-07,  4.0774e-07, -2.5172e-07,
        -3.0376e-07, -2.1363e-07,  1.0061e-07, -1.3508e-07,  4.2539e-07,
         3.1492e-07, -7.8284e-08, -8.9916e-08, -2.2209e-07, -5.3697e-07,
         3.2487e-07,  7.4617e-08, -7.2301e-08,  5.0554e-07,  1.6348e-07,
        -2.0764e-07, -4.2314e-07, -2.2898e-07, -6.2585e-07,  2.9616e-07,
        -3.7009e-07,  2.2023e-08, -2.1247e-07, -1.3979e-07, -7.9397e-08,
        -1.8769e-07, -1.9920e-07, -5.1921e-08, -9.5324e-07,  5.7851e-07,
         1.9444e-07, -5.6729e-07,  4.0814e-07, -3.9046e-07, -1.5934e-07,
         4.0127e-07,  2.8575e-07,  5.9868e-08, -4.7467e-07, -1.7499e-07,
        -3.6252e-07,  8.6337e-07, -3.7169e-07,  8.6852e-07, -3.0815e-08,
        -4.5819e-09, -6.0897e-07,  2.6417e-07,  1.8759e-07, -5.2070e-08,
         1.6408e-07, -5.0901e-07,  9.0994e-07,  3.4193e-07,  2.0123e-07,
         5.8888e-07,  3.7052e-07,  6.2330e-08, -1.5476e-07, -5.2168e-07,
         4.0988e-08,  3.0332e-07,  1.5509e-07, -6.8701e-07, -7.9216e-07,
         2.0872e-08,  4.5937e-07,  3.7113e-07, -5.6505e-07, -1.7052e-07,
         1.7894e-07,  2.2182e-07, -1.2696e-06, -3.0959e-07, -1.1824e-07,
        -1.4471e-07, -7.6363e-08,  4.5802e-07, -4.0933e-07, -5.1591e-07,
        -4.9949e-08,  1.1875e-07, -1.2878e-07, -1.2463e-07, -3.8263e-07,
         1.1888e-07, -7.8795e-08, -1.1205e-06, -5.4752e-07,  1.2188e-07,
         4.8724e-07,  3.1206e-07, -1.1621e-07,  2.9423e-07, -1.3576e-07,
        -2.6440e-07, -3.9178e-07, -3.2966e-07,  5.2576e-08, -3.6654e-07,
         5.8753e-07, -2.5378e-07,  9.9573e-08,  1.6618e-07, -8.3582e-09,
         5.0826e-09, -4.3980e-07, -3.6133e-07,  2.1700e-07,  7.4739e-08,
         3.0305e-07,  2.0605e-07,  2.4019e-07, -1.3169e-07, -1.4476e-07,
         8.7812e-08, -6.4777e-07,  6.7083e-09, -1.5418e-07, -2.2450e-08,
         3.4897e-07,  3.3773e-07, -3.4215e-07, -1.4609e-07,  2.0329e-08,
        -3.0540e-08,  5.0298e-07,  3.5335e-07, -8.7541e-07, -1.7009e-07,
        -1.8783e-07,  3.3040e-07, -1.8716e-07, -2.9142e-08,  4.0424e-07,
         3.0285e-07, -3.9349e-07,  1.1113e-07, -8.5655e-07, -3.6938e-07,
         9.9330e-07,  7.6904e-07, -3.6899e-07, -2.3651e-07,  4.9924e-07,
        -8.8631e-07,  7.1664e-07, -4.7696e-07,  2.5002e-07,  5.1097e-07,
         1.1887e-07, -1.0263e-07,  5.1777e-07,  1.1813e-07, -6.5623e-07,
         2.3335e-08], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024, 256);tensor([[ 0.0115,  0.0081, -0.0260,  ...,  0.0086, -0.0051,  0.0014],
        [ 0.0119,  0.0009, -0.0220,  ...,  0.0047,  0.0069,  0.0067],
        [-0.0136, -0.0093,  0.0061,  ..., -0.0103,  0.0079,  0.0108],
        ...,
        [ 0.0095, -0.0020, -0.0146,  ..., -0.0003,  0.0228,  0.0133],
        [-0.0119,  0.0236,  0.0088,  ...,  0.0113, -0.0060, -0.0223],
        [ 0.0160,  0.0245, -0.0208,  ...,  0.0047, -0.0021,  0.0076]],
       device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([ 3.5072e-07, -6.1701e-07, -5.7381e-07,  ..., -3.1622e-06,
        -7.0885e-09,  3.4073e-07], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 2.9947e-07, -1.6608e-07, -6.6290e-07,  ..., -8.2493e-07,
        -1.9948e-07, -2.9883e-07], device='cuda:0');
