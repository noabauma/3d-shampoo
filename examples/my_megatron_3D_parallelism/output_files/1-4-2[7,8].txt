name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(25216, 1024);tensor([[-0.0027,  0.0215, -0.0055,  ..., -0.0199,  0.0051,  0.0159],
        [-0.0050,  0.0148,  0.0032,  ..., -0.0099, -0.0060,  0.0020],
        [-0.0137, -0.0132, -0.0079,  ..., -0.0023,  0.0008, -0.0156],
        ...,
        [-0.0369,  0.0032, -0.0020,  ..., -0.0159, -0.0100,  0.0164],
        [ 0.0220,  0.0448, -0.0090,  ..., -0.0052,  0.0052,  0.0192],
        [-0.0036, -0.0065, -0.0103,  ...,  0.0121,  0.0033,  0.0004]],
       device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.8.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0');
module.8.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-1.1733e-07, -1.3916e-07, -1.0317e-08,  ...,  2.5503e-08,
         1.1532e-07,  4.7473e-08], device='cuda:0');
module.8.attention.query_key_value;ColumnParallelLinear();(1536, 1024);tensor([[-0.0027,  0.0215, -0.0055,  ..., -0.0199,  0.0051,  0.0159],
        [-0.0050,  0.0148,  0.0032,  ..., -0.0099, -0.0060,  0.0020],
        [-0.0137, -0.0132, -0.0079,  ..., -0.0023,  0.0008, -0.0156],
        ...,
        [-0.0056, -0.0182,  0.0173,  ..., -0.0263,  0.0072, -0.0307],
        [ 0.0313, -0.0318, -0.0024,  ...,  0.0005,  0.0211,  0.0283],
        [ 0.0084, -0.0125, -0.0066,  ...,  0.0259,  0.0097,  0.0162]],
       device='cuda:0');
module.8.attention.query_key_value;ColumnParallelLinear();(1536,);tensor([ 7.7729e-10, -8.9599e-10,  1.4966e-09,  ..., -2.3139e-07,
        -2.6326e-08, -1.5038e-07], device='cuda:0');
module.8.attention.dense;RowParallelLinear();(1024, 512);tensor([[ 2.4760e-03, -1.1060e-03,  1.7155e-03,  ...,  1.1108e-02,
         -3.6518e-03, -3.0789e-05],
        [ 2.2640e-03, -2.7761e-03, -3.5198e-03,  ...,  3.0609e-03,
          8.8685e-03,  6.7950e-03],
        [ 5.7520e-03, -3.7797e-03, -2.0710e-03,  ...,  7.1489e-03,
         -3.9356e-03,  3.4027e-03],
        ...,
        [ 1.1279e-02,  5.3119e-03, -2.0115e-03,  ..., -3.7999e-03,
          1.4339e-03, -2.2502e-03],
        [ 6.9404e-03,  3.3254e-03,  1.3493e-03,  ...,  8.4866e-04,
         -1.2493e-03, -6.4649e-04],
        [-2.1160e-03,  1.1553e-02, -3.6879e-03,  ..., -8.7700e-03,
         -6.9265e-03, -7.7408e-04]], device='cuda:0');
module.8.attention.dense;RowParallelLinear();(1024,);tensor([-8.9618e-07,  1.6644e-07,  8.2266e-07,  ..., -1.5356e-06,
        -5.4705e-07, -4.4259e-07], device='cuda:0');
module.8.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.8.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-5.3022e-08,  5.6865e-08, -2.0464e-08,  ...,  7.0032e-08,
         5.3475e-09, -3.9296e-08], device='cuda:0');
module.8.mlp.dense_h_to_4h;ColumnParallelLinear();(2048, 1024);tensor([[ 0.0182, -0.0046, -0.0258,  ..., -0.0172,  0.0295, -0.0240],
        [ 0.0068, -0.0022, -0.0066,  ...,  0.0160,  0.0019, -0.0069],
        [ 0.0026, -0.0015,  0.0358,  ...,  0.0144,  0.0049,  0.0006],
        ...,
        [-0.0035,  0.0216,  0.0158,  ...,  0.0144,  0.0015,  0.0063],
        [ 0.0072, -0.0063,  0.0150,  ..., -0.0106, -0.0197, -0.0118],
        [ 0.0173,  0.0141, -0.0040,  ...,  0.0094,  0.0142, -0.0172]],
       device='cuda:0');
module.8.mlp.dense_h_to_4h;ColumnParallelLinear();(2048,);tensor([ 2.9845e-08,  3.2678e-08, -7.2917e-08,  ..., -6.5037e-08,
        -1.1936e-08, -7.4539e-09], device='cuda:0');
module.8.mlp.dense_4h_to_h;RowParallelLinear();(1024, 2048);tensor([[ 1.9547e-03,  1.3024e-02,  1.8626e-03,  ...,  1.2704e-02,
          4.0400e-03,  1.3292e-03],
        [-9.8605e-03,  4.2534e-03, -1.9867e-03,  ...,  3.5858e-03,
          3.2747e-03,  4.6936e-03],
        [ 1.6608e-03,  1.1027e-03, -4.4291e-03,  ..., -1.4652e-03,
          1.4039e-03,  9.3344e-04],
        ...,
        [-1.3933e-03,  5.0853e-05, -3.2461e-03,  ...,  1.2637e-03,
         -5.5546e-03,  2.5020e-03],
        [-3.1641e-03, -1.2694e-03,  2.0577e-03,  ...,  5.1138e-03,
          5.4714e-03,  4.9855e-04],
        [ 1.4458e-03, -6.6771e-03,  4.9729e-03,  ..., -5.5994e-03,
         -8.5831e-03, -1.5525e-02]], device='cuda:0');
module.8.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([-7.1788e-07,  1.0341e-08,  8.8442e-07,  ..., -1.7145e-06,
        -5.2762e-07, -3.4051e-07], device='cuda:0');
module.9.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1., 1., 1.,  ..., 1., 1., 1.], device='cuda:0');
module.9.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 1.3148e-08, -3.3519e-08,  7.1042e-08,  ..., -1.3168e-07,
         5.1396e-08, -5.0990e-08], device='cuda:0');
module.9.attention.query_key_value;ColumnParallelLinear();(1536, 1024);tensor([[ 0.0450,  0.0130, -0.0223,  ..., -0.0173,  0.0020, -0.0021],
        [ 0.0175, -0.0053, -0.0037,  ...,  0.0062, -0.0356, -0.0053],
        [-0.0084, -0.0026, -0.0379,  ..., -0.0029, -0.0027,  0.0093],
        ...,
        [-0.0211, -0.0098,  0.0224,  ..., -0.0297, -0.0299,  0.0067],
        [-0.0212, -0.0101, -0.0392,  ..., -0.0218,  0.0194, -0.0305],
        [-0.0282, -0.0030,  0.0010,  ..., -0.0054,  0.0276, -0.0463]],
       device='cuda:0');
module.9.attention.query_key_value;ColumnParallelLinear();(1536,);tensor([ 2.3074e-09,  3.8935e-10,  1.0918e-09,  ...,  1.8441e-07,
         1.7616e-07, -5.6056e-08], device='cuda:0');
module.9.attention.dense;RowParallelLinear();(1024, 512);tensor([[-0.0063, -0.0010, -0.0075,  ...,  0.0037,  0.0018,  0.0044],
        [ 0.0084,  0.0025,  0.0084,  ...,  0.0060, -0.0031, -0.0112],
        [ 0.0056, -0.0093, -0.0030,  ..., -0.0013, -0.0010,  0.0105],
        ...,
        [-0.0029, -0.0060,  0.0031,  ..., -0.0061, -0.0079, -0.0016],
        [ 0.0109,  0.0008,  0.0021,  ..., -0.0076, -0.0060, -0.0005],
        [ 0.0070, -0.0043, -0.0038,  ...,  0.0118, -0.0031,  0.0046]],
       device='cuda:0');
module.9.attention.dense;RowParallelLinear();(1024,);tensor([-7.5655e-07,  1.0985e-07,  6.8114e-07,  ..., -1.3787e-06,
        -6.7689e-07, -2.1028e-07], device='cuda:0');
module.9.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.9.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 6.2323e-08,  1.3975e-07, -2.3029e-08,  ..., -3.4533e-08,
         4.4285e-08, -5.6605e-08], device='cuda:0');
module.9.mlp.dense_h_to_4h;ColumnParallelLinear();(2048, 1024);tensor([[ 0.0112, -0.0131, -0.0192,  ..., -0.0158,  0.0173,  0.0030],
        [ 0.0039,  0.0012,  0.0089,  ..., -0.0178,  0.0153, -0.0320],
        [-0.0051,  0.0148,  0.0400,  ..., -0.0195,  0.0061, -0.0175],
        ...,
        [-0.0077, -0.0058,  0.0035,  ...,  0.0119,  0.0184, -0.0264],
        [ 0.0079, -0.0009,  0.0079,  ...,  0.0126, -0.0060,  0.0133],
        [ 0.0080,  0.0018,  0.0030,  ..., -0.0269,  0.0121,  0.0057]],
       device='cuda:0');
module.9.mlp.dense_h_to_4h;ColumnParallelLinear();(2048,);tensor([-1.5646e-07,  2.4812e-08, -4.7348e-08,  ...,  7.1348e-08,
         7.3749e-09,  9.4061e-08], device='cuda:0');
module.9.mlp.dense_4h_to_h;RowParallelLinear();(1024, 2048);tensor([[ 7.3249e-03, -3.7125e-03, -6.4073e-03,  ...,  8.3190e-03,
          3.0582e-03,  4.7061e-03],
        [-5.8927e-03, -6.4250e-04, -2.3257e-03,  ...,  7.2940e-05,
          5.6789e-03,  8.5847e-04],
        [ 2.7800e-03,  5.3088e-03, -1.0489e-02,  ...,  1.8758e-03,
          1.5136e-03, -4.2663e-03],
        ...,
        [ 1.2933e-03, -4.6875e-03,  2.2064e-03,  ..., -1.0852e-03,
         -3.7917e-03,  6.2942e-03],
        [-5.8084e-03,  5.6624e-03,  7.3242e-04,  ...,  1.0614e-03,
         -3.9465e-03,  5.6320e-03],
        [-3.7105e-03, -6.8016e-03, -8.8845e-03,  ...,  6.2948e-03,
          1.3343e-03, -9.3964e-03]], device='cuda:0');
module.9.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([-9.0883e-07, -2.5869e-07,  7.6750e-07,  ..., -1.2919e-06,
        -7.8605e-07, -5.6832e-08], device='cuda:0');
module.11;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.11;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-7.3953e-07,  2.7583e-07,  3.3096e-07,  ..., -1.0228e-07,
        -3.4558e-07,  4.0642e-07], device='cuda:0');
