name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(3200, 1024);tensor([[-0.0045,  0.0040, -0.0198,  ..., -0.0098, -0.0076,  0.0054],
        [-0.0225, -0.0199,  0.0204,  ...,  0.0161, -0.0053, -0.0001],
        [ 0.0137,  0.0072,  0.0278,  ...,  0.0270, -0.0343, -0.0079],
        ...,
        [-0.0018, -0.0196,  0.0370,  ...,  0.0013, -0.0256,  0.0068],
        [ 0.0122,  0.0130, -0.0138,  ..., -0.0303,  0.0177,  0.0012],
        [-0.0118, -0.0067, -0.0098,  ..., -0.0264,  0.0148,  0.0002]],
       device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-6.8370e-06, -6.2967e-07, -2.2953e-06,  ...,  4.7200e-06,
        -2.2815e-06, -2.7902e-06], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192, 1024);tensor([[ 0.0231, -0.0163, -0.0186,  ..., -0.0039, -0.0126, -0.0164],
        [-0.0473,  0.0253,  0.0215,  ...,  0.0008,  0.0193, -0.0024],
        [-0.0121,  0.0338, -0.0139,  ..., -0.0071, -0.0112,  0.0090],
        ...,
        [ 0.0052, -0.0179,  0.0370,  ..., -0.0063, -0.0204,  0.0259],
        [ 0.0358, -0.0048,  0.0061,  ...,  0.0222, -0.0078, -0.0350],
        [ 0.0076, -0.0043, -0.0157,  ...,  0.0117,  0.0257,  0.0361]],
       device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192,);tensor([ 1.2558e-07,  1.4860e-07, -6.0457e-08, -4.4466e-08,  1.2470e-08,
        -5.7344e-08,  2.0516e-07, -1.1813e-07, -2.2501e-07, -1.6440e-07,
        -2.5704e-07,  6.2130e-08, -1.3491e-07,  4.5543e-08,  4.8169e-08,
         1.4440e-08,  6.4293e-08, -6.2427e-08,  7.5785e-08, -1.5151e-08,
        -1.0303e-07,  2.5403e-09,  2.8250e-08,  3.1938e-08, -1.2745e-07,
        -1.1364e-07, -1.1359e-07, -1.8678e-07, -1.6364e-07,  7.3470e-08,
         3.0514e-08, -8.6656e-08,  9.4295e-09,  4.5583e-08, -3.9170e-08,
        -1.5590e-07,  1.5592e-07, -6.0906e-08, -5.1350e-08,  1.4074e-07,
        -1.6255e-07,  9.7065e-08, -5.0763e-09, -1.3297e-08,  2.0578e-07,
         1.8919e-07,  7.4206e-08,  1.6244e-08,  1.3197e-07,  5.3590e-08,
         1.3795e-07,  1.1603e-07,  2.3958e-07,  3.6117e-09,  2.6750e-07,
        -1.7798e-08,  1.0652e-07, -1.2568e-07,  8.7756e-09, -1.1828e-07,
        -6.4022e-08,  1.2999e-07, -2.6085e-09, -1.1050e-07,  1.6315e-15,
        -4.3088e-15, -7.9406e-15,  2.1799e-15, -3.3594e-15, -3.0791e-15,
         1.8291e-15,  3.7262e-15, -4.8281e-16,  2.7847e-15, -3.1553e-15,
        -6.2803e-16,  1.9744e-16, -1.3096e-15, -3.6664e-16,  5.2838e-16,
         4.1066e-15, -3.7751e-15, -4.3677e-15,  1.3991e-15,  2.3283e-15,
         6.1076e-15,  1.3432e-15,  5.6994e-16,  2.2129e-15, -4.6469e-16,
        -2.3267e-15, -4.3762e-15, -2.8431e-15, -2.5436e-15,  2.3760e-15,
        -3.3547e-16,  5.6651e-15, -1.6302e-15, -2.5891e-15, -1.0778e-15,
         2.6922e-15,  3.0308e-15, -1.4399e-15,  2.4732e-15, -9.5004e-15,
        -3.0011e-15, -3.1604e-15, -2.0045e-15, -1.0218e-15, -3.3280e-16,
         2.2329e-16,  4.2307e-15, -6.2046e-15,  4.6767e-15, -1.0794e-15,
        -4.8340e-15,  1.6699e-15, -5.4143e-15,  1.6707e-15,  4.9326e-15,
        -6.4727e-15,  3.3925e-15, -3.8708e-15, -5.6022e-15, -3.7804e-15,
         1.4399e-15, -3.0131e-15,  5.1194e-15,  5.3809e-07,  8.8144e-06,
         9.0626e-06,  2.6081e-06,  1.0562e-05, -2.6099e-06, -5.6021e-06,
         3.4677e-06,  5.3525e-06,  7.1128e-06, -6.3390e-06,  7.3195e-06,
         4.1183e-06,  1.6774e-06, -2.1673e-06,  3.0851e-06, -6.1427e-06,
         5.7205e-06, -8.7275e-06,  2.4023e-06,  4.5049e-06, -9.8692e-06,
         9.0936e-06,  2.8962e-06,  4.2728e-06, -8.4141e-07,  1.0008e-05,
        -4.8311e-06,  5.3713e-06,  6.3105e-07, -2.7209e-06, -3.3891e-06,
         1.9955e-06,  3.3616e-06, -5.1492e-06,  4.7979e-07, -1.6580e-05,
         1.2172e-06,  2.6819e-06, -2.8777e-06, -6.7183e-06, -1.1936e-05,
        -3.2358e-07, -9.5692e-06,  1.1426e-06, -6.6274e-06,  4.5532e-07,
        -1.2929e-05,  1.2427e-05,  2.4648e-06,  3.2002e-06, -8.7059e-07,
         3.9710e-07, -7.3442e-06, -5.6865e-06,  2.9474e-06, -7.2968e-06,
        -7.6351e-07,  8.9504e-07, -3.6306e-06,  3.5451e-06, -2.6239e-06,
        -4.0382e-06,  2.7023e-06], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024, 64);tensor([[-0.0256,  0.0182, -0.0075,  ..., -0.0053, -0.0111, -0.0203],
        [ 0.0118, -0.0039,  0.0179,  ..., -0.0161,  0.0036, -0.0062],
        [-0.0219, -0.0058, -0.0086,  ...,  0.0256, -0.0139, -0.0168],
        ...,
        [-0.0116,  0.0102,  0.0205,  ..., -0.0018, -0.0027, -0.0042],
        [ 0.0161, -0.0220,  0.0043,  ...,  0.0091, -0.0095, -0.0055],
        [ 0.0055,  0.0104, -0.0010,  ...,  0.0231,  0.0023,  0.0251]],
       device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024,);tensor([-2.8643e-05,  1.4121e-05,  2.6624e-05,  ..., -1.0501e-05,
        -7.4630e-06,  7.3358e-06], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-1.0457e-06,  5.2020e-07,  9.7062e-07,  ..., -2.7887e-07,
        -2.7312e-07,  2.6215e-07], device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256, 1024);tensor([[-0.0328, -0.0112,  0.0022,  ...,  0.0081,  0.0110, -0.0076],
        [-0.0109,  0.0158,  0.0079,  ..., -0.0251, -0.0060, -0.0162],
        [ 0.0003,  0.0075, -0.0094,  ...,  0.0260,  0.0270, -0.0059],
        ...,
        [-0.0337,  0.0287,  0.0071,  ..., -0.0296,  0.0006,  0.0265],
        [-0.0240,  0.0360, -0.0004,  ...,  0.0094,  0.0400,  0.0123],
        [ 0.0018, -0.0189,  0.0133,  ..., -0.0414, -0.0113,  0.0080]],
       device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256,);tensor([ 3.0007e-09,  1.2717e-07,  5.5496e-08,  1.6147e-07,  1.3872e-07,
         1.7783e-07, -2.8304e-07,  2.7357e-07,  2.4246e-07, -2.0532e-07,
         3.2592e-07,  8.5561e-10, -2.7989e-07,  1.7620e-07, -2.2459e-07,
        -8.4872e-07,  4.2841e-08, -7.4306e-07,  2.7741e-07,  2.6308e-07,
         5.1089e-09, -1.5170e-07,  5.9736e-08, -8.3460e-08,  3.3277e-07,
        -5.1067e-07,  1.1100e-08, -2.9806e-07, -2.3529e-07, -3.5781e-07,
        -1.4573e-07, -3.6970e-07,  2.8222e-07,  1.3546e-07, -5.1664e-07,
        -1.2292e-07, -3.2128e-07, -1.7334e-07, -3.1528e-07, -1.7624e-07,
         4.8542e-08, -2.3601e-09, -1.2516e-07,  6.3468e-07,  1.0448e-07,
         1.3230e-07,  1.1253e-06, -4.2598e-07,  2.1123e-07,  3.2678e-08,
        -2.8967e-07, -3.4209e-07,  5.6763e-07, -4.0057e-07,  2.5228e-07,
         3.3970e-07, -3.4198e-07, -1.1060e-07,  2.7438e-07, -4.5490e-07,
         4.1626e-07,  1.6784e-07,  1.5496e-07, -5.0458e-07,  1.5034e-07,
         8.8119e-08, -2.5204e-07,  3.5288e-07,  5.6158e-08,  5.7711e-07,
        -1.3337e-07, -6.3224e-08, -6.6344e-07, -2.6360e-07,  2.4320e-07,
         4.4456e-08,  3.1712e-07, -5.7413e-07,  5.6144e-07, -1.3887e-07,
        -2.0570e-07, -2.2790e-09, -1.6727e-07,  2.4818e-07,  6.5464e-07,
         1.7434e-07, -1.8648e-07,  1.4066e-07, -4.0192e-07,  3.1372e-08,
         2.0738e-07, -1.9976e-07,  1.7994e-07,  8.6720e-07, -1.8375e-07,
        -6.1310e-08,  3.1452e-07,  2.6932e-07, -5.0000e-07, -8.2912e-09,
         4.2456e-07, -3.7628e-07,  1.1089e-07,  1.2289e-07, -1.4815e-07,
        -6.9811e-07, -9.3804e-09,  2.0017e-07, -2.0613e-07, -4.6614e-07,
        -1.1305e-07,  3.9490e-07,  2.8218e-07, -4.4528e-07, -1.9693e-07,
         7.9893e-08, -6.3995e-07,  1.7724e-07,  9.5316e-08,  8.1010e-08,
         6.3789e-07, -3.9986e-07, -3.1038e-07, -8.1064e-08, -2.7982e-07,
         3.3734e-07, -1.7340e-07, -3.9087e-07,  1.0352e-07, -8.4195e-07,
         2.6283e-07,  1.7718e-07, -5.1316e-07, -1.6353e-07,  2.6965e-07,
         1.0097e-06, -9.5331e-07, -5.6312e-07, -3.6468e-07,  6.9305e-07,
        -2.0510e-07,  6.9090e-08,  2.2618e-07, -7.6682e-07,  3.8149e-07,
        -3.2223e-07,  3.8904e-07,  6.2126e-08,  1.6416e-07, -5.1936e-07,
         4.2220e-07,  5.4205e-07,  5.8081e-08,  5.5372e-07,  4.4896e-07,
        -5.7691e-07, -1.1670e-07, -6.3733e-07,  4.5517e-07,  9.7640e-08,
         2.5423e-07,  3.8815e-07,  2.3322e-07,  2.7126e-07,  4.6290e-07,
         7.6221e-07,  2.1227e-07, -1.4866e-07, -1.6514e-07,  5.0756e-07,
         4.6864e-08, -2.5301e-08, -1.1058e-07, -2.2332e-07, -7.9177e-08,
        -4.5446e-08, -1.3973e-07,  1.6447e-07, -3.5461e-07,  7.7568e-07,
         5.2067e-08,  4.2585e-08,  7.8503e-07,  3.3980e-07, -5.4467e-07,
        -3.1361e-07,  1.4053e-07,  1.5633e-07, -7.8278e-08, -1.2772e-07,
         1.2397e-07, -4.4385e-07, -1.2942e-08,  2.4869e-07,  1.3856e-07,
        -1.5032e-09,  1.6219e-07,  1.9381e-07, -6.2664e-07, -2.3121e-07,
         6.0071e-07, -3.7026e-07,  9.8033e-08, -8.3280e-08, -1.6879e-07,
         3.4329e-07,  9.1469e-08,  5.9840e-07, -4.9907e-07,  6.9819e-07,
         1.6937e-07, -1.2673e-07, -2.8043e-07,  1.6611e-07,  4.2440e-07,
        -1.5596e-07, -5.1988e-08,  4.0023e-08, -5.5671e-07,  4.4298e-07,
        -1.6960e-07,  6.6994e-08, -2.1547e-07, -4.1641e-07,  2.1559e-07,
        -6.7078e-08,  3.8006e-07, -4.9417e-07,  4.4872e-07, -9.4447e-08,
         2.9983e-07, -3.3784e-07, -5.3320e-07,  3.1724e-07,  2.6261e-07,
        -8.6299e-09, -2.9487e-07,  2.7924e-07,  3.6444e-07,  4.5118e-07,
        -1.9076e-07,  5.3110e-07,  2.3273e-07, -1.2103e-07, -4.7336e-07,
         3.7581e-08,  2.7640e-07, -9.7808e-08,  1.7716e-07, -4.7570e-07,
         1.1528e-07, -6.8547e-07,  1.9781e-08,  5.4896e-07, -3.3928e-07,
         2.0594e-07], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024, 256);tensor([[ 0.0139,  0.0021,  0.0093,  ..., -0.0117,  0.0015, -0.0190],
        [ 0.0114,  0.0276, -0.0093,  ..., -0.0226,  0.0213,  0.0004],
        [-0.0044,  0.0030,  0.0349,  ..., -0.0155, -0.0095, -0.0040],
        ...,
        [ 0.0234,  0.0086, -0.0006,  ..., -0.0009, -0.0019,  0.0265],
        [ 0.0038,  0.0031, -0.0169,  ..., -0.0148,  0.0159,  0.0270],
        [ 0.0178,  0.0069, -0.0183,  ...,  0.0191,  0.0120,  0.0050]],
       device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([ 3.5072e-07, -6.1701e-07, -5.7381e-07,  ..., -3.1622e-06,
        -7.0885e-09,  3.4073e-07], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 2.9947e-07, -1.6608e-07, -6.6290e-07,  ..., -8.2493e-07,
        -1.9948e-07, -2.9883e-07], device='cuda:0');
