name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(3200, 1024);tensor([[ 0.0019, -0.0138, -0.0037,  ..., -0.0094,  0.0303, -0.0405],
        [-0.0010, -0.0534,  0.0089,  ..., -0.0153,  0.0148,  0.0157],
        [-0.0236,  0.0004, -0.0135,  ..., -0.0389, -0.0059, -0.0202],
        ...,
        [ 0.0109,  0.0038,  0.0105,  ...,  0.0323,  0.0423, -0.0118],
        [ 0.0218, -0.0221,  0.0193,  ..., -0.0197,  0.0228, -0.0158],
        [ 0.0456, -0.0111, -0.0056,  ..., -0.0329,  0.0397, -0.0094]],
       device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-6.8370e-06, -6.2967e-07, -2.2953e-06,  ...,  4.7200e-06,
        -2.2815e-06, -2.7902e-06], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192, 1024);tensor([[ 5.0356e-03, -1.1413e-02, -2.5243e-02,  ..., -2.0164e-02,
          5.5120e-03,  2.2024e-02],
        [ 1.0272e-02, -9.3084e-03,  2.2748e-03,  ..., -1.8345e-02,
         -6.9252e-05, -3.5861e-02],
        [-1.8075e-02,  9.3103e-03, -3.3791e-03,  ..., -9.4426e-03,
         -1.7109e-02, -5.5271e-03],
        ...,
        [ 1.2848e-02, -8.6927e-03,  1.4172e-02,  ...,  2.0691e-03,
          8.3118e-03, -3.6245e-02],
        [ 1.0424e-02,  3.8816e-02,  1.6756e-02,  ..., -5.6857e-03,
         -2.8624e-03, -2.2314e-02],
        [-6.8103e-03, -2.0521e-02, -1.0660e-02,  ..., -1.4232e-02,
          1.1882e-02, -2.0049e-02]], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192,);tensor([ 2.5317e-07,  8.4628e-08, -5.0351e-08, -1.8916e-07, -3.4015e-08,
         4.6735e-08, -5.9548e-08, -2.3133e-08, -2.9084e-08, -6.7455e-08,
        -2.2963e-09,  1.8586e-07, -1.7796e-08,  4.1730e-09,  8.0312e-08,
        -9.2752e-08,  6.5861e-08, -7.1289e-08, -1.2811e-08, -1.7321e-08,
        -1.8089e-07, -1.9646e-07, -8.8974e-08,  9.2727e-08,  1.2227e-07,
        -1.2627e-07,  4.8499e-08,  6.2129e-08, -1.5766e-07, -6.4977e-08,
         1.0416e-09, -1.0143e-08,  2.0602e-07, -1.3320e-07, -8.4324e-08,
        -6.3194e-08,  8.7473e-09, -4.0260e-08,  2.8490e-08, -2.0775e-07,
         2.1083e-07,  5.8144e-08,  1.9616e-08, -2.8121e-08,  2.7137e-07,
        -3.0647e-07, -8.2586e-08, -5.7099e-08, -2.6039e-08,  1.1082e-09,
         9.5846e-08,  5.5766e-08, -2.9741e-08,  4.7760e-08,  3.4933e-08,
        -2.4330e-09, -8.1728e-09,  1.2071e-07,  8.4262e-08, -1.3953e-07,
        -1.1567e-08, -5.0464e-09,  5.4463e-08,  3.8082e-08, -6.3928e-15,
         2.3930e-15,  4.6805e-15,  2.5510e-15, -6.6715e-15,  7.1186e-15,
         1.5939e-15,  8.4732e-16, -2.1396e-16,  1.6355e-15,  7.7852e-15,
         1.3384e-15,  5.8439e-15,  3.5089e-15,  6.3576e-16,  3.6994e-15,
         3.3640e-15, -3.1327e-15,  3.7197e-16, -3.8936e-15, -7.6819e-15,
        -2.8407e-15, -1.2134e-15, -2.8814e-15,  4.0448e-16, -2.7842e-15,
         1.6344e-15,  6.4399e-15, -1.1564e-16, -5.2811e-16, -2.6294e-15,
        -1.1288e-15,  1.9997e-15, -6.8985e-16, -1.2728e-15,  2.2068e-15,
        -6.8995e-15, -5.5460e-15,  2.9702e-15,  4.7962e-17,  5.8095e-15,
        -5.9630e-15,  1.6411e-15, -3.9129e-16,  5.1596e-15,  2.1199e-15,
         2.3320e-15,  1.9880e-15,  8.7397e-16,  1.6440e-15, -5.0869e-15,
        -3.7706e-15, -5.7261e-16, -1.5747e-16, -3.8926e-15, -6.6912e-15,
         3.6531e-15,  2.9843e-17,  6.0032e-16, -7.2182e-16, -1.7343e-15,
         1.6267e-15, -7.3221e-15,  1.1572e-15,  1.0646e-05, -1.2018e-05,
         3.0098e-06,  6.2225e-06, -5.1197e-07,  1.0421e-05, -2.0087e-06,
        -3.9906e-06, -8.7763e-06,  6.5392e-07, -6.1596e-07,  1.4017e-06,
        -4.4075e-06,  7.9591e-06, -6.4852e-06, -4.4956e-06,  7.1120e-06,
         2.2799e-06,  1.4171e-05, -5.5662e-08,  2.4841e-06,  2.7937e-06,
         6.4285e-07,  3.5725e-06, -3.8898e-06,  5.0292e-06,  6.2753e-06,
         6.3104e-06, -5.5266e-06,  5.5273e-06, -1.8192e-06,  8.0740e-06,
        -2.1996e-06,  9.8618e-07, -3.2208e-06, -8.7089e-06, -8.1262e-06,
         5.2822e-06, -7.2687e-06,  4.0924e-06, -1.3613e-06, -1.4978e-05,
        -4.6725e-06,  3.4944e-06, -5.8868e-06,  7.6459e-06,  4.8474e-06,
        -3.0228e-06, -1.1138e-06, -4.6530e-06, -3.3782e-07,  9.3116e-06,
        -1.0443e-07,  4.3695e-06,  3.9039e-06, -4.5279e-06, -3.0154e-06,
         3.9024e-06, -1.0266e-05, -9.8120e-06, -1.1526e-05,  1.0467e-05,
         4.3291e-06,  7.4708e-06], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024, 64);tensor([[-0.0073, -0.0018, -0.0181,  ..., -0.0152,  0.0076,  0.0037],
        [ 0.0171, -0.0014,  0.0046,  ...,  0.0157, -0.0070, -0.0131],
        [-0.0213,  0.0018, -0.0068,  ..., -0.0131,  0.0107, -0.0083],
        ...,
        [-0.0040,  0.0140, -0.0277,  ...,  0.0165, -0.0065,  0.0044],
        [ 0.0112,  0.0108, -0.0006,  ..., -0.0010, -0.0115,  0.0098],
        [-0.0002,  0.0123,  0.0133,  ..., -0.0085,  0.0028,  0.0013]],
       device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024,);tensor([-2.8643e-05,  1.4121e-05,  2.6624e-05,  ..., -1.0501e-05,
        -7.4630e-06,  7.3358e-06], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-1.0457e-06,  5.2020e-07,  9.7062e-07,  ..., -2.7887e-07,
        -2.7312e-07,  2.6215e-07], device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256, 1024);tensor([[-0.0025,  0.0108,  0.0142,  ..., -0.0401, -0.0021, -0.0173],
        [-0.0149,  0.0034,  0.0012,  ..., -0.0008, -0.0095,  0.0163],
        [ 0.0004,  0.0354, -0.0133,  ..., -0.0326,  0.0298,  0.0073],
        ...,
        [ 0.0251,  0.0040,  0.0435,  ..., -0.0006,  0.0194,  0.0116],
        [-0.0589,  0.0097, -0.0109,  ..., -0.0185,  0.0191,  0.0213],
        [-0.0062, -0.0359,  0.0169,  ..., -0.0327,  0.0255, -0.0261]],
       device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256,);tensor([-3.5778e-07,  3.7661e-07,  1.1382e-07, -3.8265e-07, -3.7711e-07,
        -8.1268e-07,  7.0034e-08, -3.7026e-07,  4.3924e-08,  4.3414e-07,
         3.0598e-07, -5.6542e-07,  5.4499e-07,  2.2539e-07, -4.4617e-07,
         6.5434e-07, -2.6220e-07, -1.3583e-07, -2.7736e-07,  2.1940e-07,
         4.9442e-08,  3.5764e-07, -4.0789e-07,  1.9039e-07,  7.8124e-07,
        -2.6035e-07,  3.6313e-07,  1.0326e-06,  1.4388e-07, -1.0715e-07,
         4.8271e-07,  1.5106e-07,  2.0109e-07,  3.6284e-07, -3.6403e-07,
         1.4243e-07,  3.5651e-07, -1.8137e-07,  2.9686e-07, -2.4938e-07,
        -4.8863e-08,  6.8391e-08,  6.7398e-08, -1.6980e-07,  5.2691e-07,
        -2.0624e-07, -3.3290e-07,  1.5160e-07,  4.7989e-07, -2.4988e-07,
         3.1616e-07, -2.6097e-07,  5.1254e-07, -7.2915e-08,  4.3180e-07,
         1.7197e-07, -1.4706e-07,  1.3052e-07, -1.1883e-07, -1.8616e-08,
        -7.7838e-08,  3.4484e-08, -3.7088e-07, -7.7616e-08, -2.1429e-08,
        -5.2903e-07, -6.0867e-07, -1.6803e-07, -9.5210e-08,  3.7678e-07,
         1.2903e-07,  1.1992e-07, -1.2233e-07, -2.2750e-07, -1.1770e-07,
        -5.8011e-07, -4.0565e-07, -5.5795e-07, -4.6660e-07, -7.1431e-08,
        -6.9888e-07,  5.7403e-07, -3.8045e-07, -5.1507e-08, -2.5543e-07,
        -9.1042e-08,  4.0137e-08,  2.1932e-07, -7.2560e-07, -4.1235e-07,
        -3.4632e-07, -5.4866e-07,  3.7967e-07,  1.1494e-07,  1.2853e-07,
         1.9330e-07,  4.7896e-07,  4.9240e-10,  3.5371e-07, -2.7585e-07,
         2.5894e-07, -7.5536e-08,  3.6672e-09, -7.9222e-08, -5.0189e-07,
         2.8271e-07,  2.4199e-07, -5.1532e-07, -2.4111e-07,  1.3782e-07,
         1.0821e-06, -3.6157e-08,  6.5452e-07, -1.8186e-07, -1.2103e-07,
        -2.6794e-07, -1.2905e-08,  4.4611e-07, -2.5282e-07,  6.6577e-08,
         5.8289e-07,  4.9175e-08,  1.6778e-07, -1.2636e-08, -2.5413e-07,
        -5.3833e-08,  2.2345e-07, -3.9252e-07,  1.9060e-08,  2.7250e-07,
        -4.2755e-07,  2.4057e-07, -3.0137e-07,  1.0601e-07, -6.8426e-09,
        -1.3116e-07, -2.0840e-07, -6.5282e-08, -3.3773e-07, -3.5264e-07,
         7.7393e-08, -1.4774e-07,  1.3990e-08, -5.8191e-07,  1.4719e-07,
         2.5447e-07,  3.5020e-07,  6.7662e-08,  5.0917e-07, -1.6620e-08,
         4.2780e-08,  7.1503e-07,  9.5330e-08,  3.9807e-07,  7.9255e-07,
        -4.0624e-07,  2.3518e-07,  1.7395e-07,  1.2281e-07, -7.1866e-08,
        -1.9251e-07,  2.5308e-07,  4.5572e-07, -1.6870e-07, -3.3496e-07,
         2.9118e-07,  3.7303e-07, -1.1947e-07, -1.3607e-07,  9.6268e-09,
        -5.0283e-07, -1.2433e-07, -1.4548e-08, -8.7816e-08, -1.7594e-08,
        -4.7099e-07,  5.4518e-07,  5.6415e-07,  3.0948e-07, -6.1363e-08,
         3.5585e-07,  1.6846e-08,  1.3605e-07, -1.8475e-07,  2.1765e-07,
        -1.8330e-07, -1.8939e-08,  1.8471e-07, -4.0110e-07, -2.9316e-07,
        -1.6659e-07,  3.5688e-07,  2.7165e-07,  1.0871e-07, -2.1188e-07,
         1.0662e-06, -2.6330e-07,  1.9519e-07,  4.7830e-07,  7.3382e-08,
        -2.9939e-07,  6.2621e-07,  2.1456e-07, -2.3874e-07, -1.6197e-07,
        -1.4501e-07,  2.3041e-08,  9.6085e-08,  9.6769e-08, -1.7912e-07,
        -1.8093e-07,  2.7725e-07,  4.2913e-07, -2.0071e-07, -1.7491e-08,
        -2.5222e-07,  2.3311e-07, -2.2337e-07,  2.1762e-07,  4.7314e-07,
         4.6408e-08, -1.6949e-07, -2.7287e-07, -1.6910e-07, -5.1937e-08,
         1.8878e-07, -1.8547e-07,  1.0157e-07, -1.4920e-07, -1.3768e-07,
         3.0899e-07,  5.0862e-09,  3.7375e-07, -6.2960e-07, -7.2953e-07,
        -3.5442e-07,  1.2349e-07,  3.3834e-07, -4.6054e-07,  2.2074e-07,
        -4.5735e-07,  2.5794e-07,  1.4804e-07,  9.0323e-07,  3.3801e-07,
        -2.0992e-07,  2.6452e-07, -4.8901e-07,  6.5074e-07, -2.9612e-07,
        -1.9585e-07,  1.7493e-08,  1.9574e-07,  3.3111e-07, -1.6507e-07,
         8.1209e-08], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024, 256);tensor([[-0.0006,  0.0040,  0.0111,  ...,  0.0032,  0.0068, -0.0079],
        [-0.0116,  0.0204, -0.0085,  ..., -0.0188,  0.0019, -0.0119],
        [-0.0075,  0.0147,  0.0188,  ...,  0.0346, -0.0029,  0.0280],
        ...,
        [-0.0228,  0.0060,  0.0240,  ...,  0.0028,  0.0003, -0.0315],
        [ 0.0104, -0.0087, -0.0044,  ..., -0.0183,  0.0033,  0.0082],
        [-0.0012,  0.0085,  0.0137,  ..., -0.0032, -0.0062, -0.0200]],
       device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([ 3.5072e-07, -6.1701e-07, -5.7381e-07,  ..., -3.1622e-06,
        -7.0885e-09,  3.4073e-07], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 2.9947e-07, -1.6608e-07, -6.6290e-07,  ..., -8.2493e-07,
        -1.9948e-07, -2.9883e-07], device='cuda:0');
