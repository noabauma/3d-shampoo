{ProcessCoord(pipe=0, data=0, model=0): 0, ProcessCoord(pipe=1, data=0, model=0): 1, ProcessCoord(pipe=2, data=0, model=0): 2, ProcessCoord(pipe=3, data=0, model=0): 3, ProcessCoord(pipe=4, data=0, model=0): 4, ProcessCoord(pipe=5, data=0, model=0): 5, ProcessCoord(pipe=6, data=0, model=0): 6, ProcessCoord(pipe=7, data=0, model=0): 7}
name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(50304, 1024);tensor([[ 0.0123, -0.0157,  0.0075,  ...,  0.0047,  0.0079,  0.0032],
        [ 0.0083, -0.0455, -0.0179,  ...,  0.0145,  0.0180,  0.0066],
        [-0.0314,  0.0031, -0.0170,  ...,  0.0018, -0.0125,  0.0014],
        ...,
        [-0.0402, -0.0089, -0.0064,  ...,  0.0357,  0.0119,  0.0071],
        [ 0.0005,  0.0058,  0.0004,  ..., -0.0208, -0.0137,  0.0048],
        [ 0.0082,  0.0133,  0.0015,  ..., -0.0041,  0.0219,  0.0099]],
       device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-2.8574e-07, -2.7137e-07, -1.1922e-06,  ...,  8.5279e-07,
         3.5603e-07,  3.0146e-07], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(3072, 1024);tensor([[-0.0209, -0.0273,  0.0190,  ..., -0.0163, -0.0063, -0.0368],
        [ 0.0245,  0.0264,  0.0184,  ..., -0.0211,  0.0041,  0.0075],
        [ 0.0180, -0.0060,  0.0090,  ...,  0.0099,  0.0222,  0.0080],
        ...,
        [ 0.0229, -0.0417, -0.0058,  ...,  0.0309, -0.0238,  0.0078],
        [ 0.0190,  0.0167, -0.0154,  ..., -0.0353, -0.0567, -0.0253],
        [ 0.0251, -0.0102, -0.0088,  ..., -0.0330, -0.0221, -0.0031]],
       device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(3072,);tensor([-1.2135e-08, -3.9650e-08, -2.8499e-08,  ...,  1.8051e-06,
         2.0885e-06, -1.6056e-07], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024, 1024);tensor([[-0.0094,  0.0105,  0.0002,  ...,  0.0011, -0.0011, -0.0053],
        [-0.0013,  0.0026,  0.0064,  ..., -0.0070,  0.0060,  0.0043],
        [ 0.0120, -0.0036,  0.0024,  ..., -0.0085,  0.0027,  0.0016],
        ...,
        [ 0.0015,  0.0047,  0.0072,  ..., -0.0040, -0.0042,  0.0098],
        [-0.0088,  0.0080, -0.0029,  ...,  0.0009,  0.0052,  0.0054],
        [-0.0014,  0.0103,  0.0024,  ...,  0.0012, -0.0047, -0.0045]],
       device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024,);tensor([ 1.5164e-06,  1.8286e-06, -8.8742e-06,  ...,  6.5636e-07,
         3.7346e-08, -3.0786e-06], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 1.5554e-07,  3.3085e-08, -3.8522e-07,  ...,  3.8643e-08,
         1.0692e-07, -1.0566e-07], device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(4096, 1024);tensor([[ 0.0010,  0.0121,  0.0361,  ..., -0.0050,  0.0004,  0.0269],
        [ 0.0093, -0.0054, -0.0212,  ..., -0.0100, -0.0510, -0.0200],
        [-0.0059, -0.0614, -0.0540,  ..., -0.0108,  0.0058, -0.0245],
        ...,
        [-0.0159, -0.0038, -0.0378,  ..., -0.0140, -0.0242, -0.0176],
        [-0.0148,  0.0340, -0.0015,  ..., -0.0006, -0.0283, -0.0283],
        [-0.0227, -0.0190,  0.0181,  ...,  0.0146, -0.0186,  0.0036]],
       device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(4096,);tensor([-1.8882e-07,  2.1089e-07,  2.1305e-07,  ..., -2.4291e-07,
        -1.1900e-07, -1.6497e-07], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024, 4096);tensor([[ 4.5605e-05, -3.9502e-03, -1.8946e-03,  ..., -7.8337e-03,
          6.0527e-03,  4.7138e-03],
        [ 4.4205e-04, -4.7119e-03, -2.6023e-03,  ..., -3.3961e-03,
          1.2399e-03, -3.5693e-03],
        [ 4.3224e-03, -2.4333e-03, -5.4259e-03,  ...,  5.2022e-03,
          3.9249e-03, -4.9505e-03],
        ...,
        [ 2.0540e-03,  3.2826e-03,  7.0715e-03,  ...,  2.5178e-03,
         -1.0581e-02,  8.3152e-03],
        [ 7.8207e-03,  6.8619e-04, -7.0087e-03,  ...,  1.6407e-02,
         -7.3835e-04, -6.3821e-03],
        [-1.8196e-03,  9.6986e-03, -4.3122e-03,  ...,  9.5250e-03,
         -1.9392e-04,  3.9652e-04]], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([-3.0496e-06,  1.4818e-06,  2.3312e-06,  ...,  1.8156e-07,
        -3.4727e-06, -3.6313e-07], device='cuda:0');
