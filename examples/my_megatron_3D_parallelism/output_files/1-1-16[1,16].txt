name;module;shape;parameters
module.tied_modules.embed.word_embeddings;VocabParallelEmbedding();(3200, 1024);tensor([[-0.0027,  0.0215, -0.0055,  ..., -0.0199,  0.0051,  0.0159],
        [-0.0050,  0.0148,  0.0032,  ..., -0.0099, -0.0060,  0.0020],
        [-0.0137, -0.0132, -0.0079,  ..., -0.0023,  0.0008, -0.0156],
        ...,
        [ 0.0052,  0.0018, -0.0046,  ..., -0.0339,  0.0114,  0.0104],
        [ 0.0145, -0.0193,  0.0308,  ..., -0.0075,  0.0414,  0.0257],
        [ 0.0164,  0.0406, -0.0021,  ...,  0.0328,  0.0143, -0.0039]],
       device='cuda:0');
module.tied_modules.embed.position_embeddings;Embedding(1024, 1024);(1024, 1024);tensor([[-0.0130,  0.0139,  0.0489,  ...,  0.0174, -0.0157,  0.0094],
        [-0.0360,  0.0233, -0.0218,  ...,  0.0372, -0.0131, -0.0235],
        [-0.0001, -0.0333,  0.0098,  ..., -0.0026, -0.0134,  0.0163],
        ...,
        [ 0.0174,  0.0488, -0.0296,  ..., -0.0296,  0.0321, -0.0157],
        [ 0.0169,  0.0214, -0.0077,  ..., -0.0241, -0.0114,  0.0039],
        [-0.0063,  0.0076, -0.0233,  ..., -0.0020, -0.0520,  0.0020]],
       device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.input_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-6.8370e-06, -6.2967e-07, -2.2953e-06,  ...,  4.7200e-06,
        -2.2815e-06, -2.7902e-06], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192, 1024);tensor([[ 6.7137e-04, -1.8602e-02, -1.7742e-05,  ..., -1.8175e-02,
         -1.3592e-02,  3.3006e-05],
        [ 1.2316e-02,  1.0377e-03,  6.0248e-03,  ..., -9.8829e-03,
          7.6148e-03, -3.1473e-02],
        [-3.9093e-02, -1.2964e-02, -2.0300e-02,  ...,  3.5019e-03,
         -5.4776e-03,  9.6372e-03],
        ...,
        [ 1.7877e-02, -3.4521e-02,  2.9194e-03,  ..., -6.8218e-03,
          7.6538e-03, -7.6772e-03],
        [-7.2557e-03, -2.1509e-02,  2.3351e-02,  ..., -2.6034e-02,
          2.1102e-02, -3.7829e-03],
        [-1.5586e-02, -3.2073e-02, -7.6407e-03,  ..., -7.4841e-04,
         -1.9188e-02, -1.4521e-02]], device='cuda:0');
module.2.attention.query_key_value;ColumnParallelLinear();(192,);tensor([-2.4024e-09, -8.8281e-08,  1.1955e-08,  1.8191e-07,  2.6526e-08,
         8.2179e-08, -6.8893e-08, -8.9077e-08, -2.8188e-08, -9.7683e-08,
        -6.6288e-08, -1.4890e-08,  1.4860e-07,  9.9921e-08,  7.6952e-09,
         1.5586e-07,  3.4572e-08, -2.1800e-08,  3.0741e-08, -2.7157e-08,
         3.0175e-08,  1.4487e-07,  3.9759e-08, -5.1633e-08, -6.9539e-08,
        -1.7521e-07,  5.5434e-08, -5.4334e-08,  1.0087e-07,  7.1840e-08,
         1.9087e-08, -1.2874e-07, -8.3235e-08, -1.6152e-07,  6.6980e-08,
        -3.5385e-09,  2.6521e-07,  4.8553e-08,  2.1235e-08, -6.2321e-08,
        -6.9953e-08,  3.8366e-08, -8.2740e-08, -5.9963e-08, -1.7407e-08,
        -1.0471e-07, -1.1767e-07,  2.8201e-08,  6.7850e-08, -1.1062e-07,
         1.8614e-08, -8.1576e-08,  3.8973e-08, -5.6395e-08, -6.3367e-09,
         5.6549e-08, -6.6613e-08, -5.8404e-08,  2.7340e-08, -4.3141e-08,
        -1.0554e-07, -4.8514e-08,  1.2070e-07,  4.4862e-08,  8.7104e-15,
         1.9829e-15, -3.0032e-15,  5.4098e-15, -8.2986e-15,  3.0714e-15,
         2.7445e-15,  2.2281e-15,  1.9033e-15,  1.7866e-15,  2.9454e-15,
         2.9033e-15, -3.0879e-15, -8.8995e-17,  1.2784e-15,  2.5771e-15,
         3.1815e-16, -3.9291e-15,  5.4884e-15, -5.9318e-15, -3.1396e-15,
         6.8026e-16, -2.1743e-15, -2.8830e-15,  1.4450e-15, -2.1220e-15,
         2.1476e-15,  3.6869e-15, -1.3656e-14,  3.8396e-16, -4.4786e-15,
        -1.2649e-15, -5.1647e-15,  3.1785e-15, -4.8678e-15, -1.0107e-15,
        -1.4183e-15,  3.7096e-15, -2.4354e-15, -1.3533e-15, -8.9566e-15,
         7.6685e-16, -9.9041e-16, -2.9534e-15, -4.4943e-15, -5.9712e-16,
        -1.1942e-15, -5.8913e-16, -2.0061e-15,  6.8580e-15,  2.8998e-15,
        -2.8777e-16,  4.2998e-15, -2.3038e-15,  5.2118e-16, -1.0547e-14,
        -2.0765e-15, -8.8905e-15, -6.5095e-16, -2.8377e-16,  5.1889e-15,
        -1.6051e-15, -6.4668e-15, -3.2747e-16, -2.1467e-06,  3.9594e-06,
         6.3933e-06,  9.6429e-06, -4.0631e-06,  2.2864e-06, -7.2682e-06,
         9.0551e-06,  4.5585e-06,  1.0841e-05, -1.2138e-06,  7.2563e-06,
         1.1955e-06,  4.7640e-06,  2.2304e-06, -1.1660e-06, -5.6979e-07,
        -3.8264e-06, -5.7808e-06, -4.6049e-06, -4.3493e-06, -3.0566e-06,
        -6.1805e-06, -9.0534e-06,  7.0527e-06, -9.4863e-06, -7.7885e-06,
        -9.8294e-06, -2.8453e-06,  1.1131e-06, -2.0403e-06, -6.4989e-06,
         9.2180e-06,  9.9885e-06,  2.0295e-06, -8.0508e-06,  1.5863e-06,
         8.2176e-06, -4.1132e-06, -4.8345e-06,  2.1699e-06,  9.1903e-06,
         2.2442e-07,  2.2217e-06,  4.3115e-06,  6.4128e-06, -1.8217e-06,
        -8.4217e-06,  6.0909e-06, -3.7081e-06, -1.0277e-07,  4.4787e-06,
        -5.9755e-06,  1.0081e-07, -6.8116e-08,  5.5484e-06,  8.4106e-06,
         6.5189e-06, -6.9800e-06,  1.4353e-06,  2.1962e-06, -3.3074e-06,
         3.8012e-06, -3.8744e-06], device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024, 64);tensor([[-0.0152, -0.0012,  0.0030,  ...,  0.0308, -0.0038,  0.0048],
        [ 0.0028,  0.0202, -0.0004,  ...,  0.0067,  0.0328,  0.0025],
        [ 0.0040,  0.0239,  0.0073,  ..., -0.0183, -0.0064, -0.0126],
        ...,
        [-0.0024,  0.0027,  0.0199,  ..., -0.0039,  0.0007,  0.0270],
        [ 0.0011,  0.0159,  0.0103,  ...,  0.0006,  0.0048, -0.0053],
        [ 0.0081,  0.0083, -0.0155,  ...,  0.0105,  0.0040, -0.0026]],
       device='cuda:0');
module.2.attention.dense;RowParallelLinear();(1024,);tensor([-2.8643e-05,  1.4121e-05,  2.6624e-05,  ..., -1.0501e-05,
        -7.4630e-06,  7.3358e-06], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.2.post_attention_layernorm;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([-1.0457e-06,  5.2020e-07,  9.7062e-07,  ..., -2.7887e-07,
        -2.7312e-07,  2.6215e-07], device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256, 1024);tensor([[ 0.0207, -0.0174, -0.0185,  ..., -0.0167, -0.0084, -0.0449],
        [ 0.0411, -0.0055,  0.0108,  ...,  0.0104,  0.0186,  0.0018],
        [ 0.0041,  0.0093,  0.0079,  ..., -0.0430, -0.0017,  0.0065],
        ...,
        [-0.0035,  0.0216,  0.0158,  ...,  0.0144,  0.0015,  0.0063],
        [ 0.0072, -0.0063,  0.0150,  ..., -0.0106, -0.0197, -0.0118],
        [ 0.0173,  0.0141, -0.0040,  ...,  0.0094,  0.0142, -0.0172]],
       device='cuda:0');
module.2.mlp.dense_h_to_4h;ColumnParallelLinear();(256,);tensor([-7.4470e-07,  2.1156e-07, -3.9141e-07, -7.5805e-08, -3.6068e-07,
        -6.5974e-07, -1.7718e-07, -4.0705e-07,  4.0484e-07,  1.8080e-07,
        -1.0754e-06,  8.1908e-07,  5.0517e-07,  4.7427e-08,  1.6032e-07,
         8.1334e-08, -2.5264e-07,  2.7747e-08, -3.8199e-07,  1.1066e-06,
         5.1031e-07, -5.9004e-07,  4.3629e-07, -4.6242e-08, -4.1718e-07,
        -2.4658e-07, -4.0360e-08,  1.2972e-07, -1.4894e-07, -3.2464e-07,
         7.4142e-08, -2.0755e-07,  2.5566e-07,  2.1938e-07, -1.2931e-07,
        -1.0660e-07, -8.4252e-07, -5.2685e-07,  2.5216e-07,  4.1535e-07,
         1.5462e-07,  1.3312e-07, -3.3334e-07,  4.1275e-07,  6.7546e-08,
        -7.4369e-08, -1.4404e-07,  3.4638e-07,  1.7514e-07,  3.1320e-08,
         9.2952e-07, -3.4219e-07, -3.0381e-07, -1.3927e-07, -2.5596e-07,
         6.5047e-07,  4.7640e-07, -1.5810e-07, -1.1215e-07,  5.5022e-07,
         2.4408e-08,  1.0500e-08,  1.4720e-07, -3.8985e-07, -3.9314e-07,
         4.7287e-08, -1.0701e-07, -5.6400e-07, -1.1744e-07, -1.1149e-07,
        -2.7639e-07, -3.6647e-08,  1.7554e-07, -1.9697e-07, -4.4344e-07,
         7.2577e-07,  3.7209e-07,  3.8883e-07,  1.0808e-07,  4.9533e-07,
         2.5770e-08,  2.2877e-07,  1.7195e-07,  3.4701e-07,  3.6586e-08,
         4.1246e-07, -2.6541e-07,  4.5469e-07, -3.0489e-07, -2.2175e-07,
        -1.5034e-08,  5.2752e-07,  1.3728e-07, -1.0515e-07, -5.0536e-07,
         3.3509e-07,  4.0373e-08, -3.5765e-08,  9.3916e-07,  3.8242e-07,
        -4.1866e-07,  2.8072e-07, -3.4464e-07, -5.2985e-07, -2.1709e-08,
         2.3200e-07, -3.5573e-07, -3.9009e-07,  2.8546e-07, -2.7233e-07,
        -1.1378e-07,  4.4335e-07, -2.1813e-07,  3.9756e-07,  3.0366e-07,
        -9.0087e-08,  1.0948e-07, -3.2127e-07, -5.3492e-07, -3.0352e-07,
         3.8381e-07,  1.2156e-07, -1.6956e-07, -1.9283e-07,  6.0196e-07,
         4.4687e-07,  9.0160e-07, -4.6089e-07,  2.1644e-07,  6.1068e-08,
         5.6461e-07, -9.4935e-08, -1.8906e-09,  3.1829e-07,  2.7878e-07,
         1.9448e-07,  5.4835e-07,  1.2175e-07, -1.3440e-07, -9.1909e-08,
        -2.8451e-07, -4.3307e-08, -9.1847e-08, -1.4907e-07,  5.8371e-07,
         1.2100e-08,  6.6556e-07,  1.4925e-07,  2.3863e-08, -1.5045e-07,
        -3.1883e-08, -8.0048e-07, -9.3280e-08, -2.3733e-07, -4.9604e-07,
         1.0758e-07,  2.4750e-07, -3.1841e-07,  1.3195e-07,  2.6984e-07,
         1.0772e-06, -2.6597e-07,  3.2456e-07,  5.5095e-07,  1.1117e-07,
         5.7854e-08,  1.7905e-07, -4.9111e-07,  2.0582e-07, -5.1048e-08,
         5.4477e-07,  4.0727e-07, -3.4118e-07, -3.7711e-07, -5.8851e-07,
         5.4849e-07,  3.9647e-07,  1.5579e-07,  2.0129e-07, -1.0623e-07,
         1.0296e-06,  2.4655e-07, -1.5820e-07,  2.3586e-07, -1.0835e-07,
         8.4567e-08, -9.0481e-08,  2.1362e-07,  2.1127e-07, -4.3483e-08,
        -1.9742e-07, -6.4078e-07, -9.6699e-08,  3.0012e-07,  1.0289e-07,
        -4.6045e-07, -2.8382e-07, -5.0574e-07,  6.6797e-09, -2.2365e-07,
         2.0127e-07,  5.0899e-07,  6.9691e-09,  1.5886e-07, -1.8044e-07,
        -3.6083e-07,  4.3276e-08, -6.0774e-07, -1.6097e-07, -4.4616e-07,
         5.5727e-07,  9.2199e-08,  3.4557e-08, -3.6877e-07, -2.8363e-07,
        -1.7445e-07,  9.2968e-08,  1.2728e-07, -5.2781e-07, -1.1304e-07,
        -4.4464e-08, -2.6937e-07,  2.3068e-07, -2.9320e-07, -3.8827e-07,
        -1.8179e-07,  1.5043e-07, -1.5593e-08, -1.5024e-07,  3.0183e-07,
         1.0987e-07, -2.4696e-07,  5.2320e-07,  2.2697e-07,  1.5615e-07,
         8.6189e-07, -3.2103e-07, -1.4689e-07,  1.3826e-07, -4.6066e-07,
         1.4216e-07, -1.5049e-07,  4.0099e-07, -1.7978e-07, -4.0756e-07,
        -9.1477e-08,  5.6820e-07, -7.0950e-09, -4.6347e-07, -1.9811e-07,
         2.2617e-07, -1.2140e-07, -2.7843e-07, -2.7399e-07,  4.2036e-07,
        -2.8390e-07], device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024, 256);tensor([[ 0.0055,  0.0368,  0.0053,  ..., -0.0134,  0.0335, -0.0189],
        [ 0.0221, -0.0075, -0.0019,  ..., -0.0333, -0.0130, -0.0038],
        [-0.0246, -0.0129,  0.0065,  ...,  0.0005,  0.0086,  0.0207],
        ...,
        [ 0.0081,  0.0186, -0.0183,  ...,  0.0036,  0.0057, -0.0151],
        [-0.0179,  0.0056,  0.0039,  ..., -0.0159, -0.0166, -0.0176],
        [ 0.0042,  0.0202,  0.0008,  ..., -0.0261, -0.0107, -0.0033]],
       device='cuda:0');
module.2.mlp.dense_4h_to_h;RowParallelLinear();(1024,);tensor([ 3.5072e-07, -6.1701e-07, -5.7381e-07,  ..., -3.1622e-06,
        -7.0885e-09,  3.4073e-07], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([1.0000, 1.0000, 1.0000,  ..., 1.0000, 1.0000, 1.0000], device='cuda:0');
module.4;FusedLayerNorm(torch.Size([1024]), eps=1e-05, elementwise_affine=True);(1024,);tensor([ 2.9947e-07, -1.6608e-07, -6.6290e-07,  ..., -8.2493e-07,
        -1.9948e-07, -2.9883e-07], device='cuda:0');
